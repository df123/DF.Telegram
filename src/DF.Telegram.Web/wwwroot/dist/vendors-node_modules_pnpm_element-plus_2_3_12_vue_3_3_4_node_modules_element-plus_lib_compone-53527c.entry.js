"use strict";
(self["webpackChunkDF_Telegram_VueApp"] = self["webpackChunkDF_Telegram_VueApp"] || []).push([["vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-53527c"],{

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/index.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var menu = __webpack_require__(/*! ./src/menu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu.js");
var menuItem$1 = __webpack_require__(/*! ./src/menu-item2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item2.js");
var menuItemGroup$1 = __webpack_require__(/*! ./src/menu-item-group2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group2.js");
var subMenu = __webpack_require__(/*! ./src/sub-menu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/sub-menu.js");
var menuItem = __webpack_require__(/*! ./src/menu-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item.js");
var menuItemGroup = __webpack_require__(/*! ./src/menu-item-group.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group.js");
__webpack_require__(/*! ./src/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/types.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElMenu = install.withInstall(menu["default"], {
  MenuItem: menuItem$1["default"],
  MenuItemGroup: menuItemGroup$1["default"],
  SubMenu: subMenu["default"]
});
const ElMenuItem = install.withNoopInstall(menuItem$1["default"]);
const ElMenuItemGroup = install.withNoopInstall(menuItemGroup$1["default"]);
const ElSubMenu = install.withNoopInstall(subMenu["default"]);

exports.menuEmits = menu.menuEmits;
exports.menuProps = menu.menuProps;
exports.subMenuProps = subMenu.subMenuProps;
exports.menuItemEmits = menuItem.menuItemEmits;
exports.menuItemProps = menuItem.menuItemProps;
exports.menuItemGroupProps = menuItemGroup.menuItemGroupProps;
exports.ElMenu = ElMenu;
exports.ElMenuItem = ElMenuItem;
exports.ElMenuItemGroup = ElMenuItemGroup;
exports.ElSubMenu = ElSubMenu;
exports["default"] = ElMenu;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-collapse-transition.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-collapse-transition.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var style = __webpack_require__(/*! ../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

const _sfc_main = vue.defineComponent({
  name: "ElMenuCollapseTransition",
  setup() {
    const ns = index.useNamespace("menu");
    const listeners = {
      onBeforeEnter: (el) => el.style.opacity = "0.2",
      onEnter(el, done) {
        style.addClass(el, `${ns.namespace.value}-opacity-transition`);
        el.style.opacity = "1";
        done();
      },
      onAfterEnter(el) {
        style.removeClass(el, `${ns.namespace.value}-opacity-transition`);
        el.style.opacity = "";
      },
      onBeforeLeave(el) {
        if (!el.dataset) {
          ;
          el.dataset = {};
        }
        if (style.hasClass(el, ns.m("collapse"))) {
          style.removeClass(el, ns.m("collapse"));
          el.dataset.oldOverflow = el.style.overflow;
          el.dataset.scrollWidth = el.clientWidth.toString();
          style.addClass(el, ns.m("collapse"));
        } else {
          style.addClass(el, ns.m("collapse"));
          el.dataset.oldOverflow = el.style.overflow;
          el.dataset.scrollWidth = el.clientWidth.toString();
          style.removeClass(el, ns.m("collapse"));
        }
        el.style.width = `${el.scrollWidth}px`;
        el.style.overflow = "hidden";
      },
      onLeave(el) {
        style.addClass(el, "horizontal-collapse-transition");
        el.style.width = `${el.dataset.scrollWidth}px`;
      }
    };
    return {
      listeners
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return vue.openBlock(), vue.createBlock(vue.Transition, vue.mergeProps({ mode: "out-in" }, _ctx.listeners), {
    default: vue.withCtx(() => [
      vue.renderSlot(_ctx.$slots, "default")
    ]),
    _: 3
  }, 16);
}
var ElMenuCollapseTransition = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-collapse-transition.vue"]]);

exports["default"] = ElMenuCollapseTransition;
//# sourceMappingURL=menu-collapse-transition.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const menuItemGroupProps = {
  title: String
};

exports.menuItemGroupProps = menuItemGroupProps;
//# sourceMappingURL=menu-item-group.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group2.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group2.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var menuItemGroup = __webpack_require__(/*! ./menu-item-group.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item-group.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const COMPONENT_NAME = "ElMenuItemGroup";
const _sfc_main = vue.defineComponent({
  name: COMPONENT_NAME,
  props: menuItemGroup.menuItemGroupProps,
  setup() {
    const ns = index.useNamespace("menu-item-group");
    return {
      ns
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return vue.openBlock(), vue.createElementBlock("li", {
    class: vue.normalizeClass(_ctx.ns.b())
  }, [
    vue.createElementVNode("div", {
      class: vue.normalizeClass(_ctx.ns.e("title"))
    }, [
      !_ctx.$slots.title ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 0 }, [
        vue.createTextVNode(vue.toDisplayString(_ctx.title), 1)
      ], 64)) : vue.renderSlot(_ctx.$slots, "title", { key: 1 })
    ], 2),
    vue.createElementVNode("ul", null, [
      vue.renderSlot(_ctx.$slots, "default")
    ])
  ], 2);
}
var MenuItemGroup = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item-group.vue"]]);

exports["default"] = MenuItemGroup;
//# sourceMappingURL=menu-item-group2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const menuItemProps = runtime.buildProps({
  index: {
    type: runtime.definePropType([String, null]),
    default: null
  },
  route: {
    type: runtime.definePropType([String, Object])
  },
  disabled: Boolean
});
const menuItemEmits = {
  click: (item) => shared.isString(item.index) && Array.isArray(item.indexPath)
};

exports.menuItemEmits = menuItemEmits;
exports.menuItemProps = menuItemProps;
//# sourceMappingURL=menu-item.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item2.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item2.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../tooltip/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var useMenu = __webpack_require__(/*! ./use-menu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu.js");
var menuItem = __webpack_require__(/*! ./menu-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-item.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const COMPONENT_NAME = "ElMenuItem";
const _sfc_main = vue.defineComponent({
  name: COMPONENT_NAME,
  components: {
    ElTooltip: index.ElTooltip
  },
  props: menuItem.menuItemProps,
  emits: menuItem.menuItemEmits,
  setup(props, { emit }) {
    const instance = vue.getCurrentInstance();
    const rootMenu = vue.inject("rootMenu");
    const nsMenu = index$1.useNamespace("menu");
    const nsMenuItem = index$1.useNamespace("menu-item");
    if (!rootMenu)
      error.throwError(COMPONENT_NAME, "can not inject root menu");
    const { parentMenu, indexPath } = useMenu["default"](instance, vue.toRef(props, "index"));
    const subMenu = vue.inject(`subMenu:${parentMenu.value.uid}`);
    if (!subMenu)
      error.throwError(COMPONENT_NAME, "can not inject sub menu");
    const active = vue.computed(() => props.index === rootMenu.activeIndex);
    const item = vue.reactive({
      index: props.index,
      indexPath,
      active
    });
    const handleClick = () => {
      if (!props.disabled) {
        rootMenu.handleMenuItemClick({
          index: props.index,
          indexPath: indexPath.value,
          route: props.route
        });
        emit("click", item);
      }
    };
    vue.onMounted(() => {
      subMenu.addSubMenu(item);
      rootMenu.addMenuItem(item);
    });
    vue.onBeforeUnmount(() => {
      subMenu.removeSubMenu(item);
      rootMenu.removeMenuItem(item);
    });
    return {
      parentMenu,
      rootMenu,
      active,
      nsMenu,
      nsMenuItem,
      handleClick
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tooltip = vue.resolveComponent("el-tooltip");
  return vue.openBlock(), vue.createElementBlock("li", {
    class: vue.normalizeClass([
      _ctx.nsMenuItem.b(),
      _ctx.nsMenuItem.is("active", _ctx.active),
      _ctx.nsMenuItem.is("disabled", _ctx.disabled)
    ]),
    role: "menuitem",
    tabindex: "-1",
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    _ctx.parentMenu.type.name === "ElMenu" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (vue.openBlock(), vue.createBlock(_component_el_tooltip, {
      key: 0,
      effect: _ctx.rootMenu.props.popperEffect,
      placement: "right",
      "fallback-placements": ["left"],
      persistent: ""
    }, {
      content: vue.withCtx(() => [
        vue.renderSlot(_ctx.$slots, "title")
      ]),
      default: vue.withCtx(() => [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(_ctx.nsMenu.be("tooltip", "trigger"))
        }, [
          vue.renderSlot(_ctx.$slots, "default")
        ], 2)
      ]),
      _: 3
    }, 8, ["effect"])) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
      vue.renderSlot(_ctx.$slots, "default"),
      vue.renderSlot(_ctx.$slots, "title")
    ], 64))
  ], 2);
}
var MenuItem = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item.vue"]]);

exports["default"] = MenuItem;
//# sourceMappingURL=menu-item2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var menuBar = __webpack_require__(/*! ./utils/menu-bar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-bar.js");
var menuCollapseTransition = __webpack_require__(/*! ./menu-collapse-transition.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/menu-collapse-transition.js");
var subMenu = __webpack_require__(/*! ./sub-menu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/sub-menu.js");
var useMenuCssVar = __webpack_require__(/*! ./use-menu-css-var.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-css-var.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var vnode = __webpack_require__(/*! ../../../utils/vue/vnode.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/vnode.js");

const menuProps = runtime.buildProps({
  mode: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "vertical"
  },
  defaultActive: {
    type: String,
    default: ""
  },
  defaultOpeneds: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  uniqueOpened: Boolean,
  router: Boolean,
  menuTrigger: {
    type: String,
    values: ["hover", "click"],
    default: "hover"
  },
  collapse: Boolean,
  backgroundColor: String,
  textColor: String,
  activeTextColor: String,
  collapseTransition: {
    type: Boolean,
    default: true
  },
  ellipsis: {
    type: Boolean,
    default: true
  },
  popperEffect: {
    type: String,
    values: ["dark", "light"],
    default: "dark"
  }
});
const checkIndexPath = (indexPath) => Array.isArray(indexPath) && indexPath.every((path) => shared.isString(path));
const menuEmits = {
  close: (index, indexPath) => shared.isString(index) && checkIndexPath(indexPath),
  open: (index, indexPath) => shared.isString(index) && checkIndexPath(indexPath),
  select: (index, indexPath, item, routerResult) => shared.isString(index) && checkIndexPath(indexPath) && shared.isObject(item) && (routerResult === void 0 || routerResult instanceof Promise)
};
var Menu = vue.defineComponent({
  name: "ElMenu",
  props: menuProps,
  emits: menuEmits,
  setup(props, { emit, slots, expose }) {
    const instance = vue.getCurrentInstance();
    const router = instance.appContext.config.globalProperties.$router;
    const menu = vue.ref();
    const nsMenu = index.useNamespace("menu");
    const nsSubMenu = index.useNamespace("sub-menu");
    const sliceIndex = vue.ref(-1);
    const openedMenus = vue.ref(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);
    const activeIndex = vue.ref(props.defaultActive);
    const items = vue.ref({});
    const subMenus = vue.ref({});
    const isMenuPopup = vue.computed(() => {
      return props.mode === "horizontal" || props.mode === "vertical" && props.collapse;
    });
    const initMenu = () => {
      const activeItem = activeIndex.value && items.value[activeIndex.value];
      if (!activeItem || props.mode === "horizontal" || props.collapse)
        return;
      const indexPath = activeItem.indexPath;
      indexPath.forEach((index) => {
        const subMenu = subMenus.value[index];
        subMenu && openMenu(index, subMenu.indexPath);
      });
    };
    const openMenu = (index, indexPath) => {
      if (openedMenus.value.includes(index))
        return;
      if (props.uniqueOpened) {
        openedMenus.value = openedMenus.value.filter((index2) => indexPath.includes(index2));
      }
      openedMenus.value.push(index);
      emit("open", index, indexPath);
    };
    const close = (index) => {
      const i = openedMenus.value.indexOf(index);
      if (i !== -1) {
        openedMenus.value.splice(i, 1);
      }
    };
    const closeMenu = (index, indexPath) => {
      close(index);
      emit("close", index, indexPath);
    };
    const handleSubMenuClick = ({
      index,
      indexPath
    }) => {
      const isOpened = openedMenus.value.includes(index);
      if (isOpened) {
        closeMenu(index, indexPath);
      } else {
        openMenu(index, indexPath);
      }
    };
    const handleMenuItemClick = (menuItem) => {
      if (props.mode === "horizontal" || props.collapse) {
        openedMenus.value = [];
      }
      const { index, indexPath } = menuItem;
      if (lodashUnified.isNil(index) || lodashUnified.isNil(indexPath))
        return;
      if (props.router && router) {
        const route = menuItem.route || index;
        const routerResult = router.push(route).then((res) => {
          if (!res)
            activeIndex.value = index;
          return res;
        });
        emit("select", index, indexPath, { index, indexPath, route }, routerResult);
      } else {
        activeIndex.value = index;
        emit("select", index, indexPath, { index, indexPath });
      }
    };
    const updateActiveIndex = (val) => {
      const itemsInData = items.value;
      const item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];
      if (item) {
        activeIndex.value = item.index;
      } else {
        activeIndex.value = val;
      }
    };
    const calcSliceIndex = () => {
      var _a, _b;
      if (!menu.value)
        return -1;
      const items2 = Array.from((_b = (_a = menu.value) == null ? void 0 : _a.childNodes) != null ? _b : []).filter((item) => item.nodeName !== "#comment" && (item.nodeName !== "#text" || item.nodeValue));
      const moreItemWidth = 64;
      const paddingLeft = Number.parseInt(getComputedStyle(menu.value).paddingLeft, 10);
      const paddingRight = Number.parseInt(getComputedStyle(menu.value).paddingRight, 10);
      const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;
      let calcWidth = 0;
      let sliceIndex2 = 0;
      items2.forEach((item, index) => {
        calcWidth += item.offsetWidth || 0;
        if (calcWidth <= menuWidth - moreItemWidth) {
          sliceIndex2 = index + 1;
        }
      });
      return sliceIndex2 === items2.length ? -1 : sliceIndex2;
    };
    const debounce = (fn, wait = 33.34) => {
      let timmer;
      return () => {
        timmer && clearTimeout(timmer);
        timmer = setTimeout(() => {
          fn();
        }, wait);
      };
    };
    let isFirstTimeRender = true;
    const handleResize = () => {
      const callback = () => {
        sliceIndex.value = -1;
        vue.nextTick(() => {
          sliceIndex.value = calcSliceIndex();
        });
      };
      isFirstTimeRender ? callback() : debounce(callback)();
      isFirstTimeRender = false;
    };
    vue.watch(() => props.defaultActive, (currentActive) => {
      if (!items.value[currentActive]) {
        activeIndex.value = "";
      }
      updateActiveIndex(currentActive);
    });
    vue.watch(() => props.collapse, (value) => {
      if (value)
        openedMenus.value = [];
    });
    vue.watch(items.value, initMenu);
    let resizeStopper;
    vue.watchEffect(() => {
      if (props.mode === "horizontal" && props.ellipsis)
        resizeStopper = core.useResizeObserver(menu, handleResize).stop;
      else
        resizeStopper == null ? void 0 : resizeStopper();
    });
    {
      const addSubMenu = (item) => {
        subMenus.value[item.index] = item;
      };
      const removeSubMenu = (item) => {
        delete subMenus.value[item.index];
      };
      const addMenuItem = (item) => {
        items.value[item.index] = item;
      };
      const removeMenuItem = (item) => {
        delete items.value[item.index];
      };
      vue.provide("rootMenu", vue.reactive({
        props,
        openedMenus,
        items,
        subMenus,
        activeIndex,
        isMenuPopup,
        addMenuItem,
        removeMenuItem,
        addSubMenu,
        removeSubMenu,
        openMenu,
        closeMenu,
        handleMenuItemClick,
        handleSubMenuClick
      }));
      vue.provide(`subMenu:${instance.uid}`, {
        addSubMenu,
        removeSubMenu,
        mouseInChild: vue.ref(false),
        level: 0
      });
    }
    vue.onMounted(() => {
      if (props.mode === "horizontal") {
        new menuBar["default"](instance.vnode.el, nsMenu.namespace.value);
      }
    });
    {
      const open = (index) => {
        const { indexPath } = subMenus.value[index];
        indexPath.forEach((i) => openMenu(i, indexPath));
      };
      expose({
        open,
        close,
        handleResize
      });
    }
    return () => {
      var _a, _b;
      let slot = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) != null ? _b : [];
      const vShowMore = [];
      if (props.mode === "horizontal" && menu.value) {
        const originalSlot = vnode.flattedChildren(slot);
        const slotDefault = sliceIndex.value === -1 ? originalSlot : originalSlot.slice(0, sliceIndex.value);
        const slotMore = sliceIndex.value === -1 ? [] : originalSlot.slice(sliceIndex.value);
        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {
          slot = slotDefault;
          vShowMore.push(vue.h(subMenu["default"], {
            index: "sub-menu-more",
            class: nsSubMenu.e("hide-arrow")
          }, {
            title: () => vue.h(index$1.ElIcon, {
              class: nsSubMenu.e("icon-more")
            }, { default: () => vue.h(iconsVue.More) }),
            default: () => slotMore
          }));
        }
      }
      const ulStyle = useMenuCssVar.useMenuCssVar(props, 0);
      const vMenu = vue.h("ul", {
        key: String(props.collapse),
        role: "menubar",
        ref: menu,
        style: ulStyle.value,
        class: {
          [nsMenu.b()]: true,
          [nsMenu.m(props.mode)]: true,
          [nsMenu.m("collapse")]: props.collapse
        }
      }, [...slot, ...vShowMore]);
      if (props.collapseTransition && props.mode === "vertical") {
        return vue.h(menuCollapseTransition["default"], () => vMenu);
      }
      return vMenu;
    };
  }
});

exports["default"] = Menu;
exports.menuEmits = menuEmits;
exports.menuProps = menuProps;
//# sourceMappingURL=menu.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/sub-menu.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/sub-menu.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var index$4 = __webpack_require__(/*! ../../collapse-transition/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/collapse-transition/index.js");
var index$3 = __webpack_require__(/*! ../../tooltip/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var index$2 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var useMenu = __webpack_require__(/*! ./use-menu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu.js");
var useMenuCssVar = __webpack_require__(/*! ./use-menu-css-var.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-css-var.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");
var index = __webpack_require__(/*! ../../../hooks/use-deprecated/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-deprecated/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const subMenuProps = runtime.buildProps({
  index: {
    type: String,
    required: true
  },
  showTimeout: {
    type: Number,
    default: 300
  },
  hideTimeout: {
    type: Number,
    default: 300
  },
  popperClass: String,
  disabled: Boolean,
  popperAppendToBody: {
    type: Boolean,
    default: void 0
  },
  teleported: {
    type: Boolean,
    default: void 0
  },
  popperOffset: {
    type: Number,
    default: 6
  },
  expandCloseIcon: {
    type: icon.iconPropType
  },
  expandOpenIcon: {
    type: icon.iconPropType
  },
  collapseCloseIcon: {
    type: icon.iconPropType
  },
  collapseOpenIcon: {
    type: icon.iconPropType
  }
});
const COMPONENT_NAME = "ElSubMenu";
var SubMenu = vue.defineComponent({
  name: COMPONENT_NAME,
  props: subMenuProps,
  setup(props, { slots, expose }) {
    index.useDeprecated({
      from: "popper-append-to-body",
      replacement: "teleported",
      scope: COMPONENT_NAME,
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/menu.html#submenu-attributes"
    }, vue.computed(() => props.popperAppendToBody !== void 0));
    const instance = vue.getCurrentInstance();
    const { indexPath, parentMenu } = useMenu["default"](instance, vue.computed(() => props.index));
    const nsMenu = index$1.useNamespace("menu");
    const nsSubMenu = index$1.useNamespace("sub-menu");
    const rootMenu = vue.inject("rootMenu");
    if (!rootMenu)
      error.throwError(COMPONENT_NAME, "can not inject root menu");
    const subMenu = vue.inject(`subMenu:${parentMenu.value.uid}`);
    if (!subMenu)
      error.throwError(COMPONENT_NAME, "can not inject sub menu");
    const items = vue.ref({});
    const subMenus = vue.ref({});
    let timeout;
    const mouseInChild = vue.ref(false);
    const verticalTitleRef = vue.ref();
    const vPopper = vue.ref(null);
    const currentPlacement = vue.computed(() => mode.value === "horizontal" && isFirstLevel.value ? "bottom-start" : "right-start");
    const subMenuTitleIcon = vue.computed(() => {
      return mode.value === "horizontal" && isFirstLevel.value || mode.value === "vertical" && !rootMenu.props.collapse ? props.expandCloseIcon && props.expandOpenIcon ? opened.value ? props.expandOpenIcon : props.expandCloseIcon : iconsVue.ArrowDown : props.collapseCloseIcon && props.collapseOpenIcon ? opened.value ? props.collapseOpenIcon : props.collapseCloseIcon : iconsVue.ArrowRight;
    });
    const isFirstLevel = vue.computed(() => {
      return subMenu.level === 0;
    });
    const appendToBody = vue.computed(() => {
      var _a;
      const value = (_a = props.teleported) != null ? _a : props.popperAppendToBody;
      return value === void 0 ? isFirstLevel.value : value;
    });
    const menuTransitionName = vue.computed(() => rootMenu.props.collapse ? `${nsMenu.namespace.value}-zoom-in-left` : `${nsMenu.namespace.value}-zoom-in-top`);
    const fallbackPlacements = vue.computed(() => mode.value === "horizontal" && isFirstLevel.value ? [
      "bottom-start",
      "bottom-end",
      "top-start",
      "top-end",
      "right-start",
      "left-start"
    ] : [
      "right-start",
      "right",
      "right-end",
      "left-start",
      "bottom-start",
      "bottom-end",
      "top-start",
      "top-end"
    ]);
    const opened = vue.computed(() => rootMenu.openedMenus.includes(props.index));
    const active = vue.computed(() => {
      let isActive = false;
      Object.values(items.value).forEach((item2) => {
        if (item2.active) {
          isActive = true;
        }
      });
      Object.values(subMenus.value).forEach((subItem) => {
        if (subItem.active) {
          isActive = true;
        }
      });
      return isActive;
    });
    const backgroundColor = vue.computed(() => rootMenu.props.backgroundColor || "");
    const activeTextColor = vue.computed(() => rootMenu.props.activeTextColor || "");
    const textColor = vue.computed(() => rootMenu.props.textColor || "");
    const mode = vue.computed(() => rootMenu.props.mode);
    const item = vue.reactive({
      index: props.index,
      indexPath,
      active
    });
    const ulStyle = useMenuCssVar.useMenuCssVar(rootMenu.props, subMenu.level + 1);
    const titleStyle = vue.computed(() => {
      if (mode.value !== "horizontal") {
        return {
          color: textColor.value
        };
      }
      return {
        borderBottomColor: active.value ? rootMenu.props.activeTextColor ? activeTextColor.value : "" : "transparent",
        color: active.value ? activeTextColor.value : textColor.value
      };
    });
    const doDestroy = () => {
      var _a, _b, _c;
      return (_c = (_b = (_a = vPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.popperInstanceRef) == null ? void 0 : _c.destroy();
    };
    const handleCollapseToggle = (value) => {
      if (!value) {
        doDestroy();
      }
    };
    const handleClick = () => {
      if (rootMenu.props.menuTrigger === "hover" && rootMenu.props.mode === "horizontal" || rootMenu.props.collapse && rootMenu.props.mode === "vertical" || props.disabled)
        return;
      rootMenu.handleSubMenuClick({
        index: props.index,
        indexPath: indexPath.value,
        active: active.value
      });
    };
    const handleMouseenter = (event, showTimeout = props.showTimeout) => {
      var _a;
      if (event.type === "focus") {
        return;
      }
      if (rootMenu.props.menuTrigger === "click" && rootMenu.props.mode === "horizontal" || !rootMenu.props.collapse && rootMenu.props.mode === "vertical" || props.disabled) {
        return;
      }
      subMenu.mouseInChild.value = true;
      timeout == null ? void 0 : timeout();
      ({ stop: timeout } = core.useTimeoutFn(() => {
        rootMenu.openMenu(props.index, indexPath.value);
      }, showTimeout));
      if (appendToBody.value) {
        (_a = parentMenu.value.vnode.el) == null ? void 0 : _a.dispatchEvent(new MouseEvent("mouseenter"));
      }
    };
    const handleMouseleave = (deepDispatch = false) => {
      var _a, _b;
      if (rootMenu.props.menuTrigger === "click" && rootMenu.props.mode === "horizontal" || !rootMenu.props.collapse && rootMenu.props.mode === "vertical") {
        return;
      }
      timeout == null ? void 0 : timeout();
      subMenu.mouseInChild.value = false;
      ({ stop: timeout } = core.useTimeoutFn(() => !mouseInChild.value && rootMenu.closeMenu(props.index, indexPath.value), props.hideTimeout));
      if (appendToBody.value && deepDispatch) {
        if (((_a = instance.parent) == null ? void 0 : _a.type.name) === "ElSubMenu") {
          (_b = subMenu.handleMouseleave) == null ? void 0 : _b.call(subMenu, true);
        }
      }
    };
    vue.watch(() => rootMenu.props.collapse, (value) => handleCollapseToggle(Boolean(value)));
    {
      const addSubMenu = (item2) => {
        subMenus.value[item2.index] = item2;
      };
      const removeSubMenu = (item2) => {
        delete subMenus.value[item2.index];
      };
      vue.provide(`subMenu:${instance.uid}`, {
        addSubMenu,
        removeSubMenu,
        handleMouseleave,
        mouseInChild,
        level: subMenu.level + 1
      });
    }
    expose({
      opened
    });
    vue.onMounted(() => {
      rootMenu.addSubMenu(item);
      subMenu.addSubMenu(item);
    });
    vue.onBeforeUnmount(() => {
      subMenu.removeSubMenu(item);
      rootMenu.removeSubMenu(item);
    });
    return () => {
      var _a;
      const titleTag = [
        (_a = slots.title) == null ? void 0 : _a.call(slots),
        vue.h(index$2.ElIcon, {
          class: nsSubMenu.e("icon-arrow"),
          style: {
            transform: opened.value ? props.expandCloseIcon && props.expandOpenIcon || props.collapseCloseIcon && props.collapseOpenIcon && rootMenu.props.collapse ? "none" : "rotateZ(180deg)" : "none"
          }
        }, {
          default: () => shared.isString(subMenuTitleIcon.value) ? vue.h(instance.appContext.components[subMenuTitleIcon.value]) : vue.h(subMenuTitleIcon.value)
        })
      ];
      const child = rootMenu.isMenuPopup ? vue.h(index$3.ElTooltip, {
        ref: vPopper,
        visible: opened.value,
        effect: "light",
        pure: true,
        offset: props.popperOffset,
        showArrow: false,
        persistent: true,
        popperClass: props.popperClass,
        placement: currentPlacement.value,
        teleported: appendToBody.value,
        fallbackPlacements: fallbackPlacements.value,
        transition: menuTransitionName.value,
        gpuAcceleration: false
      }, {
        content: () => {
          var _a2;
          return vue.h("div", {
            class: [
              nsMenu.m(mode.value),
              nsMenu.m("popup-container"),
              props.popperClass
            ],
            onMouseenter: (evt) => handleMouseenter(evt, 100),
            onMouseleave: () => handleMouseleave(true),
            onFocus: (evt) => handleMouseenter(evt, 100)
          }, [
            vue.h("ul", {
              class: [
                nsMenu.b(),
                nsMenu.m("popup"),
                nsMenu.m(`popup-${currentPlacement.value}`)
              ],
              style: ulStyle.value
            }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)])
          ]);
        },
        default: () => vue.h("div", {
          class: nsSubMenu.e("title"),
          style: [
            titleStyle.value,
            { backgroundColor: backgroundColor.value }
          ],
          onClick: handleClick
        }, titleTag)
      }) : vue.h(vue.Fragment, {}, [
        vue.h("div", {
          class: nsSubMenu.e("title"),
          style: [
            titleStyle.value,
            { backgroundColor: backgroundColor.value }
          ],
          ref: verticalTitleRef,
          onClick: handleClick
        }, titleTag),
        vue.h(index$4["default"], {}, {
          default: () => {
            var _a2;
            return vue.withDirectives(vue.h("ul", {
              role: "menu",
              class: [nsMenu.b(), nsMenu.m("inline")],
              style: ulStyle.value
            }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]), [[vue.vShow, opened.value]]);
          }
        })
      ]);
      return vue.h("li", {
        class: [
          nsSubMenu.b(),
          nsSubMenu.is("active", active.value),
          nsSubMenu.is("opened", opened.value),
          nsSubMenu.is("disabled", props.disabled)
        ],
        role: "menuitem",
        ariaHaspopup: true,
        ariaExpanded: opened.value,
        onMouseenter: handleMouseenter,
        onMouseleave: () => handleMouseleave(true),
        onFocus: handleMouseenter
      }, [child]);
    };
  }
});

exports["default"] = SubMenu;
exports.subMenuProps = subMenuProps;
//# sourceMappingURL=sub-menu.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/types.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/types.js ***!
  \*********************************************************************************************************************/
/***/ (() => {



//# sourceMappingURL=types.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-color.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-color.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tinycolor = __webpack_require__(/*! @ctrl/tinycolor */ "./node_modules/.pnpm/@ctrl+tinycolor@3.6.1/node_modules/@ctrl/tinycolor/dist/module/public_api.js");

function useMenuColor(props) {
  const menuBarColor = vue.computed(() => {
    const color = props.backgroundColor;
    if (!color) {
      return "";
    } else {
      return new tinycolor.TinyColor(color).shade(20).toString();
    }
  });
  return menuBarColor;
}

exports["default"] = useMenuColor;
//# sourceMappingURL=use-menu-color.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-css-var.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-css-var.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var useMenuColor = __webpack_require__(/*! ./use-menu-color.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu-color.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const useMenuCssVar = (props, level) => {
  const ns = index.useNamespace("menu");
  return vue.computed(() => {
    return ns.cssVarBlock({
      "text-color": props.textColor || "",
      "hover-text-color": props.textColor || "",
      "bg-color": props.backgroundColor || "",
      "hover-bg-color": useMenuColor["default"](props).value || "",
      "active-color": props.activeTextColor || "",
      level: `${level}`
    });
  });
};

exports.useMenuCssVar = useMenuCssVar;
//# sourceMappingURL=use-menu-css-var.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/use-menu.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

function useMenu(instance, currentIndex) {
  const indexPath = vue.computed(() => {
    let parent = instance.parent;
    const path = [currentIndex.value];
    while (parent.type.name !== "ElMenu") {
      if (parent.props.index) {
        path.unshift(parent.props.index);
      }
      parent = parent.parent;
    }
    return path;
  });
  const parentMenu = vue.computed(() => {
    let parent = instance.parent;
    while (parent && !["ElMenu", "ElSubMenu"].includes(parent.type.name)) {
      parent = parent.parent;
    }
    return parent;
  });
  return {
    parentMenu,
    indexPath
  };
}

exports["default"] = useMenu;
//# sourceMappingURL=use-menu.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-bar.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-bar.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var menuItem = __webpack_require__(/*! ./menu-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-item.js");

class Menu {
  constructor(domNode, namespace) {
    this.domNode = domNode;
    this.init(namespace);
  }
  init(namespace) {
    const menuChildren = this.domNode.childNodes;
    Array.from(menuChildren).forEach((child) => {
      if (child.nodeType === 1) {
        new menuItem["default"](child, namespace);
      }
    });
  }
}

exports["default"] = Menu;
//# sourceMappingURL=menu-bar.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-item.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/menu-item.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var submenu = __webpack_require__(/*! ./submenu.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/submenu.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");
var aria$1 = __webpack_require__(/*! ../../../../utils/dom/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/aria.js");

class MenuItem {
  constructor(domNode, namespace) {
    this.domNode = domNode;
    this.submenu = null;
    this.submenu = null;
    this.init(namespace);
  }
  init(namespace) {
    this.domNode.setAttribute("tabindex", "0");
    const menuChild = this.domNode.querySelector(`.${namespace}-menu`);
    if (menuChild) {
      this.submenu = new submenu["default"](this, menuChild);
    }
    this.addListeners();
  }
  addListeners() {
    this.domNode.addEventListener("keydown", (event) => {
      let prevDef = false;
      switch (event.code) {
        case aria.EVENT_CODE.down: {
          aria$1.triggerEvent(event.currentTarget, "mouseenter");
          this.submenu && this.submenu.gotoSubIndex(0);
          prevDef = true;
          break;
        }
        case aria.EVENT_CODE.up: {
          aria$1.triggerEvent(event.currentTarget, "mouseenter");
          this.submenu && this.submenu.gotoSubIndex(this.submenu.subMenuItems.length - 1);
          prevDef = true;
          break;
        }
        case aria.EVENT_CODE.tab: {
          aria$1.triggerEvent(event.currentTarget, "mouseleave");
          break;
        }
        case aria.EVENT_CODE.enter:
        case aria.EVENT_CODE.space: {
          prevDef = true;
          event.currentTarget.click();
          break;
        }
      }
      if (prevDef) {
        event.preventDefault();
      }
    });
  }
}

exports["default"] = MenuItem;
//# sourceMappingURL=menu-item.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/submenu.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/menu/src/utils/submenu.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");
var aria$1 = __webpack_require__(/*! ../../../../utils/dom/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/aria.js");

class SubMenu {
  constructor(parent, domNode) {
    this.parent = parent;
    this.domNode = domNode;
    this.subIndex = 0;
    this.subIndex = 0;
    this.init();
  }
  init() {
    this.subMenuItems = this.domNode.querySelectorAll("li");
    this.addListeners();
  }
  gotoSubIndex(idx) {
    if (idx === this.subMenuItems.length) {
      idx = 0;
    } else if (idx < 0) {
      idx = this.subMenuItems.length - 1;
    }
    ;
    this.subMenuItems[idx].focus();
    this.subIndex = idx;
  }
  addListeners() {
    const parentNode = this.parent.domNode;
    Array.prototype.forEach.call(this.subMenuItems, (el) => {
      el.addEventListener("keydown", (event) => {
        let prevDef = false;
        switch (event.code) {
          case aria.EVENT_CODE.down: {
            this.gotoSubIndex(this.subIndex + 1);
            prevDef = true;
            break;
          }
          case aria.EVENT_CODE.up: {
            this.gotoSubIndex(this.subIndex - 1);
            prevDef = true;
            break;
          }
          case aria.EVENT_CODE.tab: {
            aria$1.triggerEvent(parentNode, "mouseleave");
            break;
          }
          case aria.EVENT_CODE.enter:
          case aria.EVENT_CODE.space: {
            prevDef = true;
            event.currentTarget.click();
            break;
          }
        }
        if (prevDef) {
          event.preventDefault();
          event.stopPropagation();
        }
        return false;
      });
    });
  }
}

exports["default"] = SubMenu;
//# sourceMappingURL=submenu.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var messageBox = __webpack_require__(/*! ./src/messageBox.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/messageBox.js");
__webpack_require__(/*! ./src/message-box.type.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/message-box.type.js");

const _MessageBox = messageBox["default"];
_MessageBox.install = (app) => {
  _MessageBox._context = app._context;
  app.config.globalProperties.$msgbox = _MessageBox;
  app.config.globalProperties.$messageBox = _MessageBox;
  app.config.globalProperties.$alert = _MessageBox.alert;
  app.config.globalProperties.$confirm = _MessageBox.confirm;
  app.config.globalProperties.$prompt = _MessageBox.prompt;
};
const ElMessageBox = _MessageBox;

exports.ElMessageBox = ElMessageBox;
exports["default"] = _MessageBox;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/index.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/index.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$1 = __webpack_require__(/*! ../../button/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/button/index.js");
__webpack_require__(/*! ../../../directives/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$2 = __webpack_require__(/*! ../../input/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/input/index.js");
var index$3 = __webpack_require__(/*! ../../overlay/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/overlay/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var index$4 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
__webpack_require__(/*! ../../focus-trap/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/focus-trap/index.js");
__webpack_require__(/*! ../../config-provider/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/index.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../directives/trap-focus/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/trap-focus/index.js");
var focusTrap = __webpack_require__(/*! ../../focus-trap/src/focus-trap.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/focus-trap/src/focus-trap.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");
var validator = __webpack_require__(/*! ../../../utils/vue/validator.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/validator.js");
var useGlobalConfig = __webpack_require__(/*! ../../config-provider/src/hooks/use-global-config.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/src/hooks/use-global-config.js");
var index$5 = __webpack_require__(/*! ../../../hooks/use-id/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-id/index.js");
var index$6 = __webpack_require__(/*! ../../../hooks/use-draggable/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-draggable/index.js");
var index$7 = __webpack_require__(/*! ../../../hooks/use-same-target/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-same-target/index.js");
var index$8 = __webpack_require__(/*! ../../../hooks/use-lockscreen/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-lockscreen/index.js");

const _sfc_main = vue.defineComponent({
  name: "ElMessageBox",
  directives: {
    TrapFocus: index["default"]
  },
  components: {
    ElButton: index$1.ElButton,
    ElFocusTrap: focusTrap["default"],
    ElInput: index$2.ElInput,
    ElOverlay: index$3.ElOverlay,
    ElIcon: index$4.ElIcon,
    ...icon.TypeComponents
  },
  inheritAttrs: false,
  props: {
    buttonSize: {
      type: String,
      validator: validator.isValidComponentSize
    },
    modal: {
      type: Boolean,
      default: true
    },
    lockScroll: {
      type: Boolean,
      default: true
    },
    showClose: {
      type: Boolean,
      default: true
    },
    closeOnClickModal: {
      type: Boolean,
      default: true
    },
    closeOnPressEscape: {
      type: Boolean,
      default: true
    },
    closeOnHashChange: {
      type: Boolean,
      default: true
    },
    center: Boolean,
    draggable: Boolean,
    roundButton: {
      default: false,
      type: Boolean
    },
    container: {
      type: String,
      default: "body"
    },
    boxType: {
      type: String,
      default: ""
    }
  },
  emits: ["vanish", "action"],
  setup(props, { emit }) {
    const {
      locale,
      zIndex,
      ns,
      size: btnSize
    } = useGlobalConfig.useGlobalComponentSettings("message-box", vue.computed(() => props.buttonSize));
    const { t } = locale;
    const { nextZIndex } = zIndex;
    const visible = vue.ref(false);
    const state = vue.reactive({
      autofocus: true,
      beforeClose: null,
      callback: null,
      cancelButtonText: "",
      cancelButtonClass: "",
      confirmButtonText: "",
      confirmButtonClass: "",
      customClass: "",
      customStyle: {},
      dangerouslyUseHTMLString: false,
      distinguishCancelAndClose: false,
      icon: "",
      inputPattern: null,
      inputPlaceholder: "",
      inputType: "text",
      inputValue: null,
      inputValidator: null,
      inputErrorMessage: "",
      message: null,
      modalFade: true,
      modalClass: "",
      showCancelButton: false,
      showConfirmButton: true,
      type: "",
      title: void 0,
      showInput: false,
      action: "",
      confirmButtonLoading: false,
      cancelButtonLoading: false,
      confirmButtonDisabled: false,
      editorErrorMessage: "",
      validateError: false,
      zIndex: nextZIndex()
    });
    const typeClass = vue.computed(() => {
      const type = state.type;
      return { [ns.bm("icon", type)]: type && icon.TypeComponentsMap[type] };
    });
    const contentId = index$5.useId();
    const inputId = index$5.useId();
    const iconComponent = vue.computed(() => state.icon || icon.TypeComponentsMap[state.type] || "");
    const hasMessage = vue.computed(() => !!state.message);
    const rootRef = vue.ref();
    const headerRef = vue.ref();
    const focusStartRef = vue.ref();
    const inputRef = vue.ref();
    const confirmRef = vue.ref();
    const confirmButtonClasses = vue.computed(() => state.confirmButtonClass);
    vue.watch(() => state.inputValue, async (val) => {
      await vue.nextTick();
      if (props.boxType === "prompt" && val !== null) {
        validate();
      }
    }, { immediate: true });
    vue.watch(() => visible.value, (val) => {
      var _a, _b;
      if (val) {
        if (props.boxType !== "prompt") {
          if (state.autofocus) {
            focusStartRef.value = (_b = (_a = confirmRef.value) == null ? void 0 : _a.$el) != null ? _b : rootRef.value;
          } else {
            focusStartRef.value = rootRef.value;
          }
        }
        state.zIndex = nextZIndex();
      }
      if (props.boxType !== "prompt")
        return;
      if (val) {
        vue.nextTick().then(() => {
          var _a2;
          if (inputRef.value && inputRef.value.$el) {
            if (state.autofocus) {
              focusStartRef.value = (_a2 = getInputElement()) != null ? _a2 : rootRef.value;
            } else {
              focusStartRef.value = rootRef.value;
            }
          }
        });
      } else {
        state.editorErrorMessage = "";
        state.validateError = false;
      }
    });
    const draggable = vue.computed(() => props.draggable);
    index$6.useDraggable(rootRef, headerRef, draggable);
    vue.onMounted(async () => {
      await vue.nextTick();
      if (props.closeOnHashChange) {
        window.addEventListener("hashchange", doClose);
      }
    });
    vue.onBeforeUnmount(() => {
      if (props.closeOnHashChange) {
        window.removeEventListener("hashchange", doClose);
      }
    });
    function doClose() {
      if (!visible.value)
        return;
      visible.value = false;
      vue.nextTick(() => {
        if (state.action)
          emit("action", state.action);
      });
    }
    const handleWrapperClick = () => {
      if (props.closeOnClickModal) {
        handleAction(state.distinguishCancelAndClose ? "close" : "cancel");
      }
    };
    const overlayEvent = index$7.useSameTarget(handleWrapperClick);
    const handleInputEnter = (e) => {
      if (state.inputType !== "textarea") {
        e.preventDefault();
        return handleAction("confirm");
      }
    };
    const handleAction = (action) => {
      var _a;
      if (props.boxType === "prompt" && action === "confirm" && !validate()) {
        return;
      }
      state.action = action;
      if (state.beforeClose) {
        (_a = state.beforeClose) == null ? void 0 : _a.call(state, action, state, doClose);
      } else {
        doClose();
      }
    };
    const validate = () => {
      if (props.boxType === "prompt") {
        const inputPattern = state.inputPattern;
        if (inputPattern && !inputPattern.test(state.inputValue || "")) {
          state.editorErrorMessage = state.inputErrorMessage || t("el.messagebox.error");
          state.validateError = true;
          return false;
        }
        const inputValidator = state.inputValidator;
        if (typeof inputValidator === "function") {
          const validateResult = inputValidator(state.inputValue);
          if (validateResult === false) {
            state.editorErrorMessage = state.inputErrorMessage || t("el.messagebox.error");
            state.validateError = true;
            return false;
          }
          if (typeof validateResult === "string") {
            state.editorErrorMessage = validateResult;
            state.validateError = true;
            return false;
          }
        }
      }
      state.editorErrorMessage = "";
      state.validateError = false;
      return true;
    };
    const getInputElement = () => {
      const inputRefs = inputRef.value.$refs;
      return inputRefs.input || inputRefs.textarea;
    };
    const handleClose = () => {
      handleAction("close");
    };
    const onCloseRequested = () => {
      if (props.closeOnPressEscape) {
        handleClose();
      }
    };
    if (props.lockScroll) {
      index$8.useLockscreen(visible);
    }
    return {
      ...vue.toRefs(state),
      ns,
      overlayEvent,
      visible,
      hasMessage,
      typeClass,
      contentId,
      inputId,
      btnSize,
      iconComponent,
      confirmButtonClasses,
      rootRef,
      focusStartRef,
      headerRef,
      inputRef,
      confirmRef,
      doClose,
      handleClose,
      onCloseRequested,
      handleWrapperClick,
      handleInputEnter,
      handleAction,
      t
    };
  }
});
const _hoisted_1 = ["aria-label", "aria-describedby"];
const _hoisted_2 = ["aria-label"];
const _hoisted_3 = ["id"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_icon = vue.resolveComponent("el-icon");
  const _component_close = vue.resolveComponent("close");
  const _component_el_input = vue.resolveComponent("el-input");
  const _component_el_button = vue.resolveComponent("el-button");
  const _component_el_focus_trap = vue.resolveComponent("el-focus-trap");
  const _component_el_overlay = vue.resolveComponent("el-overlay");
  return vue.openBlock(), vue.createBlock(vue.Transition, {
    name: "fade-in-linear",
    onAfterLeave: _cache[11] || (_cache[11] = ($event) => _ctx.$emit("vanish")),
    persisted: ""
  }, {
    default: vue.withCtx(() => [
      vue.withDirectives(vue.createVNode(_component_el_overlay, {
        "z-index": _ctx.zIndex,
        "overlay-class": [_ctx.ns.is("message-box"), _ctx.modalClass],
        mask: _ctx.modal
      }, {
        default: vue.withCtx(() => [
          vue.createElementVNode("div", {
            role: "dialog",
            "aria-label": _ctx.title,
            "aria-modal": "true",
            "aria-describedby": !_ctx.showInput ? _ctx.contentId : void 0,
            class: vue.normalizeClass(`${_ctx.ns.namespace.value}-overlay-message-box`),
            onClick: _cache[8] || (_cache[8] = (...args) => _ctx.overlayEvent.onClick && _ctx.overlayEvent.onClick(...args)),
            onMousedown: _cache[9] || (_cache[9] = (...args) => _ctx.overlayEvent.onMousedown && _ctx.overlayEvent.onMousedown(...args)),
            onMouseup: _cache[10] || (_cache[10] = (...args) => _ctx.overlayEvent.onMouseup && _ctx.overlayEvent.onMouseup(...args))
          }, [
            vue.createVNode(_component_el_focus_trap, {
              loop: "",
              trapped: _ctx.visible,
              "focus-trap-el": _ctx.rootRef,
              "focus-start-el": _ctx.focusStartRef,
              onReleaseRequested: _ctx.onCloseRequested
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode("div", {
                  ref: "rootRef",
                  class: vue.normalizeClass([
                    _ctx.ns.b(),
                    _ctx.customClass,
                    _ctx.ns.is("draggable", _ctx.draggable),
                    { [_ctx.ns.m("center")]: _ctx.center }
                  ]),
                  style: vue.normalizeStyle(_ctx.customStyle),
                  tabindex: "-1",
                  onClick: _cache[7] || (_cache[7] = vue.withModifiers(() => {
                  }, ["stop"]))
                }, [
                  _ctx.title !== null && _ctx.title !== void 0 ? (vue.openBlock(), vue.createElementBlock("div", {
                    key: 0,
                    ref: "headerRef",
                    class: vue.normalizeClass(_ctx.ns.e("header"))
                  }, [
                    vue.createElementVNode("div", {
                      class: vue.normalizeClass(_ctx.ns.e("title"))
                    }, [
                      _ctx.iconComponent && _ctx.center ? (vue.openBlock(), vue.createBlock(_component_el_icon, {
                        key: 0,
                        class: vue.normalizeClass([_ctx.ns.e("status"), _ctx.typeClass])
                      }, {
                        default: vue.withCtx(() => [
                          (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : vue.createCommentVNode("v-if", true),
                      vue.createElementVNode("span", null, vue.toDisplayString(_ctx.title), 1)
                    ], 2),
                    _ctx.showClose ? (vue.openBlock(), vue.createElementBlock("button", {
                      key: 0,
                      type: "button",
                      class: vue.normalizeClass(_ctx.ns.e("headerbtn")),
                      "aria-label": _ctx.t("el.messagebox.close"),
                      onClick: _cache[0] || (_cache[0] = ($event) => _ctx.handleAction(_ctx.distinguishCancelAndClose ? "close" : "cancel")),
                      onKeydown: _cache[1] || (_cache[1] = vue.withKeys(vue.withModifiers(($event) => _ctx.handleAction(_ctx.distinguishCancelAndClose ? "close" : "cancel"), ["prevent"]), ["enter"]))
                    }, [
                      vue.createVNode(_component_el_icon, {
                        class: vue.normalizeClass(_ctx.ns.e("close"))
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode(_component_close)
                        ]),
                        _: 1
                      }, 8, ["class"])
                    ], 42, _hoisted_2)) : vue.createCommentVNode("v-if", true)
                  ], 2)) : vue.createCommentVNode("v-if", true),
                  vue.createElementVNode("div", {
                    id: _ctx.contentId,
                    class: vue.normalizeClass(_ctx.ns.e("content"))
                  }, [
                    vue.createElementVNode("div", {
                      class: vue.normalizeClass(_ctx.ns.e("container"))
                    }, [
                      _ctx.iconComponent && !_ctx.center && _ctx.hasMessage ? (vue.openBlock(), vue.createBlock(_component_el_icon, {
                        key: 0,
                        class: vue.normalizeClass([_ctx.ns.e("status"), _ctx.typeClass])
                      }, {
                        default: vue.withCtx(() => [
                          (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : vue.createCommentVNode("v-if", true),
                      _ctx.hasMessage ? (vue.openBlock(), vue.createElementBlock("div", {
                        key: 1,
                        class: vue.normalizeClass(_ctx.ns.e("message"))
                      }, [
                        vue.renderSlot(_ctx.$slots, "default", {}, () => [
                          !_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.showInput ? "label" : "p"), {
                            key: 0,
                            for: _ctx.showInput ? _ctx.inputId : void 0
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode(vue.toDisplayString(!_ctx.dangerouslyUseHTMLString ? _ctx.message : ""), 1)
                            ]),
                            _: 1
                          }, 8, ["for"])) : (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.showInput ? "label" : "p"), {
                            key: 1,
                            for: _ctx.showInput ? _ctx.inputId : void 0,
                            innerHTML: _ctx.message
                          }, null, 8, ["for", "innerHTML"]))
                        ])
                      ], 2)) : vue.createCommentVNode("v-if", true)
                    ], 2),
                    vue.withDirectives(vue.createElementVNode("div", {
                      class: vue.normalizeClass(_ctx.ns.e("input"))
                    }, [
                      vue.createVNode(_component_el_input, {
                        id: _ctx.inputId,
                        ref: "inputRef",
                        modelValue: _ctx.inputValue,
                        "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.inputValue = $event),
                        type: _ctx.inputType,
                        placeholder: _ctx.inputPlaceholder,
                        "aria-invalid": _ctx.validateError,
                        class: vue.normalizeClass({ invalid: _ctx.validateError }),
                        onKeydown: vue.withKeys(_ctx.handleInputEnter, ["enter"])
                      }, null, 8, ["id", "modelValue", "type", "placeholder", "aria-invalid", "class", "onKeydown"]),
                      vue.createElementVNode("div", {
                        class: vue.normalizeClass(_ctx.ns.e("errormsg")),
                        style: vue.normalizeStyle({
                          visibility: !!_ctx.editorErrorMessage ? "visible" : "hidden"
                        })
                      }, vue.toDisplayString(_ctx.editorErrorMessage), 7)
                    ], 2), [
                      [vue.vShow, _ctx.showInput]
                    ])
                  ], 10, _hoisted_3),
                  vue.createElementVNode("div", {
                    class: vue.normalizeClass(_ctx.ns.e("btns"))
                  }, [
                    _ctx.showCancelButton ? (vue.openBlock(), vue.createBlock(_component_el_button, {
                      key: 0,
                      loading: _ctx.cancelButtonLoading,
                      class: vue.normalizeClass([_ctx.cancelButtonClass]),
                      round: _ctx.roundButton,
                      size: _ctx.btnSize,
                      onClick: _cache[3] || (_cache[3] = ($event) => _ctx.handleAction("cancel")),
                      onKeydown: _cache[4] || (_cache[4] = vue.withKeys(vue.withModifiers(($event) => _ctx.handleAction("cancel"), ["prevent"]), ["enter"]))
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(vue.toDisplayString(_ctx.cancelButtonText || _ctx.t("el.messagebox.cancel")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "size"])) : vue.createCommentVNode("v-if", true),
                    vue.withDirectives(vue.createVNode(_component_el_button, {
                      ref: "confirmRef",
                      type: "primary",
                      loading: _ctx.confirmButtonLoading,
                      class: vue.normalizeClass([_ctx.confirmButtonClasses]),
                      round: _ctx.roundButton,
                      disabled: _ctx.confirmButtonDisabled,
                      size: _ctx.btnSize,
                      onClick: _cache[5] || (_cache[5] = ($event) => _ctx.handleAction("confirm")),
                      onKeydown: _cache[6] || (_cache[6] = vue.withKeys(vue.withModifiers(($event) => _ctx.handleAction("confirm"), ["prevent"]), ["enter"]))
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(vue.toDisplayString(_ctx.confirmButtonText || _ctx.t("el.messagebox.confirm")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "disabled", "size"]), [
                      [vue.vShow, _ctx.showConfirmButton]
                    ])
                  ], 2)
                ], 6)
              ]),
              _: 3
            }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])
          ], 42, _hoisted_1)
        ]),
        _: 3
      }, 8, ["z-index", "overlay-class", "mask"]), [
        [vue.vShow, _ctx.visible]
      ])
    ]),
    _: 3
  });
}
var MessageBoxConstructor = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/message-box/src/index.vue"]]);

exports["default"] = MessageBoxConstructor;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/message-box.type.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/message-box.type.js ***!
  \***************************************************************************************************************************************/
/***/ (() => {



//# sourceMappingURL=message-box.type.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/messageBox.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/messageBox.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var index = __webpack_require__(/*! ./index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message-box/src/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");

const messageInstance = /* @__PURE__ */ new Map();
const getAppendToElement = (props) => {
  let appendTo = document.body;
  if (props.appendTo) {
    if (shared.isString(props.appendTo)) {
      appendTo = document.querySelector(props.appendTo);
    }
    if (types.isElement(props.appendTo)) {
      appendTo = props.appendTo;
    }
    if (!types.isElement(appendTo)) {
      error.debugWarn("ElMessageBox", "the appendTo option is not an HTMLElement. Falling back to document.body.");
      appendTo = document.body;
    }
  }
  return appendTo;
};
const initInstance = (props, container, appContext = null) => {
  const vnode = vue.createVNode(index["default"], props, shared.isFunction(props.message) || vue.isVNode(props.message) ? {
    default: shared.isFunction(props.message) ? props.message : () => props.message
  } : null);
  vnode.appContext = appContext;
  vue.render(vnode, container);
  getAppendToElement(props).appendChild(container.firstElementChild);
  return vnode.component;
};
const genContainer = () => {
  return document.createElement("div");
};
const showMessage = (options, appContext) => {
  const container = genContainer();
  options.onVanish = () => {
    vue.render(null, container);
    messageInstance.delete(vm);
  };
  options.onAction = (action) => {
    const currentMsg = messageInstance.get(vm);
    let resolve;
    if (options.showInput) {
      resolve = { value: vm.inputValue, action };
    } else {
      resolve = action;
    }
    if (options.callback) {
      options.callback(resolve, instance.proxy);
    } else {
      if (action === "cancel" || action === "close") {
        if (options.distinguishCancelAndClose && action !== "cancel") {
          currentMsg.reject("close");
        } else {
          currentMsg.reject("cancel");
        }
      } else {
        currentMsg.resolve(resolve);
      }
    }
  };
  const instance = initInstance(options, container, appContext);
  const vm = instance.proxy;
  for (const prop in options) {
    if (shared.hasOwn(options, prop) && !shared.hasOwn(vm.$props, prop)) {
      vm[prop] = options[prop];
    }
  }
  vm.visible = true;
  return vm;
};
function MessageBox(options, appContext = null) {
  if (!core.isClient)
    return Promise.reject();
  let callback;
  if (shared.isString(options) || vue.isVNode(options)) {
    options = {
      message: options
    };
  } else {
    callback = options.callback;
  }
  return new Promise((resolve, reject) => {
    const vm = showMessage(options, appContext != null ? appContext : MessageBox._context);
    messageInstance.set(vm, {
      options,
      callback,
      resolve,
      reject
    });
  });
}
const MESSAGE_BOX_VARIANTS = ["alert", "confirm", "prompt"];
const MESSAGE_BOX_DEFAULT_OPTS = {
  alert: { closeOnPressEscape: false, closeOnClickModal: false },
  confirm: { showCancelButton: true },
  prompt: { showCancelButton: true, showInput: true }
};
MESSAGE_BOX_VARIANTS.forEach((boxType) => {
  ;
  MessageBox[boxType] = messageBoxFactory(boxType);
});
function messageBoxFactory(boxType) {
  return (message, title, options, appContext) => {
    let titleOrOpts = "";
    if (shared.isObject(title)) {
      options = title;
      titleOrOpts = "";
    } else if (types.isUndefined(title)) {
      titleOrOpts = "";
    } else {
      titleOrOpts = title;
    }
    return MessageBox(Object.assign({
      title: titleOrOpts,
      message,
      type: "",
      ...MESSAGE_BOX_DEFAULT_OPTS[boxType]
    }, options, {
      boxType
    }), appContext);
  };
}
MessageBox.close = () => {
  messageInstance.forEach((_, vm) => {
    vm.doClose();
  });
  messageInstance.clear();
};
MessageBox._context = null;

exports["default"] = MessageBox;
//# sourceMappingURL=messageBox.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var method = __webpack_require__(/*! ./src/method.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/method.js");
var message = __webpack_require__(/*! ./src/message.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElMessage = install.withInstallFunction(method["default"], "$message");

exports.messageDefaults = message.messageDefaults;
exports.messageEmits = message.messageEmits;
exports.messageProps = message.messageProps;
exports.messageTypes = message.messageTypes;
exports.ElMessage = ElMessage;
exports["default"] = ElMessage;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/instance.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/instance.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const instances = vue.shallowReactive([]);
const getInstance = (id) => {
  const idx = instances.findIndex((instance) => instance.id === id);
  const current = instances[idx];
  let prev;
  if (idx > 0) {
    prev = instances[idx - 1];
  }
  return { current, prev };
};
const getLastOffset = (id) => {
  const { prev } = getInstance(id);
  if (!prev)
    return 0;
  return prev.vm.exposed.bottom.value;
};
const getOffsetOrSpace = (id, offset) => {
  const idx = instances.findIndex((instance) => instance.id === id);
  return idx > 0 ? 20 : offset;
};

exports.getInstance = getInstance;
exports.getLastOffset = getLastOffset;
exports.getOffsetOrSpace = getOffsetOrSpace;
exports.instances = instances;
//# sourceMappingURL=instance.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");

const messageTypes = ["success", "info", "warning", "error"];
const messageDefaults = typescript.mutable({
  customClass: "",
  center: false,
  dangerouslyUseHTMLString: false,
  duration: 3e3,
  icon: void 0,
  id: "",
  message: "",
  onClose: void 0,
  showClose: false,
  type: "info",
  offset: 16,
  zIndex: 0,
  grouping: false,
  repeatNum: 1,
  appendTo: core.isClient ? document.body : void 0
});
const messageProps = runtime.buildProps({
  customClass: {
    type: String,
    default: messageDefaults.customClass
  },
  center: {
    type: Boolean,
    default: messageDefaults.center
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: messageDefaults.dangerouslyUseHTMLString
  },
  duration: {
    type: Number,
    default: messageDefaults.duration
  },
  icon: {
    type: icon.iconPropType,
    default: messageDefaults.icon
  },
  id: {
    type: String,
    default: messageDefaults.id
  },
  message: {
    type: runtime.definePropType([
      String,
      Object,
      Function
    ]),
    default: messageDefaults.message
  },
  onClose: {
    type: runtime.definePropType(Function),
    required: false
  },
  showClose: {
    type: Boolean,
    default: messageDefaults.showClose
  },
  type: {
    type: String,
    values: messageTypes,
    default: messageDefaults.type
  },
  offset: {
    type: Number,
    default: messageDefaults.offset
  },
  zIndex: {
    type: Number,
    default: messageDefaults.zIndex
  },
  grouping: {
    type: Boolean,
    default: messageDefaults.grouping
  },
  repeatNum: {
    type: Number,
    default: messageDefaults.repeatNum
  }
});
const messageEmits = {
  destroy: () => true
};

exports.messageDefaults = messageDefaults;
exports.messageEmits = messageEmits;
exports.messageProps = messageProps;
exports.messageTypes = messageTypes;
//# sourceMappingURL=message.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message2.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var index = __webpack_require__(/*! ../../badge/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/badge/index.js");
__webpack_require__(/*! ../../config-provider/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var message = __webpack_require__(/*! ./message.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message.js");
var instance = __webpack_require__(/*! ./instance.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/instance.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");
var useGlobalConfig = __webpack_require__(/*! ../../config-provider/src/hooks/use-global-config.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/src/hooks/use-global-config.js");
var aria = __webpack_require__(/*! ../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

const _hoisted_1 = ["id"];
const _hoisted_2 = ["innerHTML"];
const __default__ = vue.defineComponent({
  name: "ElMessage"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: message.messageProps,
  emits: message.messageEmits,
  setup(__props, { expose }) {
    const props = __props;
    const { Close } = icon.TypeComponents;
    const { ns, zIndex } = useGlobalConfig.useGlobalComponentSettings("message");
    const { currentZIndex, nextZIndex } = zIndex;
    const messageRef = vue.ref();
    const visible = vue.ref(false);
    const height = vue.ref(0);
    let stopTimer = void 0;
    const badgeType = vue.computed(() => props.type ? props.type === "error" ? "danger" : props.type : "info");
    const typeClass = vue.computed(() => {
      const type = props.type;
      return { [ns.bm("icon", type)]: type && icon.TypeComponentsMap[type] };
    });
    const iconComponent = vue.computed(() => props.icon || icon.TypeComponentsMap[props.type] || "");
    const lastOffset = vue.computed(() => instance.getLastOffset(props.id));
    const offset = vue.computed(() => instance.getOffsetOrSpace(props.id, props.offset) + lastOffset.value);
    const bottom = vue.computed(() => height.value + offset.value);
    const customStyle = vue.computed(() => ({
      top: `${offset.value}px`,
      zIndex: currentZIndex.value
    }));
    function startTimer() {
      if (props.duration === 0)
        return;
      ({ stop: stopTimer } = core.useTimeoutFn(() => {
        close();
      }, props.duration));
    }
    function clearTimer() {
      stopTimer == null ? void 0 : stopTimer();
    }
    function close() {
      visible.value = false;
    }
    function keydown({ code }) {
      if (code === aria.EVENT_CODE.esc) {
        close();
      }
    }
    vue.onMounted(() => {
      startTimer();
      nextZIndex();
      visible.value = true;
    });
    vue.watch(() => props.repeatNum, () => {
      clearTimer();
      startTimer();
    });
    core.useEventListener(document, "keydown", keydown);
    core.useResizeObserver(messageRef, () => {
      height.value = messageRef.value.getBoundingClientRect().height;
    });
    expose({
      visible,
      bottom,
      close
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.Transition, {
        name: vue.unref(ns).b("fade"),
        onBeforeLeave: _ctx.onClose,
        onAfterLeave: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("destroy")),
        persisted: ""
      }, {
        default: vue.withCtx(() => [
          vue.withDirectives(vue.createElementVNode("div", {
            id: _ctx.id,
            ref_key: "messageRef",
            ref: messageRef,
            class: vue.normalizeClass([
              vue.unref(ns).b(),
              { [vue.unref(ns).m(_ctx.type)]: _ctx.type && !_ctx.icon },
              vue.unref(ns).is("center", _ctx.center),
              vue.unref(ns).is("closable", _ctx.showClose),
              _ctx.customClass
            ]),
            style: vue.normalizeStyle(vue.unref(customStyle)),
            role: "alert",
            onMouseenter: clearTimer,
            onMouseleave: startTimer
          }, [
            _ctx.repeatNum > 1 ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElBadge), {
              key: 0,
              value: _ctx.repeatNum,
              type: vue.unref(badgeType),
              class: vue.normalizeClass(vue.unref(ns).e("badge"))
            }, null, 8, ["value", "type", "class"])) : vue.createCommentVNode("v-if", true),
            vue.unref(iconComponent) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
              key: 1,
              class: vue.normalizeClass([vue.unref(ns).e("icon"), vue.unref(typeClass)])
            }, {
              default: vue.withCtx(() => [
                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(iconComponent))))
              ]),
              _: 1
            }, 8, ["class"])) : vue.createCommentVNode("v-if", true),
            vue.renderSlot(_ctx.$slots, "default", {}, () => [
              !_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createElementBlock("p", {
                key: 0,
                class: vue.normalizeClass(vue.unref(ns).e("content"))
              }, vue.toDisplayString(_ctx.message), 3)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
                vue.createCommentVNode(" Caution here, message could've been compromised, never use user's input as message "),
                vue.createElementVNode("p", {
                  class: vue.normalizeClass(vue.unref(ns).e("content")),
                  innerHTML: _ctx.message
                }, null, 10, _hoisted_2)
              ], 2112))
            ]),
            _ctx.showClose ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
              key: 2,
              class: vue.normalizeClass(vue.unref(ns).e("closeBtn")),
              onClick: vue.withModifiers(close, ["stop"])
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(vue.unref(Close))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true)
          ], 46, _hoisted_1), [
            [vue.vShow, visible.value]
          ])
        ]),
        _: 3
      }, 8, ["name", "onBeforeLeave"]);
    };
  }
});
var MessageConstructor = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/message/src/message.vue"]]);

exports["default"] = MessageConstructor;
//# sourceMappingURL=message2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/method.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/method.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../config-provider/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/index.js");
var message$2 = __webpack_require__(/*! ./message2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message2.js");
var message$1 = __webpack_require__(/*! ./message.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/message.js");
var instance = __webpack_require__(/*! ./instance.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/message/src/instance.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var configProvider = __webpack_require__(/*! ../../config-provider/src/config-provider.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/src/config-provider.js");

let seed = 1;
const normalizeOptions = (params) => {
  const options = !params || shared.isString(params) || vue.isVNode(params) || shared.isFunction(params) ? { message: params } : params;
  const normalized = {
    ...message$1.messageDefaults,
    ...options
  };
  if (!normalized.appendTo) {
    normalized.appendTo = document.body;
  } else if (shared.isString(normalized.appendTo)) {
    let appendTo = document.querySelector(normalized.appendTo);
    if (!types.isElement(appendTo)) {
      error.debugWarn("ElMessage", "the appendTo option is not an HTMLElement. Falling back to document.body.");
      appendTo = document.body;
    }
    normalized.appendTo = appendTo;
  }
  return normalized;
};
const closeMessage = (instance$1) => {
  const idx = instance.instances.indexOf(instance$1);
  if (idx === -1)
    return;
  instance.instances.splice(idx, 1);
  const { handler } = instance$1;
  handler.close();
};
const createMessage = ({ appendTo, ...options }, context) => {
  const id = `message_${seed++}`;
  const userOnClose = options.onClose;
  const container = document.createElement("div");
  const props = {
    ...options,
    id,
    onClose: () => {
      userOnClose == null ? void 0 : userOnClose();
      closeMessage(instance);
    },
    onDestroy: () => {
      vue.render(null, container);
    }
  };
  const vnode = vue.createVNode(message$2["default"], props, shared.isFunction(props.message) || vue.isVNode(props.message) ? {
    default: shared.isFunction(props.message) ? props.message : () => props.message
  } : null);
  vnode.appContext = context || message._context;
  vue.render(vnode, container);
  appendTo.appendChild(container.firstElementChild);
  const vm = vnode.component;
  const handler = {
    close: () => {
      vm.exposed.visible.value = false;
    }
  };
  const instance = {
    id,
    vnode,
    vm,
    handler,
    props: vnode.component.props
  };
  return instance;
};
const message = (options = {}, context) => {
  if (!core.isClient)
    return { close: () => void 0 };
  if (types.isNumber(configProvider.messageConfig.max) && instance.instances.length >= configProvider.messageConfig.max) {
    return { close: () => void 0 };
  }
  const normalized = normalizeOptions(options);
  if (normalized.grouping && instance.instances.length) {
    const instance2 = instance.instances.find(({ vnode: vm }) => {
      var _a;
      return ((_a = vm.props) == null ? void 0 : _a.message) === normalized.message;
    });
    if (instance2) {
      instance2.props.repeatNum += 1;
      instance2.props.type = normalized.type;
      return instance2.handler;
    }
  }
  const instance$1 = createMessage(normalized, context);
  instance.instances.push(instance$1);
  return instance$1.handler;
};
message$1.messageTypes.forEach((type) => {
  message[type] = (options = {}, appContext) => {
    const normalized = normalizeOptions(options);
    return message({ ...normalized, type }, appContext);
  };
});
function closeAll(type) {
  for (const instance$1 of instance.instances) {
    if (!type || type === instance$1.props.type) {
      instance$1.handler.close();
    }
  }
}
message.closeAll = closeAll;
message._context = null;

exports.closeAll = closeAll;
exports["default"] = message;
//# sourceMappingURL=method.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/index.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/index.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var notify = __webpack_require__(/*! ./src/notify.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notify.js");
var notification = __webpack_require__(/*! ./src/notification.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElNotification = install.withInstallFunction(notify["default"], "$notify");

exports.notificationEmits = notification.notificationEmits;
exports.notificationProps = notification.notificationProps;
exports.notificationTypes = notification.notificationTypes;
exports.ElNotification = ElNotification;
exports["default"] = ElNotification;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");

const notificationTypes = [
  "success",
  "info",
  "warning",
  "error"
];
const notificationProps = runtime.buildProps({
  customClass: {
    type: String,
    default: ""
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: false
  },
  duration: {
    type: Number,
    default: 4500
  },
  icon: {
    type: icon.iconPropType
  },
  id: {
    type: String,
    default: ""
  },
  message: {
    type: runtime.definePropType([String, Object]),
    default: ""
  },
  offset: {
    type: Number,
    default: 0
  },
  onClick: {
    type: runtime.definePropType(Function),
    default: () => void 0
  },
  onClose: {
    type: runtime.definePropType(Function),
    required: true
  },
  position: {
    type: String,
    values: ["top-right", "top-left", "bottom-right", "bottom-left"],
    default: "top-right"
  },
  showClose: {
    type: Boolean,
    default: true
  },
  title: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    values: [...notificationTypes, ""],
    default: ""
  },
  zIndex: Number
});
const notificationEmits = {
  destroy: () => true
};

exports.notificationEmits = notificationEmits;
exports.notificationProps = notificationProps;
exports.notificationTypes = notificationTypes;
//# sourceMappingURL=notification.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification2.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification2.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var index = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
__webpack_require__(/*! ../../config-provider/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/index.js");
var notification = __webpack_require__(/*! ./notification.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var useGlobalConfig = __webpack_require__(/*! ../../config-provider/src/hooks/use-global-config.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/config-provider/src/hooks/use-global-config.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");
var aria = __webpack_require__(/*! ../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

const _hoisted_1 = ["id"];
const _hoisted_2 = ["textContent"];
const _hoisted_3 = { key: 0 };
const _hoisted_4 = ["innerHTML"];
const __default__ = vue.defineComponent({
  name: "ElNotification"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: notification.notificationProps,
  emits: notification.notificationEmits,
  setup(__props, { expose }) {
    const props = __props;
    const { ns, zIndex } = useGlobalConfig.useGlobalComponentSettings("notification");
    const { nextZIndex, currentZIndex } = zIndex;
    const { Close } = icon.CloseComponents;
    const visible = vue.ref(false);
    let timer = void 0;
    const typeClass = vue.computed(() => {
      const type = props.type;
      return type && icon.TypeComponentsMap[props.type] ? ns.m(type) : "";
    });
    const iconComponent = vue.computed(() => {
      if (!props.type)
        return props.icon;
      return icon.TypeComponentsMap[props.type] || props.icon;
    });
    const horizontalClass = vue.computed(() => props.position.endsWith("right") ? "right" : "left");
    const verticalProperty = vue.computed(() => props.position.startsWith("top") ? "top" : "bottom");
    const positionStyle = vue.computed(() => {
      var _a;
      return {
        [verticalProperty.value]: `${props.offset}px`,
        zIndex: (_a = props.zIndex) != null ? _a : currentZIndex.value
      };
    });
    function startTimer() {
      if (props.duration > 0) {
        ;
        ({ stop: timer } = core.useTimeoutFn(() => {
          if (visible.value)
            close();
        }, props.duration));
      }
    }
    function clearTimer() {
      timer == null ? void 0 : timer();
    }
    function close() {
      visible.value = false;
    }
    function onKeydown({ code }) {
      if (code === aria.EVENT_CODE.delete || code === aria.EVENT_CODE.backspace) {
        clearTimer();
      } else if (code === aria.EVENT_CODE.esc) {
        if (visible.value) {
          close();
        }
      } else {
        startTimer();
      }
    }
    vue.onMounted(() => {
      startTimer();
      nextZIndex();
      visible.value = true;
    });
    core.useEventListener(document, "keydown", onKeydown);
    expose({
      visible,
      close
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.Transition, {
        name: vue.unref(ns).b("fade"),
        onBeforeLeave: _ctx.onClose,
        onAfterLeave: _cache[1] || (_cache[1] = ($event) => _ctx.$emit("destroy")),
        persisted: ""
      }, {
        default: vue.withCtx(() => [
          vue.withDirectives(vue.createElementVNode("div", {
            id: _ctx.id,
            class: vue.normalizeClass([vue.unref(ns).b(), _ctx.customClass, vue.unref(horizontalClass)]),
            style: vue.normalizeStyle(vue.unref(positionStyle)),
            role: "alert",
            onMouseenter: clearTimer,
            onMouseleave: startTimer,
            onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onClick && _ctx.onClick(...args))
          }, [
            vue.unref(iconComponent) ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElIcon), {
              key: 0,
              class: vue.normalizeClass([vue.unref(ns).e("icon"), vue.unref(typeClass)])
            }, {
              default: vue.withCtx(() => [
                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(iconComponent))))
              ]),
              _: 1
            }, 8, ["class"])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(ns).e("group"))
            }, [
              vue.createElementVNode("h2", {
                class: vue.normalizeClass(vue.unref(ns).e("title")),
                textContent: vue.toDisplayString(_ctx.title)
              }, null, 10, _hoisted_2),
              vue.withDirectives(vue.createElementVNode("div", {
                class: vue.normalizeClass(vue.unref(ns).e("content")),
                style: vue.normalizeStyle(!!_ctx.title ? void 0 : { margin: 0 })
              }, [
                vue.renderSlot(_ctx.$slots, "default", {}, () => [
                  !_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createElementBlock("p", _hoisted_3, vue.toDisplayString(_ctx.message), 1)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
                    vue.createCommentVNode(" Caution here, message could've been compromised, never use user's input as message "),
                    vue.createElementVNode("p", { innerHTML: _ctx.message }, null, 8, _hoisted_4)
                  ], 2112))
                ])
              ], 6), [
                [vue.vShow, _ctx.message]
              ]),
              _ctx.showClose ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElIcon), {
                key: 0,
                class: vue.normalizeClass(vue.unref(ns).e("closeBtn")),
                onClick: vue.withModifiers(close, ["stop"])
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(vue.unref(Close))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true)
            ], 2)
          ], 46, _hoisted_1), [
            [vue.vShow, visible.value]
          ])
        ]),
        _: 3
      }, 8, ["name", "onBeforeLeave"]);
    };
  }
});
var NotificationConstructor = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/notification/src/notification.vue"]]);

exports["default"] = NotificationConstructor;
//# sourceMappingURL=notification2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notify.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notify.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var notification = __webpack_require__(/*! ./notification2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification2.js");
var notification$1 = __webpack_require__(/*! ./notification.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/notification/src/notification.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const notifications = {
  "top-left": [],
  "top-right": [],
  "bottom-left": [],
  "bottom-right": []
};
const GAP_SIZE = 16;
let seed = 1;
const notify = function(options = {}, context = null) {
  if (!core.isClient)
    return { close: () => void 0 };
  if (typeof options === "string" || vue.isVNode(options)) {
    options = { message: options };
  }
  const position = options.position || "top-right";
  let verticalOffset = options.offset || 0;
  notifications[position].forEach(({ vm: vm2 }) => {
    var _a;
    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;
  });
  verticalOffset += GAP_SIZE;
  const id = `notification_${seed++}`;
  const userOnClose = options.onClose;
  const props = {
    ...options,
    offset: verticalOffset,
    id,
    onClose: () => {
      close(id, position, userOnClose);
    }
  };
  let appendTo = document.body;
  if (types.isElement(options.appendTo)) {
    appendTo = options.appendTo;
  } else if (shared.isString(options.appendTo)) {
    appendTo = document.querySelector(options.appendTo);
  }
  if (!types.isElement(appendTo)) {
    error.debugWarn("ElNotification", "the appendTo option is not an HTMLElement. Falling back to document.body.");
    appendTo = document.body;
  }
  const container = document.createElement("div");
  const vm = vue.createVNode(notification["default"], props, vue.isVNode(props.message) ? {
    default: () => props.message
  } : null);
  vm.appContext = context != null ? context : notify._context;
  vm.props.onDestroy = () => {
    vue.render(null, container);
  };
  vue.render(vm, container);
  notifications[position].push({ vm });
  appendTo.appendChild(container.firstElementChild);
  return {
    close: () => {
      ;
      vm.component.exposed.visible.value = false;
    }
  };
};
notification$1.notificationTypes.forEach((type) => {
  notify[type] = (options = {}) => {
    if (typeof options === "string" || vue.isVNode(options)) {
      options = {
        message: options
      };
    }
    return notify({
      ...options,
      type
    });
  };
});
function close(id, position, userOnClose) {
  const orientedNotifications = notifications[position];
  const idx = orientedNotifications.findIndex(({ vm: vm2 }) => {
    var _a;
    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;
  });
  if (idx === -1)
    return;
  const { vm } = orientedNotifications[idx];
  if (!vm)
    return;
  userOnClose == null ? void 0 : userOnClose(vm);
  const removedHeight = vm.el.offsetHeight;
  const verticalPos = position.split("-")[0];
  orientedNotifications.splice(idx, 1);
  const len = orientedNotifications.length;
  if (len < 1)
    return;
  for (let i = idx; i < len; i++) {
    const { el, component } = orientedNotifications[i].vm;
    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;
    component.props.offset = pos;
  }
}
function closeAll() {
  for (const orientedNotifications of Object.values(notifications)) {
    orientedNotifications.forEach(({ vm }) => {
      ;
      vm.component.exposed.visible.value = false;
    });
  }
}
notify.closeAll = closeAll;
notify._context = null;

exports.close = close;
exports.closeAll = closeAll;
exports["default"] = notify;
//# sourceMappingURL=notify.js.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-53527c.entry.js.map