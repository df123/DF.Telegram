"use strict";
(self["webpackChunkDF_Telegram_VueApp"] = self["webpackChunkDF_Telegram_VueApp"] || []).push([["vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-9a474c"],{

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tableV2 = __webpack_require__(/*! ./src/table-v2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-v2.js");
var autoResizer$1 = __webpack_require__(/*! ./src/components/auto-resizer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/auto-resizer.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");
var autoResizer = __webpack_require__(/*! ./src/auto-resizer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/auto-resizer.js");
var _private = __webpack_require__(/*! ./src/private.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js");
var table = __webpack_require__(/*! ./src/table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table.js");
var row = __webpack_require__(/*! ./src/row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTableV2 = install.withInstall(tableV2["default"]);
const ElAutoResizer = install.withInstall(autoResizer$1["default"]);

exports.TableV2 = tableV2["default"];
exports.TableV2Alignment = constants.Alignment;
exports.TableV2FixedDir = constants.FixedDir;
exports.TableV2SortOrder = constants.SortOrder;
exports.autoResizerProps = autoResizer.autoResizerProps;
exports.TableV2Placeholder = _private.placeholderSign;
exports.tableV2Props = table.tableV2Props;
exports.tableV2RowProps = row.tableV2RowProps;
exports.ElAutoResizer = ElAutoResizer;
exports.ElTableV2 = ElTableV2;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/auto-resizer.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/auto-resizer.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const autoResizerProps = runtime.buildProps({
  disableWidth: Boolean,
  disableHeight: Boolean,
  onResize: {
    type: runtime.definePropType(Function)
  }
});

exports.autoResizerProps = autoResizerProps;
//# sourceMappingURL=auto-resizer.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");

const classType = String;
const columns = {
  type: runtime.definePropType(Array),
  required: true
};
const column = {
  type: runtime.definePropType(Object)
};
const fixedDataType = {
  type: runtime.definePropType(Array)
};
const dataType = {
  ...fixedDataType,
  required: true
};
const expandColumnKey = String;
const expandKeys = {
  type: runtime.definePropType(Array),
  default: () => typescript.mutable([])
};
const requiredNumber = {
  type: Number,
  required: true
};
const rowKey = {
  type: runtime.definePropType([String, Number, Symbol]),
  default: "id"
};
const styleType = {
  type: runtime.definePropType(Object)
};

exports.classType = classType;
exports.column = column;
exports.columns = columns;
exports.dataType = dataType;
exports.expandColumnKey = expandColumnKey;
exports.expandKeys = expandKeys;
exports.fixedDataType = fixedDataType;
exports.requiredNumber = requiredNumber;
exports.rowKey = rowKey;
exports.styleType = styleType;
//# sourceMappingURL=common.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/auto-resizer.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/auto-resizer.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var autoResizer = __webpack_require__(/*! ../auto-resizer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/auto-resizer.js");
__webpack_require__(/*! ../composables/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/index.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useAutoResize = __webpack_require__(/*! ../composables/use-auto-resize.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-auto-resize.js");

const AutoResizer = vue.defineComponent({
  name: "ElAutoResizer",
  props: autoResizer.autoResizerProps,
  setup(props, {
    slots
  }) {
    const ns = index.useNamespace("auto-resizer");
    const {
      height,
      width,
      sizer
    } = useAutoResize.useAutoResize(props);
    const style = {
      width: "100%",
      height: "100%"
    };
    return () => {
      var _a;
      return vue.createVNode("div", {
        "ref": sizer,
        "class": ns.b(),
        "style": style
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots, {
        height: height.value,
        width: width.value
      })]);
    };
  }
});

exports["default"] = AutoResizer;
//# sourceMappingURL=auto-resizer.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/cell.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/cell.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const TableV2Cell = (props, {
  slots
}) => {
  var _a;
  const {
    cellData,
    style
  } = props;
  const displayText = ((_a = cellData == null ? void 0 : cellData.toString) == null ? void 0 : _a.call(cellData)) || "";
  return vue.createVNode("div", {
    "class": props.class,
    "title": displayText,
    "style": style
  }, [slots.default ? slots.default(props) : displayText]);
};
TableV2Cell.displayName = "ElTableV2Cell";
TableV2Cell.inheritAttrs = false;

exports["default"] = TableV2Cell;
//# sourceMappingURL=cell.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/expand-icon.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/expand-icon.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");

const ExpandIcon = (props) => {
  const {
    expanded,
    expandable,
    onExpand,
    style,
    size
  } = props;
  const expandIconProps = {
    onClick: expandable ? () => onExpand(!expanded) : void 0,
    class: props.class
  };
  return vue.createVNode(index.ElIcon, vue.mergeProps(expandIconProps, {
    "size": size,
    "style": style
  }), {
    default: () => [vue.createVNode(iconsVue.ArrowRight, null, null)]
  });
};

exports["default"] = ExpandIcon;
//# sourceMappingURL=expand-icon.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-cell.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-cell.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const HeaderCell = (props, {
  slots
}) => {
  var _a, _b;
  return slots.default ? slots.default(props) : vue.createVNode("div", {
    "class": props.class,
    "title": (_a = props.column) == null ? void 0 : _a.title
  }, [(_b = props.column) == null ? void 0 : _b.title]);
};
HeaderCell.displayName = "ElTableV2HeaderCell";
HeaderCell.inheritAttrs = false;

exports["default"] = HeaderCell;
//# sourceMappingURL=header-cell.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-row.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-row.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var headerRow = __webpack_require__(/*! ../header-row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header-row.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const TableV2HeaderRow = vue.defineComponent({
  name: "ElTableV2HeaderRow",
  props: headerRow.tableV2HeaderRowProps,
  setup(props, {
    slots
  }) {
    return () => {
      const {
        columns,
        columnsStyles,
        headerIndex,
        style
      } = props;
      let Cells = columns.map((column, columnIndex) => {
        return slots.cell({
          columns,
          column,
          columnIndex,
          headerIndex,
          style: columnsStyles[column.key]
        });
      });
      if (slots.header) {
        Cells = slots.header({
          cells: Cells.map((node) => {
            if (shared.isArray(node) && node.length === 1) {
              return node[0];
            }
            return node;
          }),
          columns,
          headerIndex
        });
      }
      return vue.createVNode("div", {
        "class": props.class,
        "style": style,
        "role": "row"
      }, [Cells]);
    };
  }
});

exports["default"] = TableV2HeaderRow;
//# sourceMappingURL=header-row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var header = __webpack_require__(/*! ../header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");

const COMPONENT_NAME = "ElTableV2Header";
const TableV2Header = vue.defineComponent({
  name: COMPONENT_NAME,
  props: header.tableV2HeaderProps,
  setup(props, {
    slots,
    expose
  }) {
    const ns = index.useNamespace("table-v2");
    const headerRef = vue.ref();
    const headerStyle = vue.computed(() => utils.enforceUnit({
      width: props.width,
      height: props.height
    }));
    const rowStyle = vue.computed(() => utils.enforceUnit({
      width: props.rowWidth,
      height: props.height
    }));
    const headerHeights = vue.computed(() => lodashUnified.castArray(vue.unref(props.headerHeight)));
    const scrollToLeft = (left) => {
      const headerEl = vue.unref(headerRef);
      vue.nextTick(() => {
        (headerEl == null ? void 0 : headerEl.scroll) && headerEl.scroll({
          left
        });
      });
    };
    const renderFixedRows = () => {
      const fixedRowClassName = ns.e("fixed-header-row");
      const {
        columns,
        fixedHeaderData,
        rowHeight
      } = props;
      return fixedHeaderData == null ? void 0 : fixedHeaderData.map((fixedRowData, fixedRowIndex) => {
        var _a;
        const style = utils.enforceUnit({
          height: rowHeight,
          width: "100%"
        });
        return (_a = slots.fixed) == null ? void 0 : _a.call(slots, {
          class: fixedRowClassName,
          columns,
          rowData: fixedRowData,
          rowIndex: -(fixedRowIndex + 1),
          style
        });
      });
    };
    const renderDynamicRows = () => {
      const dynamicRowClassName = ns.e("dynamic-header-row");
      const {
        columns
      } = props;
      return vue.unref(headerHeights).map((rowHeight, rowIndex) => {
        var _a;
        const style = utils.enforceUnit({
          width: "100%",
          height: rowHeight
        });
        return (_a = slots.dynamic) == null ? void 0 : _a.call(slots, {
          class: dynamicRowClassName,
          columns,
          headerIndex: rowIndex,
          style
        });
      });
    };
    expose({
      scrollToLeft
    });
    return () => {
      if (props.height <= 0)
        return;
      return vue.createVNode("div", {
        "ref": headerRef,
        "class": props.class,
        "style": vue.unref(headerStyle),
        "role": "rowgroup"
      }, [vue.createVNode("div", {
        "style": vue.unref(rowStyle),
        "class": ns.e("header")
      }, [renderDynamicRows(), renderFixedRows()])]);
    };
  }
});

exports["default"] = TableV2Header;
//# sourceMappingURL=header.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var cell = __webpack_require__(/*! ./cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/cell.js");
var headerCell = __webpack_require__(/*! ./header-cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-cell.js");
var headerRow = __webpack_require__(/*! ./header-row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-row.js");
var header = __webpack_require__(/*! ./header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header.js");
var row = __webpack_require__(/*! ./row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/row.js");
var sortIcon = __webpack_require__(/*! ./sort-icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/sort-icon.js");
var expandIcon = __webpack_require__(/*! ./expand-icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/expand-icon.js");



exports.TableCell = cell["default"];
exports.HeaderCell = headerCell["default"];
exports.HeaderRow = headerRow["default"];
exports.Header = header["default"];
exports.Row = row["default"];
exports.SortIcon = sortIcon["default"];
exports.ExpandIcon = expandIcon["default"];
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/row.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/row.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var row = __webpack_require__(/*! ../row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/tokens.js");
var _private = __webpack_require__(/*! ../private.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const useTableRow = (props) => {
  const {
    isScrolling
  } = vue.inject(tokens.TableV2InjectionKey);
  const measured = vue.ref(false);
  const rowRef = vue.ref();
  const measurable = vue.computed(() => {
    return types.isNumber(props.estimatedRowHeight) && props.rowIndex >= 0;
  });
  const doMeasure = (isInit = false) => {
    const $rowRef = vue.unref(rowRef);
    if (!$rowRef)
      return;
    const {
      columns,
      onRowHeightChange,
      rowKey,
      rowIndex,
      style
    } = props;
    const {
      height
    } = $rowRef.getBoundingClientRect();
    measured.value = true;
    vue.nextTick(() => {
      if (isInit || height !== Number.parseInt(style.height)) {
        const firstColumn = columns[0];
        const isPlaceholder = (firstColumn == null ? void 0 : firstColumn.placeholderSign) === _private.placeholderSign;
        onRowHeightChange == null ? void 0 : onRowHeightChange({
          rowKey,
          height,
          rowIndex
        }, firstColumn && !isPlaceholder && firstColumn.fixed);
      }
    });
  };
  const eventHandlers = vue.computed(() => {
    const {
      rowData,
      rowIndex,
      rowKey,
      onRowHover
    } = props;
    const handlers = props.rowEventHandlers || {};
    const eventHandlers2 = {};
    Object.entries(handlers).forEach(([eventName, handler]) => {
      if (shared.isFunction(handler)) {
        eventHandlers2[eventName] = (event) => {
          handler({
            event,
            rowData,
            rowIndex,
            rowKey
          });
        };
      }
    });
    if (onRowHover) {
      ;
      [{
        name: "onMouseleave",
        hovered: false
      }, {
        name: "onMouseenter",
        hovered: true
      }].forEach(({
        name,
        hovered
      }) => {
        const existedHandler = eventHandlers2[name];
        eventHandlers2[name] = (event) => {
          onRowHover({
            event,
            hovered,
            rowData,
            rowIndex,
            rowKey
          });
          existedHandler == null ? void 0 : existedHandler(event);
        };
      });
    }
    return eventHandlers2;
  });
  const onExpand = (expanded) => {
    const {
      onRowExpand,
      rowData,
      rowIndex,
      rowKey
    } = props;
    onRowExpand == null ? void 0 : onRowExpand({
      expanded,
      rowData,
      rowIndex,
      rowKey
    });
  };
  vue.onMounted(() => {
    if (vue.unref(measurable)) {
      doMeasure(true);
    }
  });
  return {
    isScrolling,
    measurable,
    measured,
    rowRef,
    eventHandlers,
    onExpand
  };
};
const COMPONENT_NAME = "ElTableV2TableRow";
const TableV2Row = vue.defineComponent({
  name: COMPONENT_NAME,
  props: row.tableV2RowProps,
  setup(props, {
    expose,
    slots,
    attrs
  }) {
    const {
      eventHandlers,
      isScrolling,
      measurable,
      measured,
      rowRef,
      onExpand
    } = useTableRow(props);
    expose({
      onExpand
    });
    return () => {
      const {
        columns,
        columnsStyles,
        expandColumnKey,
        depth,
        rowData,
        rowIndex,
        style
      } = props;
      let ColumnCells = columns.map((column, columnIndex) => {
        const expandable = shared.isArray(rowData.children) && rowData.children.length > 0 && column.key === expandColumnKey;
        return slots.cell({
          column,
          columns,
          columnIndex,
          depth,
          style: columnsStyles[column.key],
          rowData,
          rowIndex,
          isScrolling: vue.unref(isScrolling),
          expandIconProps: expandable ? {
            rowData,
            rowIndex,
            onExpand
          } : void 0
        });
      });
      if (slots.row) {
        ColumnCells = slots.row({
          cells: ColumnCells.map((node) => {
            if (shared.isArray(node) && node.length === 1) {
              return node[0];
            }
            return node;
          }),
          style,
          columns,
          depth,
          rowData,
          rowIndex,
          isScrolling: vue.unref(isScrolling)
        });
      }
      if (vue.unref(measurable)) {
        const {
          height,
          ...exceptHeightStyle
        } = style || {};
        const _measured = vue.unref(measured);
        return vue.createVNode("div", vue.mergeProps({
          "ref": rowRef,
          "class": props.class,
          "style": _measured ? style : exceptHeightStyle,
          "role": "row"
        }, attrs, vue.unref(eventHandlers)), [ColumnCells]);
      }
      return vue.createVNode("div", vue.mergeProps(attrs, {
        "ref": rowRef,
        "class": props.class,
        "style": style,
        "role": "row"
      }, vue.unref(eventHandlers)), [ColumnCells]);
    };
  }
});

exports["default"] = TableV2Row;
//# sourceMappingURL=row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/sort-icon.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/sort-icon.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");

const SortIcon = (props) => {
  const {
    sortOrder
  } = props;
  return vue.createVNode(index.ElIcon, {
    "size": 14,
    "class": props.class
  }, {
    default: () => [sortOrder === constants.SortOrder.ASC ? vue.createVNode(iconsVue.SortUp, null, null) : vue.createVNode(iconsVue.SortDown, null, null)]
  });
};

exports["default"] = SortIcon;
//# sourceMappingURL=sort-icon.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/index.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/index.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var useColumns = __webpack_require__(/*! ./use-columns.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-columns.js");
var useScrollbar = __webpack_require__(/*! ./use-scrollbar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-scrollbar.js");
var useRow = __webpack_require__(/*! ./use-row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-row.js");
var useData = __webpack_require__(/*! ./use-data.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-data.js");
var useStyles = __webpack_require__(/*! ./use-styles.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-styles.js");
var useAutoResize = __webpack_require__(/*! ./use-auto-resize.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-auto-resize.js");



exports.useColumns = useColumns.useColumns;
exports.useScrollbar = useScrollbar.useScrollbar;
exports.useRow = useRow.useRow;
exports.useData = useData.useData;
exports.useStyles = useStyles.useStyles;
exports.useAutoResize = useAutoResize.useAutoResize;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-auto-resize.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-auto-resize.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");

const useAutoResize = (props) => {
  const sizer = vue.ref();
  const width$ = vue.ref(0);
  const height$ = vue.ref(0);
  let resizerStopper;
  vue.onMounted(() => {
    resizerStopper = core.useResizeObserver(sizer, ([entry]) => {
      const { width, height } = entry.contentRect;
      const { paddingLeft, paddingRight, paddingTop, paddingBottom } = getComputedStyle(entry.target);
      const left = Number.parseInt(paddingLeft) || 0;
      const right = Number.parseInt(paddingRight) || 0;
      const top = Number.parseInt(paddingTop) || 0;
      const bottom = Number.parseInt(paddingBottom) || 0;
      width$.value = width - left - right;
      height$.value = height - top - bottom;
    }).stop;
  });
  vue.onBeforeUnmount(() => {
    resizerStopper == null ? void 0 : resizerStopper();
  });
  vue.watch([width$, height$], ([width, height]) => {
    var _a;
    (_a = props.onResize) == null ? void 0 : _a.call(props, {
      width,
      height
    });
  });
  return {
    sizer,
    width: width$,
    height: height$
  };
};

exports.useAutoResize = useAutoResize;
//# sourceMappingURL=use-auto-resize.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-columns.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-columns.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");
var _private = __webpack_require__(/*! ../private.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js");
var utils = __webpack_require__(/*! ./utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/utils.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function useColumns(props, columns, fixed) {
  const visibleColumns = vue.computed(() => {
    return vue.unref(columns).filter((column) => !column.hidden);
  });
  const fixedColumnsOnLeft = vue.computed(() => vue.unref(visibleColumns).filter((column) => column.fixed === "left" || column.fixed === true));
  const fixedColumnsOnRight = vue.computed(() => vue.unref(visibleColumns).filter((column) => column.fixed === "right"));
  const normalColumns = vue.computed(() => vue.unref(visibleColumns).filter((column) => !column.fixed));
  const mainColumns = vue.computed(() => {
    const ret = [];
    vue.unref(fixedColumnsOnLeft).forEach((column) => {
      ret.push({
        ...column,
        placeholderSign: _private.placeholderSign
      });
    });
    vue.unref(normalColumns).forEach((column) => {
      ret.push(column);
    });
    vue.unref(fixedColumnsOnRight).forEach((column) => {
      ret.push({
        ...column,
        placeholderSign: _private.placeholderSign
      });
    });
    return ret;
  });
  const hasFixedColumns = vue.computed(() => {
    return vue.unref(fixedColumnsOnLeft).length || vue.unref(fixedColumnsOnRight).length;
  });
  const columnsStyles = vue.computed(() => {
    const _columns = vue.unref(columns);
    return _columns.reduce((style, column) => {
      style[column.key] = utils.calcColumnStyle(column, vue.unref(fixed), props.fixed);
      return style;
    }, {});
  });
  const columnsTotalWidth = vue.computed(() => {
    return vue.unref(visibleColumns).reduce((width, column) => width + column.width, 0);
  });
  const getColumn = (key) => {
    return vue.unref(columns).find((column) => column.key === key);
  };
  const getColumnStyle = (key) => {
    return vue.unref(columnsStyles)[key];
  };
  const updateColumnWidth = (column, width) => {
    column.width = width;
  };
  function onColumnSorted(e) {
    var _a;
    const { key } = e.currentTarget.dataset;
    if (!key)
      return;
    const { sortState, sortBy } = props;
    let order = constants.SortOrder.ASC;
    if (shared.isObject(sortState)) {
      order = constants.oppositeOrderMap[sortState[key]];
    } else {
      order = constants.oppositeOrderMap[sortBy.order];
    }
    (_a = props.onColumnSort) == null ? void 0 : _a.call(props, { column: getColumn(key), key, order });
  }
  return {
    columns,
    columnsStyles,
    columnsTotalWidth,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    hasFixedColumns,
    mainColumns,
    normalColumns,
    visibleColumns,
    getColumn,
    getColumnStyle,
    updateColumnWidth,
    onColumnSorted
  };
}

exports.useColumns = useColumns;
//# sourceMappingURL=use-columns.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-data.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-data.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const useData = (props, { expandedRowKeys, lastRenderedRowIndex, resetAfterIndex }) => {
  const depthMap = vue.ref({});
  const flattenedData = vue.computed(() => {
    const depths = {};
    const { data: data2, rowKey } = props;
    const _expandedRowKeys = vue.unref(expandedRowKeys);
    if (!_expandedRowKeys || !_expandedRowKeys.length)
      return data2;
    const array = [];
    const keysSet = /* @__PURE__ */ new Set();
    _expandedRowKeys.forEach((x) => keysSet.add(x));
    let copy = data2.slice();
    copy.forEach((x) => depths[x[rowKey]] = 0);
    while (copy.length > 0) {
      const item = copy.shift();
      array.push(item);
      if (keysSet.has(item[rowKey]) && Array.isArray(item.children) && item.children.length > 0) {
        copy = [...item.children, ...copy];
        item.children.forEach((child) => depths[child[rowKey]] = depths[item[rowKey]] + 1);
      }
    }
    depthMap.value = depths;
    return array;
  });
  const data = vue.computed(() => {
    const { data: data2, expandColumnKey } = props;
    return expandColumnKey ? vue.unref(flattenedData) : data2;
  });
  vue.watch(data, (val, prev) => {
    if (val !== prev) {
      lastRenderedRowIndex.value = -1;
      resetAfterIndex(0, true);
    }
  });
  return {
    data,
    depthMap
  };
};

exports.useData = useData;
//# sourceMappingURL=use-data.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-row.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-row.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

const useRow = (props, { mainTableRef, leftTableRef, rightTableRef }) => {
  const vm = vue.getCurrentInstance();
  const { emit } = vm;
  const isResetting = vue.shallowRef(false);
  const hoveringRowKey = vue.shallowRef(null);
  const expandedRowKeys = vue.ref(props.defaultExpandedRowKeys || []);
  const lastRenderedRowIndex = vue.ref(-1);
  const resetIndex = vue.shallowRef(null);
  const rowHeights = vue.ref({});
  const pendingRowHeights = vue.ref({});
  const leftTableHeights = vue.shallowRef({});
  const mainTableHeights = vue.shallowRef({});
  const rightTableHeights = vue.shallowRef({});
  const isDynamic = vue.computed(() => types.isNumber(props.estimatedRowHeight));
  function onRowsRendered(params) {
    var _a;
    (_a = props.onRowsRendered) == null ? void 0 : _a.call(props, params);
    if (params.rowCacheEnd > vue.unref(lastRenderedRowIndex)) {
      lastRenderedRowIndex.value = params.rowCacheEnd;
    }
  }
  function onRowHovered({ hovered, rowKey }) {
    hoveringRowKey.value = hovered ? rowKey : null;
  }
  function onRowExpanded({
    expanded,
    rowData,
    rowIndex,
    rowKey
  }) {
    var _a, _b;
    const _expandedRowKeys = [...vue.unref(expandedRowKeys)];
    const currentKeyIndex = _expandedRowKeys.indexOf(rowKey);
    if (expanded) {
      if (currentKeyIndex === -1)
        _expandedRowKeys.push(rowKey);
    } else {
      if (currentKeyIndex > -1)
        _expandedRowKeys.splice(currentKeyIndex, 1);
    }
    expandedRowKeys.value = _expandedRowKeys;
    emit("update:expandedRowKeys", _expandedRowKeys);
    (_a = props.onRowExpand) == null ? void 0 : _a.call(props, {
      expanded,
      rowData,
      rowIndex,
      rowKey
    });
    (_b = props.onExpandedRowsChange) == null ? void 0 : _b.call(props, _expandedRowKeys);
  }
  const flushingRowHeights = lodashUnified.debounce(() => {
    var _a, _b, _c, _d;
    isResetting.value = true;
    rowHeights.value = { ...vue.unref(rowHeights), ...vue.unref(pendingRowHeights) };
    resetAfterIndex(vue.unref(resetIndex), false);
    pendingRowHeights.value = {};
    resetIndex.value = null;
    (_a = mainTableRef.value) == null ? void 0 : _a.forceUpdate();
    (_b = leftTableRef.value) == null ? void 0 : _b.forceUpdate();
    (_c = rightTableRef.value) == null ? void 0 : _c.forceUpdate();
    (_d = vm.proxy) == null ? void 0 : _d.$forceUpdate();
    isResetting.value = false;
  }, 0);
  function resetAfterIndex(index, forceUpdate = false) {
    if (!vue.unref(isDynamic))
      return;
    [mainTableRef, leftTableRef, rightTableRef].forEach((tableRef) => {
      const table = vue.unref(tableRef);
      if (table)
        table.resetAfterRowIndex(index, forceUpdate);
    });
  }
  function resetHeights(rowKey, height, rowIdx) {
    const resetIdx = vue.unref(resetIndex);
    if (resetIdx === null) {
      resetIndex.value = rowIdx;
    } else {
      if (resetIdx > rowIdx) {
        resetIndex.value = rowIdx;
      }
    }
    pendingRowHeights.value[rowKey] = height;
  }
  function onRowHeightChange({ rowKey, height, rowIndex }, fixedDir) {
    if (!fixedDir) {
      mainTableHeights.value[rowKey] = height;
    } else {
      if (fixedDir === constants.FixedDir.RIGHT) {
        rightTableHeights.value[rowKey] = height;
      } else {
        leftTableHeights.value[rowKey] = height;
      }
    }
    const maximumHeight = Math.max(...[leftTableHeights, rightTableHeights, mainTableHeights].map((records) => records.value[rowKey] || 0));
    if (vue.unref(rowHeights)[rowKey] !== maximumHeight) {
      resetHeights(rowKey, maximumHeight, rowIndex);
      flushingRowHeights();
    }
  }
  return {
    hoveringRowKey,
    expandedRowKeys,
    lastRenderedRowIndex,
    isDynamic,
    isResetting,
    rowHeights,
    resetAfterIndex,
    onRowExpanded,
    onRowHovered,
    onRowsRendered,
    onRowHeightChange
  };
};

exports.useRow = useRow;
//# sourceMappingURL=use-row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-scrollbar.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-scrollbar.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const useScrollbar = (props, {
  mainTableRef,
  leftTableRef,
  rightTableRef,
  onMaybeEndReached
}) => {
  const scrollPos = vue.ref({ scrollLeft: 0, scrollTop: 0 });
  function doScroll(params) {
    var _a, _b, _c;
    const { scrollTop } = params;
    (_a = mainTableRef.value) == null ? void 0 : _a.scrollTo(params);
    (_b = leftTableRef.value) == null ? void 0 : _b.scrollToTop(scrollTop);
    (_c = rightTableRef.value) == null ? void 0 : _c.scrollToTop(scrollTop);
  }
  function scrollTo(params) {
    scrollPos.value = params;
    doScroll(params);
  }
  function scrollToTop(scrollTop) {
    scrollPos.value.scrollTop = scrollTop;
    doScroll(vue.unref(scrollPos));
  }
  function scrollToLeft(scrollLeft) {
    var _a, _b;
    scrollPos.value.scrollLeft = scrollLeft;
    (_b = (_a = mainTableRef.value) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, vue.unref(scrollPos));
  }
  function onScroll(params) {
    var _a;
    scrollTo(params);
    (_a = props.onScroll) == null ? void 0 : _a.call(props, params);
  }
  function onVerticalScroll({ scrollTop }) {
    const { scrollTop: currentScrollTop } = vue.unref(scrollPos);
    if (scrollTop !== currentScrollTop)
      scrollToTop(scrollTop);
  }
  function scrollToRow(row, strategy = "auto") {
    var _a;
    (_a = mainTableRef.value) == null ? void 0 : _a.scrollToRow(row, strategy);
  }
  vue.watch(() => vue.unref(scrollPos).scrollTop, (cur, prev) => {
    if (cur > prev)
      onMaybeEndReached();
  });
  return {
    scrollPos,
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll
  };
};

exports.useScrollbar = useScrollbar;
//# sourceMappingURL=use-scrollbar.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-styles.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-styles.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

const useStyles = (props, {
  columnsTotalWidth,
  data,
  fixedColumnsOnLeft,
  fixedColumnsOnRight
}) => {
  const bodyWidth = vue.computed(() => {
    const { fixed, width, vScrollbarSize } = props;
    const ret = width - vScrollbarSize;
    return fixed ? Math.max(Math.round(vue.unref(columnsTotalWidth)), ret) : ret;
  });
  const headerWidth = vue.computed(() => vue.unref(bodyWidth) + (props.fixed ? props.vScrollbarSize : 0));
  const mainTableHeight = vue.computed(() => {
    const { height = 0, maxHeight = 0, footerHeight: footerHeight2, hScrollbarSize } = props;
    if (maxHeight > 0) {
      const _fixedRowsHeight = vue.unref(fixedRowsHeight);
      const _rowsHeight = vue.unref(rowsHeight);
      const _headerHeight = vue.unref(headerHeight);
      const total = _headerHeight + _fixedRowsHeight + _rowsHeight + hScrollbarSize;
      return Math.min(total, maxHeight - footerHeight2);
    }
    return height - footerHeight2;
  });
  const rowsHeight = vue.computed(() => {
    const { rowHeight, estimatedRowHeight } = props;
    const _data = vue.unref(data);
    if (types.isNumber(estimatedRowHeight)) {
      return _data.length * estimatedRowHeight;
    }
    return _data.length * rowHeight;
  });
  const fixedTableHeight = vue.computed(() => {
    const { maxHeight } = props;
    const tableHeight = vue.unref(mainTableHeight);
    if (types.isNumber(maxHeight) && maxHeight > 0)
      return tableHeight;
    const totalHeight = vue.unref(rowsHeight) + vue.unref(headerHeight) + vue.unref(fixedRowsHeight);
    return Math.min(tableHeight, totalHeight);
  });
  const mapColumn = (column) => column.width;
  const leftTableWidth = vue.computed(() => utils.sum(vue.unref(fixedColumnsOnLeft).map(mapColumn)));
  const rightTableWidth = vue.computed(() => utils.sum(vue.unref(fixedColumnsOnRight).map(mapColumn)));
  const headerHeight = vue.computed(() => utils.sum(props.headerHeight));
  const fixedRowsHeight = vue.computed(() => {
    var _a;
    return (((_a = props.fixedData) == null ? void 0 : _a.length) || 0) * props.rowHeight;
  });
  const windowHeight = vue.computed(() => {
    return vue.unref(mainTableHeight) - vue.unref(headerHeight) - vue.unref(fixedRowsHeight);
  });
  const rootStyle = vue.computed(() => {
    const { style = {}, height, width } = props;
    return utils.enforceUnit({
      ...style,
      height,
      width
    });
  });
  const footerHeight = vue.computed(() => utils.enforceUnit({ height: props.footerHeight }));
  const emptyStyle = vue.computed(() => ({
    top: style.addUnit(vue.unref(headerHeight)),
    bottom: style.addUnit(props.footerHeight),
    width: style.addUnit(props.width)
  }));
  return {
    bodyWidth,
    fixedTableHeight,
    mainTableHeight,
    leftTableWidth,
    rightTableWidth,
    headerWidth,
    rowsHeight,
    windowHeight,
    footerHeight,
    emptyStyle,
    rootStyle,
    headerHeight
  };
};

exports.useStyles = useStyles;
//# sourceMappingURL=use-styles.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/utils.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/utils.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const calcColumnStyle = (column, fixedColumn, fixed) => {
  var _a;
  const flex = {
    flexGrow: 0,
    flexShrink: 0,
    ...fixed ? {} : {
      flexGrow: column.flexGrow || 0,
      flexShrink: column.flexShrink || 1
    }
  };
  if (!fixed) {
    flex.flexShrink = 1;
  }
  const style = {
    ...(_a = column.style) != null ? _a : {},
    ...flex,
    flexBasis: "auto",
    width: column.width
  };
  if (!fixedColumn) {
    if (column.maxWidth)
      style.maxWidth = column.maxWidth;
    if (column.minWidth)
      style.minWidth = column.minWidth;
  }
  return style;
};

exports.calcColumnStyle = calcColumnStyle;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "asc";
  SortOrder2["DESC"] = "desc";
  return SortOrder2;
})(SortOrder || {});
var Alignment = /* @__PURE__ */ ((Alignment2) => {
  Alignment2["CENTER"] = "center";
  Alignment2["RIGHT"] = "right";
  return Alignment2;
})(Alignment || {});
var FixedDir = /* @__PURE__ */ ((FixedDir2) => {
  FixedDir2["LEFT"] = "left";
  FixedDir2["RIGHT"] = "right";
  return FixedDir2;
})(FixedDir || {});
const oppositeOrderMap = {
  ["asc" /* ASC */]: "desc" /* DESC */,
  ["desc" /* DESC */]: "asc" /* ASC */
};
const sortOrders = ["asc" /* ASC */, "desc" /* DESC */];

exports.Alignment = Alignment;
exports.FixedDir = FixedDir;
exports.SortOrder = SortOrder;
exports.oppositeOrderMap = oppositeOrderMap;
exports.sortOrders = sortOrders;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/grid.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/grid.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../virtual-list/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js");
var header = __webpack_require__(/*! ./header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header.js");
var row = __webpack_require__(/*! ./row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var props = __webpack_require__(/*! ../../virtual-list/src/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");

const tableV2GridProps = runtime.buildProps({
  columns: common.columns,
  data: common.dataType,
  fixedData: common.fixedDataType,
  estimatedRowHeight: row.tableV2RowProps.estimatedRowHeight,
  width: common.requiredNumber,
  height: common.requiredNumber,
  headerWidth: common.requiredNumber,
  headerHeight: header.tableV2HeaderProps.headerHeight,
  bodyWidth: common.requiredNumber,
  rowHeight: common.requiredNumber,
  cache: props.virtualizedListProps.cache,
  useIsScrolling: Boolean,
  scrollbarAlwaysOn: props.virtualizedGridProps.scrollbarAlwaysOn,
  scrollbarStartGap: props.virtualizedGridProps.scrollbarStartGap,
  scrollbarEndGap: props.virtualizedGridProps.scrollbarEndGap,
  class: common.classType,
  style: common.styleType,
  containerStyle: common.styleType,
  getRowHeight: {
    type: runtime.definePropType(Function),
    required: true
  },
  rowKey: row.tableV2RowProps.rowKey,
  onRowsRendered: {
    type: runtime.definePropType(Function)
  },
  onScroll: {
    type: runtime.definePropType(Function)
  }
});

exports.tableV2GridProps = tableV2GridProps;
//# sourceMappingURL=grid.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header-row.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header-row.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tableV2HeaderRowProps = runtime.buildProps({
  class: String,
  columns: common.columns,
  columnsStyles: {
    type: runtime.definePropType(Object),
    required: true
  },
  headerIndex: Number,
  style: { type: runtime.definePropType(Object) }
});

exports.tableV2HeaderRowProps = tableV2HeaderRowProps;
//# sourceMappingURL=header-row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const requiredNumberType = {
  type: Number,
  required: true
};
const tableV2HeaderProps = runtime.buildProps({
  class: String,
  columns: common.columns,
  fixedHeaderData: {
    type: runtime.definePropType(Array)
  },
  headerData: {
    type: runtime.definePropType(Array),
    required: true
  },
  headerHeight: {
    type: runtime.definePropType([Number, Array]),
    default: 50
  },
  rowWidth: requiredNumberType,
  rowHeight: {
    type: Number,
    default: 50
  },
  height: requiredNumberType,
  width: requiredNumberType
});

exports.tableV2HeaderProps = tableV2HeaderProps;
//# sourceMappingURL=header.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const placeholderSign = Symbol("placeholder");

exports.placeholderSign = placeholderSign;
//# sourceMappingURL=private.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/cell.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/cell.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../components/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");
var _private = __webpack_require__(/*! ../private.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var cell = __webpack_require__(/*! ../components/cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/cell.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var expandIcon = __webpack_require__(/*! ../components/expand-icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/expand-icon.js");

const CellRenderer = ({
  columns,
  column,
  columnIndex,
  depth,
  expandIconProps,
  isScrolling,
  rowData,
  rowIndex,
  style,
  expandedRowKeys,
  ns,
  cellProps: _cellProps,
  expandColumnKey,
  indentSize,
  iconSize,
  rowKey
}, {
  slots
}) => {
  const cellStyle = utils.enforceUnit(style);
  if (column.placeholderSign === _private.placeholderSign) {
    return vue.createVNode("div", {
      "class": ns.em("row-cell", "placeholder"),
      "style": cellStyle
    }, null);
  }
  const {
    cellRenderer,
    dataKey,
    dataGetter
  } = column;
  const columnCellRenderer = utils.componentToSlot(cellRenderer);
  const CellComponent = columnCellRenderer || slots.default || ((props) => vue.createVNode(cell["default"], props, null));
  const cellData = shared.isFunction(dataGetter) ? dataGetter({
    columns,
    column,
    columnIndex,
    rowData,
    rowIndex
  }) : lodashUnified.get(rowData, dataKey != null ? dataKey : "");
  const extraCellProps = utils.tryCall(_cellProps, {
    cellData,
    columns,
    column,
    columnIndex,
    rowIndex,
    rowData
  });
  const cellProps = {
    class: ns.e("cell-text"),
    columns,
    column,
    columnIndex,
    cellData,
    isScrolling,
    rowData,
    rowIndex
  };
  const Cell = CellComponent(cellProps);
  const kls = [ns.e("row-cell"), column.class, column.align === constants.Alignment.CENTER && ns.is("align-center"), column.align === constants.Alignment.RIGHT && ns.is("align-right")];
  const expandable = rowIndex >= 0 && expandColumnKey && column.key === expandColumnKey;
  const expanded = rowIndex >= 0 && expandedRowKeys.includes(rowData[rowKey]);
  let IconOrPlaceholder;
  const iconStyle = `margin-inline-start: ${depth * indentSize}px;`;
  if (expandable) {
    if (shared.isObject(expandIconProps)) {
      IconOrPlaceholder = vue.createVNode(expandIcon["default"], vue.mergeProps(expandIconProps, {
        "class": [ns.e("expand-icon"), ns.is("expanded", expanded)],
        "size": iconSize,
        "expanded": expanded,
        "style": iconStyle,
        "expandable": true
      }), null);
    } else {
      IconOrPlaceholder = vue.createVNode("div", {
        "style": [iconStyle, `width: ${iconSize}px; height: ${iconSize}px;`].join(" ")
      }, null);
    }
  }
  return vue.createVNode("div", vue.mergeProps({
    "class": kls,
    "style": cellStyle
  }, extraCellProps, {
    "role": "cell"
  }), [IconOrPlaceholder, Cell]);
};
CellRenderer.inheritAttrs = false;

exports["default"] = CellRenderer;
//# sourceMappingURL=cell.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/empty.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/empty.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../../empty/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/empty/index.js");

const Footer = (props, {
  slots
}) => {
  return vue.createVNode("div", {
    "class": props.class,
    "style": props.style
  }, [slots.default ? slots.default() : vue.createVNode(index.ElEmpty, null, null)]);
};
Footer.displayName = "ElTableV2Empty";

exports["default"] = Footer;
//# sourceMappingURL=empty.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/footer.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/footer.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const Footer = (props, {
  slots
}) => {
  var _a;
  return vue.createVNode("div", {
    "class": props.class,
    "style": props.style
  }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
};
Footer.displayName = "ElTableV2Footer";

exports["default"] = Footer;
//# sourceMappingURL=footer.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header-cell.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header-cell.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../components/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/constants.js");
var _private = __webpack_require__(/*! ../private.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/private.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var headerCell = __webpack_require__(/*! ../components/header-cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-cell.js");
var sortIcon = __webpack_require__(/*! ../components/sort-icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/sort-icon.js");

const HeaderCellRenderer = (props, {
  slots
}) => {
  const {
    column,
    ns,
    style,
    onColumnSorted
  } = props;
  const cellStyle = utils.enforceUnit(style);
  if (column.placeholderSign === _private.placeholderSign) {
    return vue.createVNode("div", {
      "class": ns.em("header-row-cell", "placeholder"),
      "style": cellStyle
    }, null);
  }
  const {
    headerCellRenderer,
    headerClass,
    sortable
  } = column;
  const cellProps = {
    ...props,
    class: ns.e("header-cell-text")
  };
  const cellRenderer = utils.componentToSlot(headerCellRenderer) || slots.default || ((props2) => vue.createVNode(headerCell["default"], props2, null));
  const Cell = cellRenderer(cellProps);
  const {
    sortBy,
    sortState,
    headerCellProps
  } = props;
  let sorting, sortOrder;
  if (sortState) {
    const order = sortState[column.key];
    sorting = Boolean(constants.oppositeOrderMap[order]);
    sortOrder = sorting ? order : constants.SortOrder.ASC;
  } else {
    sorting = column.key === sortBy.key;
    sortOrder = sorting ? sortBy.order : constants.SortOrder.ASC;
  }
  const cellKls = [ns.e("header-cell"), utils.tryCall(headerClass, props, ""), column.align === constants.Alignment.CENTER && ns.is("align-center"), column.align === constants.Alignment.RIGHT && ns.is("align-right"), sortable && ns.is("sortable")];
  const cellWrapperProps = {
    ...utils.tryCall(headerCellProps, props),
    onClick: column.sortable ? onColumnSorted : void 0,
    class: cellKls,
    style: cellStyle,
    ["data-key"]: column.key
  };
  return vue.createVNode("div", vue.mergeProps(cellWrapperProps, {
    "role": "columnheader"
  }), [Cell, sortable && vue.createVNode(sortIcon["default"], {
    "class": [ns.e("sort-icon"), sorting && ns.is("sorting")],
    "sortOrder": sortOrder
  }, null)]);
};

exports["default"] = HeaderCellRenderer;
//# sourceMappingURL=header-cell.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../components/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var headerRow = __webpack_require__(/*! ../components/header-row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header-row.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const HeaderRenderer = ({
  columns,
  columnsStyles,
  headerIndex,
  style,
  headerClass,
  headerProps,
  ns
}, {
  slots
}) => {
  const param = {
    columns,
    headerIndex
  };
  const kls = [ns.e("header-row"), utils.tryCall(headerClass, param, ""), {
    [ns.is("customized")]: Boolean(slots.header)
  }];
  const extraProps = {
    ...utils.tryCall(headerProps, param),
    columnsStyles,
    class: kls,
    columns,
    headerIndex,
    style
  };
  return vue.createVNode(headerRow["default"], extraProps, _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

exports["default"] = HeaderRenderer;
//# sourceMappingURL=header.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/left-table.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/left-table.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tableGrid = __webpack_require__(/*! ../table-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-grid.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const LeftTable = (props, {
  slots
}) => {
  if (!props.columns.length)
    return;
  const {
    leftTableRef,
    ...rest
  } = props;
  return vue.createVNode(tableGrid["default"], vue.mergeProps({
    "ref": leftTableRef
  }, rest), _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

exports["default"] = LeftTable;
//# sourceMappingURL=left-table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/main-table.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/main-table.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tableGrid = __webpack_require__(/*! ../table-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-grid.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const MainTable = (props, {
  slots
}) => {
  const {
    mainTableRef,
    ...rest
  } = props;
  return vue.createVNode(tableGrid["default"], vue.mergeProps({
    "ref": mainTableRef
  }, rest), _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

exports["default"] = MainTable;
//# sourceMappingURL=main-table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/overlay.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/overlay.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const Overlay = (props, {
  slots
}) => {
  var _a;
  return vue.createVNode("div", {
    "class": props.class,
    "style": props.style
  }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
};
Overlay.displayName = "ElTableV2Overlay";

exports["default"] = Overlay;
//# sourceMappingURL=overlay.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/right-table.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/right-table.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tableGrid = __webpack_require__(/*! ../table-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-grid.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const LeftTable = (props, {
  slots
}) => {
  if (!props.columns.length)
    return;
  const {
    rightTableRef,
    ...rest
  } = props;
  return vue.createVNode(tableGrid["default"], vue.mergeProps({
    "ref": rightTableRef
  }, rest), _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

exports["default"] = LeftTable;
//# sourceMappingURL=right-table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/row.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/row.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../components/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var row = __webpack_require__(/*! ../components/row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/row.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const RowRenderer = (props, {
  slots
}) => {
  const {
    columns,
    columnsStyles,
    depthMap,
    expandColumnKey,
    expandedRowKeys,
    estimatedRowHeight,
    hasFixedColumns,
    hoveringRowKey,
    rowData,
    rowIndex,
    style,
    isScrolling,
    rowProps,
    rowClass,
    rowKey,
    rowEventHandlers,
    ns,
    onRowHovered,
    onRowExpanded
  } = props;
  const rowKls = utils.tryCall(rowClass, {
    columns,
    rowData,
    rowIndex
  }, "");
  const additionalProps = utils.tryCall(rowProps, {
    columns,
    rowData,
    rowIndex
  });
  const _rowKey = rowData[rowKey];
  const depth = depthMap[_rowKey] || 0;
  const canExpand = Boolean(expandColumnKey);
  const isFixedRow = rowIndex < 0;
  const kls = [ns.e("row"), rowKls, {
    [ns.e(`row-depth-${depth}`)]: canExpand && rowIndex >= 0,
    [ns.is("expanded")]: canExpand && expandedRowKeys.includes(_rowKey),
    [ns.is("hovered")]: !isScrolling && _rowKey === hoveringRowKey,
    [ns.is("fixed")]: !depth && isFixedRow,
    [ns.is("customized")]: Boolean(slots.row)
  }];
  const onRowHover = hasFixedColumns ? onRowHovered : void 0;
  const _rowProps = {
    ...additionalProps,
    columns,
    columnsStyles,
    class: kls,
    depth,
    expandColumnKey,
    estimatedRowHeight: isFixedRow ? void 0 : estimatedRowHeight,
    isScrolling,
    rowIndex,
    rowData,
    rowKey: _rowKey,
    rowEventHandlers,
    style
  };
  return vue.createVNode(row["default"], vue.mergeProps(_rowProps, {
    "onRowHover": onRowHover,
    "onRowExpand": onRowExpanded
  }), _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

exports["default"] = RowRenderer;
//# sourceMappingURL=row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../virtual-list/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var props = __webpack_require__(/*! ../../virtual-list/src/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");

const tableV2RowProps = runtime.buildProps({
  class: String,
  columns: common.columns,
  columnsStyles: {
    type: runtime.definePropType(Object),
    required: true
  },
  depth: Number,
  expandColumnKey: common.expandColumnKey,
  estimatedRowHeight: {
    ...props.virtualizedGridProps.estimatedRowHeight,
    default: void 0
  },
  isScrolling: Boolean,
  onRowExpand: {
    type: runtime.definePropType(Function)
  },
  onRowHover: {
    type: runtime.definePropType(Function)
  },
  onRowHeightChange: {
    type: runtime.definePropType(Function)
  },
  rowData: {
    type: runtime.definePropType(Object),
    required: true
  },
  rowEventHandlers: {
    type: runtime.definePropType(Object)
  },
  rowIndex: {
    type: Number,
    required: true
  },
  rowKey: common.rowKey,
  style: {
    type: runtime.definePropType(Object)
  }
});

exports.tableV2RowProps = tableV2RowProps;
//# sourceMappingURL=row.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-grid.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-grid.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../virtual-list/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ./components/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/index.js");
var tokens = __webpack_require__(/*! ./tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/tokens.js");
var grid = __webpack_require__(/*! ./grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/grid.js");
var utils = __webpack_require__(/*! ./utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var dynamicSizeGrid = __webpack_require__(/*! ../../virtual-list/src/components/dynamic-size-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-grid.js");
var fixedSizeGrid = __webpack_require__(/*! ../../virtual-list/src/components/fixed-size-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-grid.js");
var header = __webpack_require__(/*! ./components/header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/components/header.js");

const COMPONENT_NAME = "ElTableV2Grid";
const useTableGrid = (props) => {
  const headerRef = vue.ref();
  const bodyRef = vue.ref();
  const totalHeight = vue.computed(() => {
    const {
      data,
      rowHeight,
      estimatedRowHeight
    } = props;
    if (estimatedRowHeight) {
      return;
    }
    return data.length * rowHeight;
  });
  const fixedRowHeight = vue.computed(() => {
    const {
      fixedData,
      rowHeight
    } = props;
    return ((fixedData == null ? void 0 : fixedData.length) || 0) * rowHeight;
  });
  const headerHeight = vue.computed(() => utils.sum(props.headerHeight));
  const gridHeight = vue.computed(() => {
    const {
      height
    } = props;
    return Math.max(0, height - vue.unref(headerHeight) - vue.unref(fixedRowHeight));
  });
  const hasHeader = vue.computed(() => {
    return vue.unref(headerHeight) + vue.unref(fixedRowHeight) > 0;
  });
  const itemKey = ({
    data,
    rowIndex
  }) => data[rowIndex][props.rowKey];
  function onItemRendered({
    rowCacheStart,
    rowCacheEnd,
    rowVisibleStart,
    rowVisibleEnd
  }) {
    var _a;
    (_a = props.onRowsRendered) == null ? void 0 : _a.call(props, {
      rowCacheStart,
      rowCacheEnd,
      rowVisibleStart,
      rowVisibleEnd
    });
  }
  function resetAfterRowIndex(index, forceUpdate2) {
    var _a;
    (_a = bodyRef.value) == null ? void 0 : _a.resetAfterRowIndex(index, forceUpdate2);
  }
  function scrollTo(leftOrOptions, top) {
    const header$ = vue.unref(headerRef);
    const body$ = vue.unref(bodyRef);
    if (!header$ || !body$)
      return;
    if (shared.isObject(leftOrOptions)) {
      header$.scrollToLeft(leftOrOptions.scrollLeft);
      body$.scrollTo(leftOrOptions);
    } else {
      header$.scrollToLeft(leftOrOptions);
      body$.scrollTo({
        scrollLeft: leftOrOptions,
        scrollTop: top
      });
    }
  }
  function scrollToTop(scrollTop) {
    var _a;
    (_a = vue.unref(bodyRef)) == null ? void 0 : _a.scrollTo({
      scrollTop
    });
  }
  function scrollToRow(row, strategy) {
    var _a;
    (_a = vue.unref(bodyRef)) == null ? void 0 : _a.scrollToItem(row, 1, strategy);
  }
  function forceUpdate() {
    var _a, _b;
    (_a = vue.unref(bodyRef)) == null ? void 0 : _a.$forceUpdate();
    (_b = vue.unref(headerRef)) == null ? void 0 : _b.$forceUpdate();
  }
  return {
    bodyRef,
    forceUpdate,
    fixedRowHeight,
    gridHeight,
    hasHeader,
    headerHeight,
    headerRef,
    totalHeight,
    itemKey,
    onItemRendered,
    resetAfterRowIndex,
    scrollTo,
    scrollToTop,
    scrollToRow
  };
};
const TableGrid = vue.defineComponent({
  name: COMPONENT_NAME,
  props: grid.tableV2GridProps,
  setup(props, {
    slots,
    expose
  }) {
    const {
      ns
    } = vue.inject(tokens.TableV2InjectionKey);
    const {
      bodyRef,
      fixedRowHeight,
      gridHeight,
      hasHeader,
      headerRef,
      headerHeight,
      totalHeight,
      forceUpdate,
      itemKey,
      onItemRendered,
      resetAfterRowIndex,
      scrollTo,
      scrollToTop,
      scrollToRow
    } = useTableGrid(props);
    expose({
      forceUpdate,
      totalHeight,
      scrollTo,
      scrollToTop,
      scrollToRow,
      resetAfterRowIndex
    });
    const getColumnWidth = () => props.bodyWidth;
    return () => {
      const {
        cache,
        columns,
        data,
        fixedData,
        useIsScrolling,
        scrollbarAlwaysOn,
        scrollbarEndGap,
        scrollbarStartGap,
        style,
        rowHeight,
        bodyWidth,
        estimatedRowHeight,
        headerWidth,
        height,
        width,
        getRowHeight,
        onScroll
      } = props;
      const isDynamicRowEnabled = types.isNumber(estimatedRowHeight);
      const Grid = isDynamicRowEnabled ? dynamicSizeGrid["default"] : fixedSizeGrid["default"];
      const _headerHeight = vue.unref(headerHeight);
      return vue.createVNode("div", {
        "role": "table",
        "class": [ns.e("table"), props.class],
        "style": style
      }, [vue.createVNode(Grid, {
        "ref": bodyRef,
        "data": data,
        "useIsScrolling": useIsScrolling,
        "itemKey": itemKey,
        "columnCache": 0,
        "columnWidth": isDynamicRowEnabled ? getColumnWidth : bodyWidth,
        "totalColumn": 1,
        "totalRow": data.length,
        "rowCache": cache,
        "rowHeight": isDynamicRowEnabled ? getRowHeight : rowHeight,
        "width": width,
        "height": vue.unref(gridHeight),
        "class": ns.e("body"),
        "role": "rowgroup",
        "scrollbarStartGap": scrollbarStartGap,
        "scrollbarEndGap": scrollbarEndGap,
        "scrollbarAlwaysOn": scrollbarAlwaysOn,
        "onScroll": onScroll,
        "onItemRendered": onItemRendered,
        "perfMode": false
      }, {
        default: (params) => {
          var _a;
          const rowData = data[params.rowIndex];
          return (_a = slots.row) == null ? void 0 : _a.call(slots, {
            ...params,
            columns,
            rowData
          });
        }
      }), vue.unref(hasHeader) && vue.createVNode(header["default"], {
        "ref": headerRef,
        "class": ns.e("header-wrapper"),
        "columns": columns,
        "headerData": data,
        "headerHeight": props.headerHeight,
        "fixedHeaderData": fixedData,
        "rowWidth": headerWidth,
        "rowHeight": rowHeight,
        "width": width,
        "height": Math.min(_headerHeight + vue.unref(fixedRowHeight), height)
      }, {
        dynamic: slots.header,
        fixed: slots.row
      })]);
    };
  }
});

exports["default"] = TableGrid;
//# sourceMappingURL=table-grid.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-v2.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table-v2.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var useTable = __webpack_require__(/*! ./use-table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/use-table.js");
var tokens = __webpack_require__(/*! ./tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/tokens.js");
var table = __webpack_require__(/*! ./table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table.js");
var mainTable = __webpack_require__(/*! ./renderers/main-table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/main-table.js");
var leftTable = __webpack_require__(/*! ./renderers/left-table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/left-table.js");
var rightTable = __webpack_require__(/*! ./renderers/right-table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/right-table.js");
var row = __webpack_require__(/*! ./renderers/row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/row.js");
var cell = __webpack_require__(/*! ./renderers/cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/cell.js");
var header = __webpack_require__(/*! ./renderers/header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header.js");
var headerCell = __webpack_require__(/*! ./renderers/header-cell.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/header-cell.js");
var footer = __webpack_require__(/*! ./renderers/footer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/footer.js");
var empty = __webpack_require__(/*! ./renderers/empty.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/empty.js");
var overlay = __webpack_require__(/*! ./renderers/overlay.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/renderers/overlay.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function _isSlot(s) {
  return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
}
const COMPONENT_NAME = "ElTableV2";
const TableV2 = vue.defineComponent({
  name: COMPONENT_NAME,
  props: table.tableV2Props,
  setup(props, {
    slots,
    expose
  }) {
    const ns = index.useNamespace("table-v2");
    const {
      columnsStyles,
      fixedColumnsOnLeft,
      fixedColumnsOnRight,
      mainColumns,
      mainTableHeight,
      fixedTableHeight,
      leftTableWidth,
      rightTableWidth,
      data,
      depthMap,
      expandedRowKeys,
      hasFixedColumns,
      hoveringRowKey,
      mainTableRef,
      leftTableRef,
      rightTableRef,
      isDynamic,
      isResetting,
      isScrolling,
      bodyWidth,
      emptyStyle,
      rootStyle,
      headerWidth,
      footerHeight,
      showEmpty,
      scrollTo,
      scrollToLeft,
      scrollToTop,
      scrollToRow,
      getRowHeight,
      onColumnSorted,
      onRowHeightChange,
      onRowHovered,
      onRowExpanded,
      onRowsRendered,
      onScroll,
      onVerticalScroll
    } = useTable.useTable(props);
    expose({
      scrollTo,
      scrollToLeft,
      scrollToTop,
      scrollToRow
    });
    vue.provide(tokens.TableV2InjectionKey, {
      ns,
      isResetting,
      hoveringRowKey,
      isScrolling
    });
    return () => {
      const {
        cache,
        cellProps,
        estimatedRowHeight,
        expandColumnKey,
        fixedData,
        headerHeight,
        headerClass,
        headerProps,
        headerCellProps,
        sortBy,
        sortState,
        rowHeight,
        rowClass,
        rowEventHandlers,
        rowKey,
        rowProps,
        scrollbarAlwaysOn,
        indentSize,
        iconSize,
        useIsScrolling,
        vScrollbarSize,
        width
      } = props;
      const _data = vue.unref(data);
      const mainTableProps = {
        cache,
        class: ns.e("main"),
        columns: vue.unref(mainColumns),
        data: _data,
        fixedData,
        estimatedRowHeight,
        bodyWidth: vue.unref(bodyWidth) + vScrollbarSize,
        headerHeight,
        headerWidth: vue.unref(headerWidth),
        height: vue.unref(mainTableHeight),
        mainTableRef,
        rowKey,
        rowHeight,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        useIsScrolling,
        width,
        getRowHeight,
        onRowsRendered,
        onScroll
      };
      const leftColumnsWidth = vue.unref(leftTableWidth);
      const _fixedTableHeight = vue.unref(fixedTableHeight);
      const leftTableProps = {
        cache,
        class: ns.e("left"),
        columns: vue.unref(fixedColumnsOnLeft),
        data: _data,
        estimatedRowHeight,
        leftTableRef,
        rowHeight,
        bodyWidth: leftColumnsWidth,
        headerWidth: leftColumnsWidth,
        headerHeight,
        height: _fixedTableHeight,
        rowKey,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        useIsScrolling,
        width: leftColumnsWidth,
        getRowHeight,
        onScroll: onVerticalScroll
      };
      const rightColumnsWidth = vue.unref(rightTableWidth);
      const rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize;
      const rightTableProps = {
        cache,
        class: ns.e("right"),
        columns: vue.unref(fixedColumnsOnRight),
        data: _data,
        estimatedRowHeight,
        rightTableRef,
        rowHeight,
        bodyWidth: rightColumnsWidthWithScrollbar,
        headerWidth: rightColumnsWidthWithScrollbar,
        headerHeight,
        height: _fixedTableHeight,
        rowKey,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        width: rightColumnsWidthWithScrollbar,
        style: `--${vue.unref(ns.namespace)}-table-scrollbar-size: ${vScrollbarSize}px`,
        useIsScrolling,
        getRowHeight,
        onScroll: onVerticalScroll
      };
      const _columnsStyles = vue.unref(columnsStyles);
      const tableRowProps = {
        ns,
        depthMap: vue.unref(depthMap),
        columnsStyles: _columnsStyles,
        expandColumnKey,
        expandedRowKeys: vue.unref(expandedRowKeys),
        estimatedRowHeight,
        hasFixedColumns: vue.unref(hasFixedColumns),
        hoveringRowKey: vue.unref(hoveringRowKey),
        rowProps,
        rowClass,
        rowKey,
        rowEventHandlers,
        onRowHovered,
        onRowExpanded,
        onRowHeightChange
      };
      const tableCellProps = {
        cellProps,
        expandColumnKey,
        indentSize,
        iconSize,
        rowKey,
        expandedRowKeys: vue.unref(expandedRowKeys),
        ns
      };
      const tableHeaderProps = {
        ns,
        headerClass,
        headerProps,
        columnsStyles: _columnsStyles
      };
      const tableHeaderCellProps = {
        ns,
        sortBy,
        sortState,
        headerCellProps,
        onColumnSorted
      };
      const tableSlots = {
        row: (props2) => vue.createVNode(row["default"], vue.mergeProps(props2, tableRowProps), {
          row: slots.row,
          cell: (props3) => {
            let _slot;
            return slots.cell ? vue.createVNode(cell["default"], vue.mergeProps(props3, tableCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), _isSlot(_slot = slots.cell(props3)) ? _slot : {
              default: () => [_slot]
            }) : vue.createVNode(cell["default"], vue.mergeProps(props3, tableCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), null);
          }
        }),
        header: (props2) => vue.createVNode(header["default"], vue.mergeProps(props2, tableHeaderProps), {
          header: slots.header,
          cell: (props3) => {
            let _slot2;
            return slots["header-cell"] ? vue.createVNode(headerCell["default"], vue.mergeProps(props3, tableHeaderCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), _isSlot(_slot2 = slots["header-cell"](props3)) ? _slot2 : {
              default: () => [_slot2]
            }) : vue.createVNode(headerCell["default"], vue.mergeProps(props3, tableHeaderCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), null);
          }
        })
      };
      const rootKls = [props.class, ns.b(), ns.e("root"), {
        [ns.is("dynamic")]: vue.unref(isDynamic)
      }];
      const footerProps = {
        class: ns.e("footer"),
        style: vue.unref(footerHeight)
      };
      return vue.createVNode("div", {
        "class": rootKls,
        "style": vue.unref(rootStyle)
      }, [vue.createVNode(mainTable["default"], mainTableProps, _isSlot(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), vue.createVNode(leftTable["default"], leftTableProps, _isSlot(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), vue.createVNode(rightTable["default"], rightTableProps, _isSlot(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), slots.footer && vue.createVNode(footer["default"], footerProps, {
        default: slots.footer
      }), vue.unref(showEmpty) && vue.createVNode(empty["default"], {
        "class": ns.e("empty"),
        "style": vue.unref(emptyStyle)
      }, {
        default: slots.empty
      }), slots.overlay && vue.createVNode(overlay["default"], {
        "class": ns.e("overlay")
      }, {
        default: slots.overlay
      })]);
    };
  }
});

exports["default"] = TableV2;
//# sourceMappingURL=table-v2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/table.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../virtual-list/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/common.js");
var row = __webpack_require__(/*! ./row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/row.js");
var header = __webpack_require__(/*! ./header.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/header.js");
var grid = __webpack_require__(/*! ./grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/grid.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var props = __webpack_require__(/*! ../../virtual-list/src/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");

const tableV2Props = runtime.buildProps({
  cache: grid.tableV2GridProps.cache,
  estimatedRowHeight: row.tableV2RowProps.estimatedRowHeight,
  rowKey: common.rowKey,
  headerClass: {
    type: runtime.definePropType([
      String,
      Function
    ])
  },
  headerProps: {
    type: runtime.definePropType([
      Object,
      Function
    ])
  },
  headerCellProps: {
    type: runtime.definePropType([
      Object,
      Function
    ])
  },
  headerHeight: header.tableV2HeaderProps.headerHeight,
  footerHeight: {
    type: Number,
    default: 0
  },
  rowClass: {
    type: runtime.definePropType([String, Function])
  },
  rowProps: {
    type: runtime.definePropType([Object, Function])
  },
  rowHeight: {
    type: Number,
    default: 50
  },
  cellProps: {
    type: runtime.definePropType([
      Object,
      Function
    ])
  },
  columns: common.columns,
  data: common.dataType,
  dataGetter: {
    type: runtime.definePropType(Function)
  },
  fixedData: common.fixedDataType,
  expandColumnKey: row.tableV2RowProps.expandColumnKey,
  expandedRowKeys: common.expandKeys,
  defaultExpandedRowKeys: common.expandKeys,
  class: common.classType,
  fixed: Boolean,
  style: {
    type: runtime.definePropType(Object)
  },
  width: common.requiredNumber,
  height: common.requiredNumber,
  maxHeight: Number,
  useIsScrolling: Boolean,
  indentSize: {
    type: Number,
    default: 12
  },
  iconSize: {
    type: Number,
    default: 12
  },
  hScrollbarSize: props.virtualizedGridProps.hScrollbarSize,
  vScrollbarSize: props.virtualizedGridProps.vScrollbarSize,
  scrollbarAlwaysOn: props.virtualizedScrollbarProps.alwaysOn,
  sortBy: {
    type: runtime.definePropType(Object),
    default: () => ({})
  },
  sortState: {
    type: runtime.definePropType(Object),
    default: void 0
  },
  onColumnSort: {
    type: runtime.definePropType(Function)
  },
  onExpandedRowsChange: {
    type: runtime.definePropType(Function)
  },
  onEndReached: {
    type: runtime.definePropType(Function)
  },
  onRowExpand: row.tableV2RowProps.onRowExpand,
  onScroll: grid.tableV2GridProps.onScroll,
  onRowsRendered: grid.tableV2GridProps.onRowsRendered,
  rowEventHandlers: row.tableV2RowProps.rowEventHandlers
});

exports.tableV2Props = tableV2Props;
//# sourceMappingURL=table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/tokens.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/tokens.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const TableV2InjectionKey = Symbol("tableV2");

exports.TableV2InjectionKey = TableV2InjectionKey;
//# sourceMappingURL=tokens.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/use-table.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/use-table.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ./composables/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/index.js");
var useColumns = __webpack_require__(/*! ./composables/use-columns.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-columns.js");
var useScrollbar = __webpack_require__(/*! ./composables/use-scrollbar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-scrollbar.js");
var useRow = __webpack_require__(/*! ./composables/use-row.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-row.js");
var useData = __webpack_require__(/*! ./composables/use-data.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-data.js");
var useStyles = __webpack_require__(/*! ./composables/use-styles.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/composables/use-styles.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function useTable(props) {
  const mainTableRef = vue.ref();
  const leftTableRef = vue.ref();
  const rightTableRef = vue.ref();
  const {
    columns,
    columnsStyles,
    columnsTotalWidth,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    hasFixedColumns,
    mainColumns,
    onColumnSorted
  } = useColumns.useColumns(props, vue.toRef(props, "columns"), vue.toRef(props, "fixed"));
  const {
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll,
    scrollPos
  } = useScrollbar.useScrollbar(props, {
    mainTableRef,
    leftTableRef,
    rightTableRef,
    onMaybeEndReached
  });
  const {
    expandedRowKeys,
    hoveringRowKey,
    lastRenderedRowIndex,
    isDynamic,
    isResetting,
    rowHeights,
    resetAfterIndex,
    onRowExpanded,
    onRowHeightChange,
    onRowHovered,
    onRowsRendered
  } = useRow.useRow(props, {
    mainTableRef,
    leftTableRef,
    rightTableRef
  });
  const { data, depthMap } = useData.useData(props, {
    expandedRowKeys,
    lastRenderedRowIndex,
    resetAfterIndex
  });
  const {
    bodyWidth,
    fixedTableHeight,
    mainTableHeight,
    leftTableWidth,
    rightTableWidth,
    headerWidth,
    rowsHeight,
    windowHeight,
    footerHeight,
    emptyStyle,
    rootStyle,
    headerHeight
  } = useStyles.useStyles(props, {
    columnsTotalWidth,
    data,
    fixedColumnsOnLeft,
    fixedColumnsOnRight
  });
  const isScrolling = vue.shallowRef(false);
  const containerRef = vue.ref();
  const showEmpty = vue.computed(() => {
    const noData = vue.unref(data).length === 0;
    return shared.isArray(props.fixedData) ? props.fixedData.length === 0 && noData : noData;
  });
  function getRowHeight(rowIndex) {
    const { estimatedRowHeight, rowHeight, rowKey } = props;
    if (!estimatedRowHeight)
      return rowHeight;
    return vue.unref(rowHeights)[vue.unref(data)[rowIndex][rowKey]] || estimatedRowHeight;
  }
  function onMaybeEndReached() {
    const { onEndReached } = props;
    if (!onEndReached)
      return;
    const { scrollTop } = vue.unref(scrollPos);
    const _totalHeight = vue.unref(rowsHeight);
    const clientHeight = vue.unref(windowHeight);
    const heightUntilEnd = _totalHeight - (scrollTop + clientHeight) + props.hScrollbarSize;
    if (vue.unref(lastRenderedRowIndex) >= 0 && _totalHeight === scrollTop + vue.unref(mainTableHeight) - vue.unref(headerHeight)) {
      onEndReached(heightUntilEnd);
    }
  }
  vue.watch(() => props.expandedRowKeys, (val) => expandedRowKeys.value = val, {
    deep: true
  });
  return {
    columns,
    containerRef,
    mainTableRef,
    leftTableRef,
    rightTableRef,
    isDynamic,
    isResetting,
    isScrolling,
    hoveringRowKey,
    hasFixedColumns,
    columnsStyles,
    columnsTotalWidth,
    data,
    expandedRowKeys,
    depthMap,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    mainColumns,
    bodyWidth,
    emptyStyle,
    rootStyle,
    headerWidth,
    footerHeight,
    mainTableHeight,
    fixedTableHeight,
    leftTableWidth,
    rightTableWidth,
    showEmpty,
    getRowHeight,
    onColumnSorted,
    onRowHovered,
    onRowExpanded,
    onRowsRendered,
    onRowHeightChange,
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll
  };
}

exports.useTable = useTable;
//# sourceMappingURL=use-table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table-v2/src/utils.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var style = __webpack_require__(/*! ../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

const sumReducer = (sum2, num) => sum2 + num;
const sum = (listLike) => {
  return shared.isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;
};
const tryCall = (fLike, params, defaultRet = {}) => {
  return shared.isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;
};
const enforceUnit = (style$1) => {
  ;
  ["width", "maxWidth", "minWidth", "height"].forEach((key) => {
    style$1[key] = style.addUnit(style$1[key]);
  });
  return style$1;
};
const componentToSlot = (ComponentLike) => vue.isVNode(ComponentLike) ? (props) => vue.h(ComponentLike, props) : ComponentLike;

exports.componentToSlot = componentToSlot;
exports.enforceUnit = enforceUnit;
exports.sum = sum;
exports.tryCall = tryCall;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/index.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var table = __webpack_require__(/*! ./src/table.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table.js");
__webpack_require__(/*! ./src/tableColumn.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tableColumn.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");
var index = __webpack_require__(/*! ./src/table-column/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/index.js");

const ElTable = install.withInstall(table["default"], {
  TableColumn: index["default"]
});
const ElTableColumn = install.withNoopInstall(index["default"]);

exports.ElTable = ElTable;
exports.ElTableColumn = ElTableColumn;
exports["default"] = ElTable;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/composables/use-scrollbar.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/composables/use-scrollbar.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

const useScrollbar = () => {
  const scrollBarRef = vue.ref();
  const scrollTo = (options, yCoord) => {
    const scrollbar = scrollBarRef.value;
    if (scrollbar) {
      scrollbar.scrollTo(options, yCoord);
    }
  };
  const setScrollPosition = (position, offset) => {
    const scrollbar = scrollBarRef.value;
    if (scrollbar && types.isNumber(offset) && ["Top", "Left"].includes(position)) {
      scrollbar[`setScroll${position}`](offset);
    }
  };
  const setScrollTop = (top) => setScrollPosition("Top", top);
  const setScrollLeft = (left) => setScrollPosition("Left", left);
  return {
    scrollBarRef,
    scrollTo,
    setScrollTop,
    setScrollLeft
  };
};

exports.useScrollbar = useScrollbar;
//# sourceMappingURL=use-scrollbar.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/config.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/config.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var objects = __webpack_require__(/*! ../../../utils/objects.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/objects.js");

const defaultClassNames = {
  selection: "table-column--selection",
  expand: "table__expand-column"
};
const cellStarts = {
  default: {
    order: ""
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  }
};
const getDefaultClassName = (type) => {
  return defaultClassNames[type] || "";
};
const cellForced = {
  selection: {
    renderHeader({ store, column }) {
      function isDisabled() {
        return store.states.data.value && store.states.data.value.length === 0;
      }
      return vue.h(index.ElCheckbox, {
        disabled: isDisabled(),
        size: store.states.tableSize.value,
        indeterminate: store.states.selection.value.length > 0 && !store.states.isAllSelected.value,
        "onUpdate:modelValue": store.toggleAllSelection,
        modelValue: store.states.isAllSelected.value,
        ariaLabel: column.label
      });
    },
    renderCell({
      row,
      column,
      store,
      $index
    }) {
      return vue.h(index.ElCheckbox, {
        disabled: column.selectable ? !column.selectable.call(null, row, $index) : false,
        size: store.states.tableSize.value,
        onChange: () => {
          store.commit("rowSelectedChanged", row);
        },
        onClick: (event) => event.stopPropagation(),
        modelValue: store.isSelected(row),
        ariaLabel: column.label
      });
    },
    sortable: false,
    resizable: false
  },
  index: {
    renderHeader({ column }) {
      return column.label || "#";
    },
    renderCell({
      column,
      $index
    }) {
      let i = $index + 1;
      const index = column.index;
      if (typeof index === "number") {
        i = $index + index;
      } else if (typeof index === "function") {
        i = index($index);
      }
      return vue.h("div", {}, [i]);
    },
    sortable: false
  },
  expand: {
    renderHeader({ column }) {
      return column.label || "";
    },
    renderCell({
      row,
      store,
      expanded
    }) {
      const { ns } = store;
      const classes = [ns.e("expand-icon")];
      if (expanded) {
        classes.push(ns.em("expand-icon", "expanded"));
      }
      const callback = function(e) {
        e.stopPropagation();
        store.toggleRowExpansion(row);
      };
      return vue.h("div", {
        class: classes,
        onClick: callback
      }, {
        default: () => {
          return [
            vue.h(index$1.ElIcon, null, {
              default: () => {
                return [vue.h(iconsVue.ArrowRight)];
              }
            })
          ];
        }
      });
    },
    sortable: false,
    resizable: false
  }
};
function defaultRenderCell({
  row,
  column,
  $index
}) {
  var _a;
  const property = column.property;
  const value = property && objects.getProp(row, property).value;
  if (column && column.formatter) {
    return column.formatter(row, column, value, $index);
  }
  return ((_a = value == null ? void 0 : value.toString) == null ? void 0 : _a.call(value)) || "";
}
function treeCellPrefix({
  row,
  treeNode,
  store
}, createPlaceholder = false) {
  const { ns } = store;
  if (!treeNode) {
    if (createPlaceholder) {
      return [
        vue.h("span", {
          class: ns.e("placeholder")
        })
      ];
    }
    return null;
  }
  const ele = [];
  const callback = function(e) {
    e.stopPropagation();
    if (treeNode.loading) {
      return;
    }
    store.loadOrToggle(row);
  };
  if (treeNode.indent) {
    ele.push(vue.h("span", {
      class: ns.e("indent"),
      style: { "padding-left": `${treeNode.indent}px` }
    }));
  }
  if (typeof treeNode.expanded === "boolean" && !treeNode.noLazyChildren) {
    const expandClasses = [
      ns.e("expand-icon"),
      treeNode.expanded ? ns.em("expand-icon", "expanded") : ""
    ];
    let icon = iconsVue.ArrowRight;
    if (treeNode.loading) {
      icon = iconsVue.Loading;
    }
    ele.push(vue.h("div", {
      class: expandClasses,
      onClick: callback
    }, {
      default: () => {
        return [
          vue.h(index$1.ElIcon, { class: { [ns.is("loading")]: treeNode.loading } }, {
            default: () => [vue.h(icon)]
          })
        ];
      }
    }));
  } else {
    ele.push(vue.h("span", {
      class: ns.e("placeholder")
    }));
  }
  return ele;
}

exports.cellForced = cellForced;
exports.cellStarts = cellStarts;
exports.defaultRenderCell = defaultRenderCell;
exports.getDefaultClassName = getDefaultClassName;
exports.treeCellPrefix = treeCellPrefix;
//# sourceMappingURL=config.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/filter-panel.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/filter-panel.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
var index$3 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../directives/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$2 = __webpack_require__(/*! ../../tooltip/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js");
var index$1 = __webpack_require__(/*! ../../scrollbar/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/scrollbar/index.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index$4 = __webpack_require__(/*! ../../../directives/click-outside/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/click-outside/index.js");
var index$5 = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$6 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const { CheckboxGroup: ElCheckboxGroup } = index.ElCheckbox;
const _sfc_main = vue.defineComponent({
  name: "ElTableFilterPanel",
  components: {
    ElCheckbox: index.ElCheckbox,
    ElCheckboxGroup,
    ElScrollbar: index$1.ElScrollbar,
    ElTooltip: index$2.ElTooltip,
    ElIcon: index$3.ElIcon,
    ArrowDown: iconsVue.ArrowDown,
    ArrowUp: iconsVue.ArrowUp
  },
  directives: { ClickOutside: index$4["default"] },
  props: {
    placement: {
      type: String,
      default: "bottom-start"
    },
    store: {
      type: Object
    },
    column: {
      type: Object
    },
    upDataColumn: {
      type: Function
    }
  },
  setup(props) {
    const instance = vue.getCurrentInstance();
    const { t } = index$5.useLocale();
    const ns = index$6.useNamespace("table-filter");
    const parent = instance == null ? void 0 : instance.parent;
    if (!parent.filterPanels.value[props.column.id]) {
      parent.filterPanels.value[props.column.id] = instance;
    }
    const tooltipVisible = vue.ref(false);
    const tooltip = vue.ref(null);
    const filters = vue.computed(() => {
      return props.column && props.column.filters;
    });
    const filterValue = vue.computed({
      get: () => {
        var _a;
        return (((_a = props.column) == null ? void 0 : _a.filteredValue) || [])[0];
      },
      set: (value) => {
        if (filteredValue.value) {
          if (typeof value !== "undefined" && value !== null) {
            filteredValue.value.splice(0, 1, value);
          } else {
            filteredValue.value.splice(0, 1);
          }
        }
      }
    });
    const filteredValue = vue.computed({
      get() {
        if (props.column) {
          return props.column.filteredValue || [];
        }
        return [];
      },
      set(value) {
        if (props.column) {
          props.upDataColumn("filteredValue", value);
        }
      }
    });
    const multiple = vue.computed(() => {
      if (props.column) {
        return props.column.filterMultiple;
      }
      return true;
    });
    const isActive = (filter) => {
      return filter.value === filterValue.value;
    };
    const hidden = () => {
      tooltipVisible.value = false;
    };
    const showFilterPanel = (e) => {
      e.stopPropagation();
      tooltipVisible.value = !tooltipVisible.value;
    };
    const hideFilterPanel = () => {
      tooltipVisible.value = false;
    };
    const handleConfirm = () => {
      confirmFilter(filteredValue.value);
      hidden();
    };
    const handleReset = () => {
      filteredValue.value = [];
      confirmFilter(filteredValue.value);
      hidden();
    };
    const handleSelect = (_filterValue) => {
      filterValue.value = _filterValue;
      if (typeof _filterValue !== "undefined" && _filterValue !== null) {
        confirmFilter(filteredValue.value);
      } else {
        confirmFilter([]);
      }
      hidden();
    };
    const confirmFilter = (filteredValue2) => {
      props.store.commit("filterChange", {
        column: props.column,
        values: filteredValue2
      });
      props.store.updateAllSelected();
    };
    vue.watch(tooltipVisible, (value) => {
      if (props.column) {
        props.upDataColumn("filterOpened", value);
      }
    }, {
      immediate: true
    });
    const popperPaneRef = vue.computed(() => {
      var _a, _b;
      return (_b = (_a = tooltip.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;
    });
    return {
      tooltipVisible,
      multiple,
      filteredValue,
      filterValue,
      filters,
      handleConfirm,
      handleReset,
      handleSelect,
      isActive,
      t,
      ns,
      showFilterPanel,
      hideFilterPanel,
      popperPaneRef,
      tooltip
    };
  }
});
const _hoisted_1 = { key: 0 };
const _hoisted_2 = ["disabled"];
const _hoisted_3 = ["label", "onClick"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_checkbox = vue.resolveComponent("el-checkbox");
  const _component_el_checkbox_group = vue.resolveComponent("el-checkbox-group");
  const _component_el_scrollbar = vue.resolveComponent("el-scrollbar");
  const _component_arrow_up = vue.resolveComponent("arrow-up");
  const _component_arrow_down = vue.resolveComponent("arrow-down");
  const _component_el_icon = vue.resolveComponent("el-icon");
  const _component_el_tooltip = vue.resolveComponent("el-tooltip");
  const _directive_click_outside = vue.resolveDirective("click-outside");
  return vue.openBlock(), vue.createBlock(_component_el_tooltip, {
    ref: "tooltip",
    visible: _ctx.tooltipVisible,
    offset: 0,
    placement: _ctx.placement,
    "show-arrow": false,
    "stop-popper-mouse-event": false,
    teleported: "",
    effect: "light",
    pure: "",
    "popper-class": _ctx.ns.b(),
    persistent: ""
  }, {
    content: vue.withCtx(() => [
      _ctx.multiple ? (vue.openBlock(), vue.createElementBlock("div", _hoisted_1, [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(_ctx.ns.e("content"))
        }, [
          vue.createVNode(_component_el_scrollbar, {
            "wrap-class": _ctx.ns.e("wrap")
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_el_checkbox_group, {
                modelValue: _ctx.filteredValue,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.filteredValue = $event),
                class: vue.normalizeClass(_ctx.ns.e("checkbox-group"))
              }, {
                default: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.filters, (filter) => {
                    return vue.openBlock(), vue.createBlock(_component_el_checkbox, {
                      key: filter.value,
                      label: filter.value
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(vue.toDisplayString(filter.text), 1)
                      ]),
                      _: 2
                    }, 1032, ["label"]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["modelValue", "class"])
            ]),
            _: 1
          }, 8, ["wrap-class"])
        ], 2),
        vue.createElementVNode("div", {
          class: vue.normalizeClass(_ctx.ns.e("bottom"))
        }, [
          vue.createElementVNode("button", {
            class: vue.normalizeClass({ [_ctx.ns.is("disabled")]: _ctx.filteredValue.length === 0 }),
            disabled: _ctx.filteredValue.length === 0,
            type: "button",
            onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleConfirm && _ctx.handleConfirm(...args))
          }, vue.toDisplayString(_ctx.t("el.table.confirmFilter")), 11, _hoisted_2),
          vue.createElementVNode("button", {
            type: "button",
            onClick: _cache[2] || (_cache[2] = (...args) => _ctx.handleReset && _ctx.handleReset(...args))
          }, vue.toDisplayString(_ctx.t("el.table.resetFilter")), 1)
        ], 2)
      ])) : (vue.openBlock(), vue.createElementBlock("ul", {
        key: 1,
        class: vue.normalizeClass(_ctx.ns.e("list"))
      }, [
        vue.createElementVNode("li", {
          class: vue.normalizeClass([
            _ctx.ns.e("list-item"),
            {
              [_ctx.ns.is("active")]: _ctx.filterValue === void 0 || _ctx.filterValue === null
            }
          ]),
          onClick: _cache[3] || (_cache[3] = ($event) => _ctx.handleSelect(null))
        }, vue.toDisplayString(_ctx.t("el.table.clearFilter")), 3),
        (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.filters, (filter) => {
          return vue.openBlock(), vue.createElementBlock("li", {
            key: filter.value,
            class: vue.normalizeClass([_ctx.ns.e("list-item"), _ctx.ns.is("active", _ctx.isActive(filter))]),
            label: filter.value,
            onClick: ($event) => _ctx.handleSelect(filter.value)
          }, vue.toDisplayString(filter.text), 11, _hoisted_3);
        }), 128))
      ], 2))
    ]),
    default: vue.withCtx(() => [
      vue.withDirectives((vue.openBlock(), vue.createElementBlock("span", {
        class: vue.normalizeClass([
          `${_ctx.ns.namespace.value}-table__column-filter-trigger`,
          `${_ctx.ns.namespace.value}-none-outline`
        ]),
        onClick: _cache[4] || (_cache[4] = (...args) => _ctx.showFilterPanel && _ctx.showFilterPanel(...args))
      }, [
        vue.createVNode(_component_el_icon, null, {
          default: vue.withCtx(() => [
            _ctx.column.filterOpened ? (vue.openBlock(), vue.createBlock(_component_arrow_up, { key: 0 })) : (vue.openBlock(), vue.createBlock(_component_arrow_down, { key: 1 }))
          ]),
          _: 1
        })
      ], 2)), [
        [_directive_click_outside, _ctx.hideFilterPanel, _ctx.popperPaneRef]
      ])
    ]),
    _: 1
  }, 8, ["visible", "placement", "popper-class"]);
}
var FilterPanel = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/table/src/filter-panel.vue"]]);

exports["default"] = FilterPanel;
//# sourceMappingURL=filter-panel.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/h-helper.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/h-helper.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

function hColgroup(props) {
  const isAuto = props.tableLayout === "auto";
  let columns = props.columns || [];
  if (isAuto) {
    if (columns.every((column) => column.width === void 0)) {
      columns = [];
    }
  }
  const getPropsData = (column) => {
    const propsData = {
      key: `${props.tableLayout}_${column.id}`,
      style: {},
      name: void 0
    };
    if (isAuto) {
      propsData.style = {
        width: `${column.width}px`
      };
    } else {
      propsData.name = column.id;
    }
    return propsData;
  };
  return vue.h("colgroup", {}, columns.map((column) => vue.h("col", getPropsData(column))));
}
hColgroup.props = ["columns", "tableLayout"];

exports.hColgroup = hColgroup;
//# sourceMappingURL=h-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/layout-observer.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/layout-observer.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

function useLayoutObserver(root) {
  const instance = vue.getCurrentInstance();
  vue.onBeforeMount(() => {
    tableLayout.value.addObserver(instance);
  });
  vue.onMounted(() => {
    onColumnsChange(tableLayout.value);
    onScrollableChange(tableLayout.value);
  });
  vue.onUpdated(() => {
    onColumnsChange(tableLayout.value);
    onScrollableChange(tableLayout.value);
  });
  vue.onUnmounted(() => {
    tableLayout.value.removeObserver(instance);
  });
  const tableLayout = vue.computed(() => {
    const layout = root.layout;
    if (!layout) {
      throw new Error("Can not find table layout.");
    }
    return layout;
  });
  const onColumnsChange = (layout) => {
    var _a;
    const cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll("colgroup > col")) || [];
    if (!cols.length)
      return;
    const flattenColumns = layout.getFlattenColumns();
    const columnsMap = {};
    flattenColumns.forEach((column) => {
      columnsMap[column.id] = column;
    });
    for (let i = 0, j = cols.length; i < j; i++) {
      const col = cols[i];
      const name = col.getAttribute("name");
      const column = columnsMap[name];
      if (column) {
        col.setAttribute("width", column.realWidth || column.width);
      }
    }
  };
  const onScrollableChange = (layout) => {
    var _a, _b;
    const cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll("colgroup > col[name=gutter]")) || [];
    for (let i = 0, j = cols.length; i < j; i++) {
      const col = cols[i];
      col.setAttribute("width", layout.scrollY.value ? layout.gutterWidth : "0");
    }
    const ths = ((_b = root.vnode.el) == null ? void 0 : _b.querySelectorAll("th.gutter")) || [];
    for (let i = 0, j = ths.length; i < j; i++) {
      const th = ths[i];
      th.style.width = layout.scrollY.value ? `${layout.gutterWidth}px` : "0";
      th.style.display = layout.scrollY.value ? "" : "none";
    }
  };
  return {
    tableLayout: tableLayout.value,
    onColumnsChange,
    onScrollableChange
  };
}

exports["default"] = useLayoutObserver;
//# sourceMappingURL=layout-observer.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/current.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/current.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");

function useCurrent(watcherData) {
  const instance = vue.getCurrentInstance();
  const _currentRowKey = vue.ref(null);
  const currentRow = vue.ref(null);
  const setCurrentRowKey = (key) => {
    instance.store.assertRowKey();
    _currentRowKey.value = key;
    setCurrentRowByKey(key);
  };
  const restoreCurrentRowKey = () => {
    _currentRowKey.value = null;
  };
  const setCurrentRowByKey = (key) => {
    const { data, rowKey } = watcherData;
    let _currentRow = null;
    if (rowKey.value) {
      _currentRow = (vue.unref(data) || []).find((item) => util.getRowIdentity(item, rowKey.value) === key);
    }
    currentRow.value = _currentRow;
    instance.emit("current-change", currentRow.value, null);
  };
  const updateCurrentRow = (_currentRow) => {
    const oldCurrentRow = currentRow.value;
    if (_currentRow && _currentRow !== oldCurrentRow) {
      currentRow.value = _currentRow;
      instance.emit("current-change", currentRow.value, oldCurrentRow);
      return;
    }
    if (!_currentRow && oldCurrentRow) {
      currentRow.value = null;
      instance.emit("current-change", null, oldCurrentRow);
    }
  };
  const updateCurrentRowData = () => {
    const rowKey = watcherData.rowKey.value;
    const data = watcherData.data.value || [];
    const oldCurrentRow = currentRow.value;
    if (!data.includes(oldCurrentRow) && oldCurrentRow) {
      if (rowKey) {
        const currentRowKey = util.getRowIdentity(oldCurrentRow, rowKey);
        setCurrentRowByKey(currentRowKey);
      } else {
        currentRow.value = null;
      }
      if (currentRow.value === null) {
        instance.emit("current-change", null, oldCurrentRow);
      }
    } else if (_currentRowKey.value) {
      setCurrentRowByKey(_currentRowKey.value);
      restoreCurrentRowKey();
    }
  };
  return {
    setCurrentRowKey,
    restoreCurrentRowKey,
    setCurrentRowByKey,
    updateCurrentRow,
    updateCurrentRowData,
    states: {
      _currentRowKey,
      currentRow
    }
  };
}

exports["default"] = useCurrent;
//# sourceMappingURL=current.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/expand.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/expand.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");

function useExpand(watcherData) {
  const instance = vue.getCurrentInstance();
  const defaultExpandAll = vue.ref(false);
  const expandRows = vue.ref([]);
  const updateExpandRows = () => {
    const data = watcherData.data.value || [];
    const rowKey = watcherData.rowKey.value;
    if (defaultExpandAll.value) {
      expandRows.value = data.slice();
    } else if (rowKey) {
      const expandRowsMap = util.getKeysMap(expandRows.value, rowKey);
      expandRows.value = data.reduce((prev, row) => {
        const rowId = util.getRowIdentity(row, rowKey);
        const rowInfo = expandRowsMap[rowId];
        if (rowInfo) {
          prev.push(row);
        }
        return prev;
      }, []);
    } else {
      expandRows.value = [];
    }
  };
  const toggleRowExpansion = (row, expanded) => {
    const changed = util.toggleRowStatus(expandRows.value, row, expanded);
    if (changed) {
      instance.emit("expand-change", row, expandRows.value.slice());
    }
  };
  const setExpandRowKeys = (rowKeys) => {
    instance.store.assertRowKey();
    const data = watcherData.data.value || [];
    const rowKey = watcherData.rowKey.value;
    const keysMap = util.getKeysMap(data, rowKey);
    expandRows.value = rowKeys.reduce((prev, cur) => {
      const info = keysMap[cur];
      if (info) {
        prev.push(info.row);
      }
      return prev;
    }, []);
  };
  const isRowExpanded = (row) => {
    const rowKey = watcherData.rowKey.value;
    if (rowKey) {
      const expandMap = util.getKeysMap(expandRows.value, rowKey);
      return !!expandMap[util.getRowIdentity(row, rowKey)];
    }
    return expandRows.value.includes(row);
  };
  return {
    updateExpandRows,
    toggleRowExpansion,
    setExpandRowKeys,
    isRowExpanded,
    states: {
      expandRows,
      defaultExpandAll
    }
  };
}

exports["default"] = useExpand;
//# sourceMappingURL=expand.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/helper.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/helper.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var index = __webpack_require__(/*! ./index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/index.js");

const InitialStateMap = {
  rowKey: "rowKey",
  defaultExpandAll: "defaultExpandAll",
  selectOnIndeterminate: "selectOnIndeterminate",
  indent: "indent",
  lazy: "lazy",
  data: "data",
  ["treeProps.hasChildren"]: {
    key: "lazyColumnIdentifier",
    default: "hasChildren"
  },
  ["treeProps.children"]: {
    key: "childrenColumnName",
    default: "children"
  }
};
function createStore(table, props) {
  if (!table) {
    throw new Error("Table is required.");
  }
  const store = index["default"]();
  store.toggleAllSelection = lodashUnified.debounce(store._toggleAllSelection, 10);
  Object.keys(InitialStateMap).forEach((key) => {
    handleValue(getArrKeysValue(props, key), key, store);
  });
  proxyTableProps(store, props);
  return store;
}
function proxyTableProps(store, props) {
  Object.keys(InitialStateMap).forEach((key) => {
    vue.watch(() => getArrKeysValue(props, key), (value) => {
      handleValue(value, key, store);
    });
  });
}
function handleValue(value, propsKey, store) {
  let newVal = value;
  let storeKey = InitialStateMap[propsKey];
  if (typeof InitialStateMap[propsKey] === "object") {
    storeKey = storeKey.key;
    newVal = newVal || InitialStateMap[propsKey].default;
  }
  store.states[storeKey].value = newVal;
}
function getArrKeysValue(props, keys) {
  if (keys.includes(".")) {
    const keyList = keys.split(".");
    let value = props;
    keyList.forEach((key) => {
      value = value[key];
    });
    return value;
  } else {
    return props[keys];
  }
}

exports.createStore = createStore;
//# sourceMappingURL=helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/index.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/index.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var watcher = __webpack_require__(/*! ./watcher.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/watcher.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function replaceColumn(array, column) {
  return array.map((item) => {
    var _a;
    if (item.id === column.id) {
      return column;
    } else if ((_a = item.children) == null ? void 0 : _a.length) {
      item.children = replaceColumn(item.children, column);
    }
    return item;
  });
}
function sortColumn(array) {
  array.forEach((item) => {
    var _a, _b;
    item.no = (_a = item.getColumnIndex) == null ? void 0 : _a.call(item);
    if ((_b = item.children) == null ? void 0 : _b.length) {
      sortColumn(item.children);
    }
  });
  array.sort((cur, pre) => cur.no - pre.no);
}
function useStore() {
  const instance = vue.getCurrentInstance();
  const watcher$1 = watcher["default"]();
  const ns = index.useNamespace("table");
  const mutations = {
    setData(states, data) {
      const dataInstanceChanged = vue.unref(states._data) !== data;
      states.data.value = data;
      states._data.value = data;
      instance.store.execQuery();
      instance.store.updateCurrentRowData();
      instance.store.updateExpandRows();
      instance.store.updateTreeData(instance.store.states.defaultExpandAll.value);
      if (vue.unref(states.reserveSelection)) {
        instance.store.assertRowKey();
        instance.store.updateSelectionByRowKey();
      } else {
        if (dataInstanceChanged) {
          instance.store.clearSelection();
        } else {
          instance.store.cleanSelection();
        }
      }
      instance.store.updateAllSelected();
      if (instance.$ready) {
        instance.store.scheduleLayout();
      }
    },
    insertColumn(states, column, parent, updateColumnOrder) {
      const array = vue.unref(states._columns);
      let newColumns = [];
      if (!parent) {
        array.push(column);
        newColumns = array;
      } else {
        if (parent && !parent.children) {
          parent.children = [];
        }
        parent.children.push(column);
        newColumns = replaceColumn(array, parent);
      }
      sortColumn(newColumns);
      states._columns.value = newColumns;
      states.updateOrderFns.push(updateColumnOrder);
      if (column.type === "selection") {
        states.selectable.value = column.selectable;
        states.reserveSelection.value = column.reserveSelection;
      }
      if (instance.$ready) {
        instance.store.updateColumns();
        instance.store.scheduleLayout();
      }
    },
    updateColumnOrder(states, column) {
      var _a;
      const newColumnIndex = (_a = column.getColumnIndex) == null ? void 0 : _a.call(column);
      if (newColumnIndex === column.no)
        return;
      sortColumn(states._columns.value);
      if (instance.$ready) {
        instance.store.updateColumns();
      }
    },
    removeColumn(states, column, parent, updateColumnOrder) {
      const array = vue.unref(states._columns) || [];
      if (parent) {
        parent.children.splice(parent.children.findIndex((item) => item.id === column.id), 1);
        vue.nextTick(() => {
          var _a;
          if (((_a = parent.children) == null ? void 0 : _a.length) === 0) {
            delete parent.children;
          }
        });
        states._columns.value = replaceColumn(array, parent);
      } else {
        const index = array.indexOf(column);
        if (index > -1) {
          array.splice(index, 1);
          states._columns.value = array;
        }
      }
      const updateFnIndex = states.updateOrderFns.indexOf(updateColumnOrder);
      updateFnIndex > -1 && states.updateOrderFns.splice(updateFnIndex, 1);
      if (instance.$ready) {
        instance.store.updateColumns();
        instance.store.scheduleLayout();
      }
    },
    sort(states, options) {
      const { prop, order, init } = options;
      if (prop) {
        const column = vue.unref(states.columns).find((column2) => column2.property === prop);
        if (column) {
          column.order = order;
          instance.store.updateSort(column, prop, order);
          instance.store.commit("changeSortCondition", { init });
        }
      }
    },
    changeSortCondition(states, options) {
      const { sortingColumn, sortProp, sortOrder } = states;
      const columnValue = vue.unref(sortingColumn), propValue = vue.unref(sortProp), orderValue = vue.unref(sortOrder);
      if (orderValue === null) {
        states.sortingColumn.value = null;
        states.sortProp.value = null;
      }
      const ignore = { filter: true };
      instance.store.execQuery(ignore);
      if (!options || !(options.silent || options.init)) {
        instance.emit("sort-change", {
          column: columnValue,
          prop: propValue,
          order: orderValue
        });
      }
      instance.store.updateTableScrollY();
    },
    filterChange(_states, options) {
      const { column, values, silent } = options;
      const newFilters = instance.store.updateFilters(column, values);
      instance.store.execQuery();
      if (!silent) {
        instance.emit("filter-change", newFilters);
      }
      instance.store.updateTableScrollY();
    },
    toggleAllSelection() {
      instance.store.toggleAllSelection();
    },
    rowSelectedChanged(_states, row) {
      instance.store.toggleRowSelection(row);
      instance.store.updateAllSelected();
    },
    setHoverRow(states, row) {
      states.hoverRow.value = row;
    },
    setCurrentRow(_states, row) {
      instance.store.updateCurrentRow(row);
    }
  };
  const commit = function(name, ...args) {
    const mutations2 = instance.store.mutations;
    if (mutations2[name]) {
      mutations2[name].apply(instance, [instance.store.states].concat(args));
    } else {
      throw new Error(`Action not found: ${name}`);
    }
  };
  const updateTableScrollY = function() {
    vue.nextTick(() => instance.layout.updateScrollY.apply(instance.layout));
  };
  return {
    ns,
    ...watcher$1,
    mutations,
    commit,
    updateTableScrollY
  };
}
class HelperStore {
  constructor() {
    this.Return = useStore();
  }
}

exports["default"] = useStore;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/tree.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/tree.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");

function useTree(watcherData) {
  const expandRowKeys = vue.ref([]);
  const treeData = vue.ref({});
  const indent = vue.ref(16);
  const lazy = vue.ref(false);
  const lazyTreeNodeMap = vue.ref({});
  const lazyColumnIdentifier = vue.ref("hasChildren");
  const childrenColumnName = vue.ref("children");
  const instance = vue.getCurrentInstance();
  const normalizedData = vue.computed(() => {
    if (!watcherData.rowKey.value)
      return {};
    const data = watcherData.data.value || [];
    return normalize(data);
  });
  const normalizedLazyNode = vue.computed(() => {
    const rowKey = watcherData.rowKey.value;
    const keys = Object.keys(lazyTreeNodeMap.value);
    const res = {};
    if (!keys.length)
      return res;
    keys.forEach((key) => {
      if (lazyTreeNodeMap.value[key].length) {
        const item = { children: [] };
        lazyTreeNodeMap.value[key].forEach((row) => {
          const currentRowKey = util.getRowIdentity(row, rowKey);
          item.children.push(currentRowKey);
          if (row[lazyColumnIdentifier.value] && !res[currentRowKey]) {
            res[currentRowKey] = { children: [] };
          }
        });
        res[key] = item;
      }
    });
    return res;
  });
  const normalize = (data) => {
    const rowKey = watcherData.rowKey.value;
    const res = {};
    util.walkTreeNode(data, (parent, children, level) => {
      const parentId = util.getRowIdentity(parent, rowKey);
      if (Array.isArray(children)) {
        res[parentId] = {
          children: children.map((row) => util.getRowIdentity(row, rowKey)),
          level
        };
      } else if (lazy.value) {
        res[parentId] = {
          children: [],
          lazy: true,
          level
        };
      }
    }, childrenColumnName.value, lazyColumnIdentifier.value);
    return res;
  };
  const updateTreeData = (ifChangeExpandRowKeys = false, ifExpandAll = ((_a) => (_a = instance.store) == null ? void 0 : _a.states.defaultExpandAll.value)()) => {
    var _a2;
    const nested = normalizedData.value;
    const normalizedLazyNode_ = normalizedLazyNode.value;
    const keys = Object.keys(nested);
    const newTreeData = {};
    if (keys.length) {
      const oldTreeData = vue.unref(treeData);
      const rootLazyRowKeys = [];
      const getExpanded = (oldValue, key) => {
        if (ifChangeExpandRowKeys) {
          if (expandRowKeys.value) {
            return ifExpandAll || expandRowKeys.value.includes(key);
          } else {
            return !!(ifExpandAll || (oldValue == null ? void 0 : oldValue.expanded));
          }
        } else {
          const included = ifExpandAll || expandRowKeys.value && expandRowKeys.value.includes(key);
          return !!((oldValue == null ? void 0 : oldValue.expanded) || included);
        }
      };
      keys.forEach((key) => {
        const oldValue = oldTreeData[key];
        const newValue = { ...nested[key] };
        newValue.expanded = getExpanded(oldValue, key);
        if (newValue.lazy) {
          const { loaded = false, loading = false } = oldValue || {};
          newValue.loaded = !!loaded;
          newValue.loading = !!loading;
          rootLazyRowKeys.push(key);
        }
        newTreeData[key] = newValue;
      });
      const lazyKeys = Object.keys(normalizedLazyNode_);
      if (lazy.value && lazyKeys.length && rootLazyRowKeys.length) {
        lazyKeys.forEach((key) => {
          const oldValue = oldTreeData[key];
          const lazyNodeChildren = normalizedLazyNode_[key].children;
          if (rootLazyRowKeys.includes(key)) {
            if (newTreeData[key].children.length !== 0) {
              throw new Error("[ElTable]children must be an empty array.");
            }
            newTreeData[key].children = lazyNodeChildren;
          } else {
            const { loaded = false, loading = false } = oldValue || {};
            newTreeData[key] = {
              lazy: true,
              loaded: !!loaded,
              loading: !!loading,
              expanded: getExpanded(oldValue, key),
              children: lazyNodeChildren,
              level: ""
            };
          }
        });
      }
    }
    treeData.value = newTreeData;
    (_a2 = instance.store) == null ? void 0 : _a2.updateTableScrollY();
  };
  vue.watch(() => expandRowKeys.value, () => {
    updateTreeData(true);
  });
  vue.watch(() => normalizedData.value, () => {
    updateTreeData();
  });
  vue.watch(() => normalizedLazyNode.value, () => {
    updateTreeData();
  });
  const updateTreeExpandKeys = (value) => {
    expandRowKeys.value = value;
    updateTreeData();
  };
  const toggleTreeExpansion = (row, expanded) => {
    instance.store.assertRowKey();
    const rowKey = watcherData.rowKey.value;
    const id = util.getRowIdentity(row, rowKey);
    const data = id && treeData.value[id];
    if (id && data && "expanded" in data) {
      const oldExpanded = data.expanded;
      expanded = typeof expanded === "undefined" ? !data.expanded : expanded;
      treeData.value[id].expanded = expanded;
      if (oldExpanded !== expanded) {
        instance.emit("expand-change", row, expanded);
      }
      instance.store.updateTableScrollY();
    }
  };
  const loadOrToggle = (row) => {
    instance.store.assertRowKey();
    const rowKey = watcherData.rowKey.value;
    const id = util.getRowIdentity(row, rowKey);
    const data = treeData.value[id];
    if (lazy.value && data && "loaded" in data && !data.loaded) {
      loadData(row, id, data);
    } else {
      toggleTreeExpansion(row, void 0);
    }
  };
  const loadData = (row, key, treeNode) => {
    const { load } = instance.props;
    if (load && !treeData.value[key].loaded) {
      treeData.value[key].loading = true;
      load(row, treeNode, (data) => {
        if (!Array.isArray(data)) {
          throw new TypeError("[ElTable] data must be an array");
        }
        treeData.value[key].loading = false;
        treeData.value[key].loaded = true;
        treeData.value[key].expanded = true;
        if (data.length) {
          lazyTreeNodeMap.value[key] = data;
        }
        instance.emit("expand-change", row, true);
      });
    }
  };
  return {
    loadData,
    loadOrToggle,
    toggleTreeExpansion,
    updateTreeExpandKeys,
    updateTreeData,
    normalize,
    states: {
      expandRowKeys,
      treeData,
      indent,
      lazy,
      lazyTreeNodeMap,
      lazyColumnIdentifier,
      childrenColumnName
    }
  };
}

exports["default"] = useTree;
//# sourceMappingURL=tree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/watcher.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/watcher.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var expand = __webpack_require__(/*! ./expand.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/expand.js");
var current = __webpack_require__(/*! ./current.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/current.js");
var tree = __webpack_require__(/*! ./tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/tree.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const sortData = (data, states) => {
  const sortingColumn = states.sortingColumn;
  if (!sortingColumn || typeof sortingColumn.sortable === "string") {
    return data;
  }
  return util.orderBy(data, states.sortProp, states.sortOrder, sortingColumn.sortMethod, sortingColumn.sortBy);
};
const doFlattenColumns = (columns) => {
  const result = [];
  columns.forEach((column) => {
    if (column.children && column.children.length > 0) {
      result.push.apply(result, doFlattenColumns(column.children));
    } else {
      result.push(column);
    }
  });
  return result;
};
function useWatcher() {
  var _a;
  const instance = vue.getCurrentInstance();
  const { size: tableSize } = vue.toRefs((_a = instance.proxy) == null ? void 0 : _a.$props);
  const rowKey = vue.ref(null);
  const data = vue.ref([]);
  const _data = vue.ref([]);
  const isComplex = vue.ref(false);
  const _columns = vue.ref([]);
  const originColumns = vue.ref([]);
  const columns = vue.ref([]);
  const fixedColumns = vue.ref([]);
  const rightFixedColumns = vue.ref([]);
  const leafColumns = vue.ref([]);
  const fixedLeafColumns = vue.ref([]);
  const rightFixedLeafColumns = vue.ref([]);
  const updateOrderFns = [];
  const leafColumnsLength = vue.ref(0);
  const fixedLeafColumnsLength = vue.ref(0);
  const rightFixedLeafColumnsLength = vue.ref(0);
  const isAllSelected = vue.ref(false);
  const selection = vue.ref([]);
  const reserveSelection = vue.ref(false);
  const selectOnIndeterminate = vue.ref(false);
  const selectable = vue.ref(null);
  const filters = vue.ref({});
  const filteredData = vue.ref(null);
  const sortingColumn = vue.ref(null);
  const sortProp = vue.ref(null);
  const sortOrder = vue.ref(null);
  const hoverRow = vue.ref(null);
  vue.watch(data, () => instance.state && scheduleLayout(false), {
    deep: true
  });
  const assertRowKey = () => {
    if (!rowKey.value)
      throw new Error("[ElTable] prop row-key is required");
  };
  const updateChildFixed = (column) => {
    var _a2;
    (_a2 = column.children) == null ? void 0 : _a2.forEach((childColumn) => {
      childColumn.fixed = column.fixed;
      updateChildFixed(childColumn);
    });
  };
  const updateColumns = () => {
    _columns.value.forEach((column) => {
      updateChildFixed(column);
    });
    fixedColumns.value = _columns.value.filter((column) => column.fixed === true || column.fixed === "left");
    rightFixedColumns.value = _columns.value.filter((column) => column.fixed === "right");
    if (fixedColumns.value.length > 0 && _columns.value[0] && _columns.value[0].type === "selection" && !_columns.value[0].fixed) {
      _columns.value[0].fixed = true;
      fixedColumns.value.unshift(_columns.value[0]);
    }
    const notFixedColumns = _columns.value.filter((column) => !column.fixed);
    originColumns.value = [].concat(fixedColumns.value).concat(notFixedColumns).concat(rightFixedColumns.value);
    const leafColumns2 = doFlattenColumns(notFixedColumns);
    const fixedLeafColumns2 = doFlattenColumns(fixedColumns.value);
    const rightFixedLeafColumns2 = doFlattenColumns(rightFixedColumns.value);
    leafColumnsLength.value = leafColumns2.length;
    fixedLeafColumnsLength.value = fixedLeafColumns2.length;
    rightFixedLeafColumnsLength.value = rightFixedLeafColumns2.length;
    columns.value = [].concat(fixedLeafColumns2).concat(leafColumns2).concat(rightFixedLeafColumns2);
    isComplex.value = fixedColumns.value.length > 0 || rightFixedColumns.value.length > 0;
  };
  const scheduleLayout = (needUpdateColumns, immediate = false) => {
    if (needUpdateColumns) {
      updateColumns();
    }
    if (immediate) {
      instance.state.doLayout();
    } else {
      instance.state.debouncedUpdateLayout();
    }
  };
  const isSelected = (row) => {
    return selection.value.includes(row);
  };
  const clearSelection = () => {
    isAllSelected.value = false;
    const oldSelection = selection.value;
    if (oldSelection.length) {
      selection.value = [];
      instance.emit("selection-change", []);
    }
  };
  const cleanSelection = () => {
    let deleted;
    if (rowKey.value) {
      deleted = [];
      const selectedMap = util.getKeysMap(selection.value, rowKey.value);
      const dataMap = util.getKeysMap(data.value, rowKey.value);
      for (const key in selectedMap) {
        if (shared.hasOwn(selectedMap, key) && !dataMap[key]) {
          deleted.push(selectedMap[key].row);
        }
      }
    } else {
      deleted = selection.value.filter((item) => !data.value.includes(item));
    }
    if (deleted.length) {
      const newSelection = selection.value.filter((item) => !deleted.includes(item));
      selection.value = newSelection;
      instance.emit("selection-change", newSelection.slice());
    }
  };
  const getSelectionRows = () => {
    return (selection.value || []).slice();
  };
  const toggleRowSelection = (row, selected = void 0, emitChange = true) => {
    const changed = util.toggleRowStatus(selection.value, row, selected);
    if (changed) {
      const newSelection = (selection.value || []).slice();
      if (emitChange) {
        instance.emit("select", newSelection, row);
      }
      instance.emit("selection-change", newSelection);
    }
  };
  const _toggleAllSelection = () => {
    var _a2, _b;
    const value = selectOnIndeterminate.value ? !isAllSelected.value : !(isAllSelected.value || selection.value.length);
    isAllSelected.value = value;
    let selectionChanged = false;
    let childrenCount = 0;
    const rowKey2 = (_b = (_a2 = instance == null ? void 0 : instance.store) == null ? void 0 : _a2.states) == null ? void 0 : _b.rowKey.value;
    data.value.forEach((row, index) => {
      const rowIndex = index + childrenCount;
      if (selectable.value) {
        if (selectable.value.call(null, row, rowIndex) && util.toggleRowStatus(selection.value, row, value)) {
          selectionChanged = true;
        }
      } else {
        if (util.toggleRowStatus(selection.value, row, value)) {
          selectionChanged = true;
        }
      }
      childrenCount += getChildrenCount(util.getRowIdentity(row, rowKey2));
    });
    if (selectionChanged) {
      instance.emit("selection-change", selection.value ? selection.value.slice() : []);
    }
    instance.emit("select-all", selection.value);
  };
  const updateSelectionByRowKey = () => {
    const selectedMap = util.getKeysMap(selection.value, rowKey.value);
    data.value.forEach((row) => {
      const rowId = util.getRowIdentity(row, rowKey.value);
      const rowInfo = selectedMap[rowId];
      if (rowInfo) {
        selection.value[rowInfo.index] = row;
      }
    });
  };
  const updateAllSelected = () => {
    var _a2, _b, _c;
    if (((_a2 = data.value) == null ? void 0 : _a2.length) === 0) {
      isAllSelected.value = false;
      return;
    }
    let selectedMap;
    if (rowKey.value) {
      selectedMap = util.getKeysMap(selection.value, rowKey.value);
    }
    const isSelected2 = function(row) {
      if (selectedMap) {
        return !!selectedMap[util.getRowIdentity(row, rowKey.value)];
      } else {
        return selection.value.includes(row);
      }
    };
    let isAllSelected_ = true;
    let selectedCount = 0;
    let childrenCount = 0;
    for (let i = 0, j = (data.value || []).length; i < j; i++) {
      const keyProp = (_c = (_b = instance == null ? void 0 : instance.store) == null ? void 0 : _b.states) == null ? void 0 : _c.rowKey.value;
      const rowIndex = i + childrenCount;
      const item = data.value[i];
      const isRowSelectable = selectable.value && selectable.value.call(null, item, rowIndex);
      if (!isSelected2(item)) {
        if (!selectable.value || isRowSelectable) {
          isAllSelected_ = false;
          break;
        }
      } else {
        selectedCount++;
      }
      childrenCount += getChildrenCount(util.getRowIdentity(item, keyProp));
    }
    if (selectedCount === 0)
      isAllSelected_ = false;
    isAllSelected.value = isAllSelected_;
  };
  const getChildrenCount = (rowKey2) => {
    var _a2;
    if (!instance || !instance.store)
      return 0;
    const { treeData } = instance.store.states;
    let count = 0;
    const children = (_a2 = treeData.value[rowKey2]) == null ? void 0 : _a2.children;
    if (children) {
      count += children.length;
      children.forEach((childKey) => {
        count += getChildrenCount(childKey);
      });
    }
    return count;
  };
  const updateFilters = (columns2, values) => {
    if (!Array.isArray(columns2)) {
      columns2 = [columns2];
    }
    const filters_ = {};
    columns2.forEach((col) => {
      filters.value[col.id] = values;
      filters_[col.columnKey || col.id] = values;
    });
    return filters_;
  };
  const updateSort = (column, prop, order) => {
    if (sortingColumn.value && sortingColumn.value !== column) {
      sortingColumn.value.order = null;
    }
    sortingColumn.value = column;
    sortProp.value = prop;
    sortOrder.value = order;
  };
  const execFilter = () => {
    let sourceData = vue.unref(_data);
    Object.keys(filters.value).forEach((columnId) => {
      const values = filters.value[columnId];
      if (!values || values.length === 0)
        return;
      const column = util.getColumnById({
        columns: columns.value
      }, columnId);
      if (column && column.filterMethod) {
        sourceData = sourceData.filter((row) => {
          return values.some((value) => column.filterMethod.call(null, value, row, column));
        });
      }
    });
    filteredData.value = sourceData;
  };
  const execSort = () => {
    data.value = sortData(filteredData.value, {
      sortingColumn: sortingColumn.value,
      sortProp: sortProp.value,
      sortOrder: sortOrder.value
    });
  };
  const execQuery = (ignore = void 0) => {
    if (!(ignore && ignore.filter)) {
      execFilter();
    }
    execSort();
  };
  const clearFilter = (columnKeys) => {
    const { tableHeaderRef } = instance.refs;
    if (!tableHeaderRef)
      return;
    const panels = Object.assign({}, tableHeaderRef.filterPanels);
    const keys = Object.keys(panels);
    if (!keys.length)
      return;
    if (typeof columnKeys === "string") {
      columnKeys = [columnKeys];
    }
    if (Array.isArray(columnKeys)) {
      const columns_ = columnKeys.map((key) => util.getColumnByKey({
        columns: columns.value
      }, key));
      keys.forEach((key) => {
        const column = columns_.find((col) => col.id === key);
        if (column) {
          column.filteredValue = [];
        }
      });
      instance.store.commit("filterChange", {
        column: columns_,
        values: [],
        silent: true,
        multi: true
      });
    } else {
      keys.forEach((key) => {
        const column = columns.value.find((col) => col.id === key);
        if (column) {
          column.filteredValue = [];
        }
      });
      filters.value = {};
      instance.store.commit("filterChange", {
        column: {},
        values: [],
        silent: true
      });
    }
  };
  const clearSort = () => {
    if (!sortingColumn.value)
      return;
    updateSort(null, null, null);
    instance.store.commit("changeSortCondition", {
      silent: true
    });
  };
  const {
    setExpandRowKeys,
    toggleRowExpansion,
    updateExpandRows,
    states: expandStates,
    isRowExpanded
  } = expand["default"]({
    data,
    rowKey
  });
  const {
    updateTreeExpandKeys,
    toggleTreeExpansion,
    updateTreeData,
    loadOrToggle,
    states: treeStates
  } = tree["default"]({
    data,
    rowKey
  });
  const {
    updateCurrentRowData,
    updateCurrentRow,
    setCurrentRowKey,
    states: currentData
  } = current["default"]({
    data,
    rowKey
  });
  const setExpandRowKeysAdapter = (val) => {
    setExpandRowKeys(val);
    updateTreeExpandKeys(val);
  };
  const toggleRowExpansionAdapter = (row, expanded) => {
    const hasExpandColumn = columns.value.some(({ type }) => type === "expand");
    if (hasExpandColumn) {
      toggleRowExpansion(row, expanded);
    } else {
      toggleTreeExpansion(row, expanded);
    }
  };
  return {
    assertRowKey,
    updateColumns,
    scheduleLayout,
    isSelected,
    clearSelection,
    cleanSelection,
    getSelectionRows,
    toggleRowSelection,
    _toggleAllSelection,
    toggleAllSelection: null,
    updateSelectionByRowKey,
    updateAllSelected,
    updateFilters,
    updateCurrentRow,
    updateSort,
    execFilter,
    execSort,
    execQuery,
    clearFilter,
    clearSort,
    toggleRowExpansion,
    setExpandRowKeysAdapter,
    setCurrentRowKey,
    toggleRowExpansionAdapter,
    isRowExpanded,
    updateExpandRows,
    updateCurrentRowData,
    loadOrToggle,
    updateTreeData,
    states: {
      tableSize,
      rowKey,
      data,
      _data,
      isComplex,
      _columns,
      originColumns,
      columns,
      fixedColumns,
      rightFixedColumns,
      leafColumns,
      fixedLeafColumns,
      rightFixedLeafColumns,
      updateOrderFns,
      leafColumnsLength,
      fixedLeafColumnsLength,
      rightFixedLeafColumnsLength,
      isAllSelected,
      selection,
      reserveSelection,
      selectOnIndeterminate,
      selectable,
      filters,
      filteredData,
      sortingColumn,
      sortProp,
      sortOrder,
      hoverRow,
      ...expandStates,
      ...treeStates,
      ...currentData
    }
  };
}

exports["default"] = useWatcher;
//# sourceMappingURL=watcher.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/defaults.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/defaults.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const defaultProps = {
  store: {
    required: true,
    type: Object
  },
  stripe: Boolean,
  tooltipEffect: String,
  tooltipOptions: {
    type: Object
  },
  context: {
    default: () => ({}),
    type: Object
  },
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  fixed: {
    type: String,
    default: ""
  },
  highlight: Boolean
};

exports["default"] = defaultProps;
//# sourceMappingURL=defaults.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/events-helper.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/events-helper.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var index = __webpack_require__(/*! ../../../../hooks/use-z-index/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-z-index/index.js");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

function useEvents(props) {
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const tooltipContent = vue.ref("");
  const tooltipTrigger = vue.ref(vue.h("div"));
  const { nextZIndex } = index.useZIndex();
  const handleEvent = (event, row, name) => {
    var _a;
    const table = parent;
    const cell = util.getCell(event);
    let column;
    const namespace = (_a = table == null ? void 0 : table.vnode.el) == null ? void 0 : _a.dataset.prefix;
    if (cell) {
      column = util.getColumnByCell({
        columns: props.store.states.columns.value
      }, cell, namespace);
      if (column) {
        table == null ? void 0 : table.emit(`cell-${name}`, row, column, cell, event);
      }
    }
    table == null ? void 0 : table.emit(`row-${name}`, row, column, event);
  };
  const handleDoubleClick = (event, row) => {
    handleEvent(event, row, "dblclick");
  };
  const handleClick = (event, row) => {
    props.store.commit("setCurrentRow", row);
    handleEvent(event, row, "click");
  };
  const handleContextMenu = (event, row) => {
    handleEvent(event, row, "contextmenu");
  };
  const handleMouseEnter = lodashUnified.debounce((index) => {
    props.store.commit("setHoverRow", index);
  }, 30);
  const handleMouseLeave = lodashUnified.debounce(() => {
    props.store.commit("setHoverRow", null);
  }, 30);
  const getPadding = (el) => {
    const style = window.getComputedStyle(el, null);
    const paddingLeft = Number.parseInt(style.paddingLeft, 10) || 0;
    const paddingRight = Number.parseInt(style.paddingRight, 10) || 0;
    const paddingTop = Number.parseInt(style.paddingTop, 10) || 0;
    const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0;
    return {
      left: paddingLeft,
      right: paddingRight,
      top: paddingTop,
      bottom: paddingBottom
    };
  };
  const handleCellMouseEnter = (event, row, tooltipOptions) => {
    var _a;
    const table = parent;
    const cell = util.getCell(event);
    const namespace = (_a = table == null ? void 0 : table.vnode.el) == null ? void 0 : _a.dataset.prefix;
    if (cell) {
      const column = util.getColumnByCell({
        columns: props.store.states.columns.value
      }, cell, namespace);
      const hoverState = table.hoverState = { cell, column, row };
      table == null ? void 0 : table.emit("cell-mouse-enter", hoverState.row, hoverState.column, hoverState.cell, event);
    }
    if (!tooltipOptions) {
      return;
    }
    const cellChild = event.target.querySelector(".cell");
    if (!(style.hasClass(cellChild, `${namespace}-tooltip`) && cellChild.childNodes.length)) {
      return;
    }
    const range = document.createRange();
    range.setStart(cellChild, 0);
    range.setEnd(cellChild, cellChild.childNodes.length);
    let rangeWidth = range.getBoundingClientRect().width;
    let rangeHeight = range.getBoundingClientRect().height;
    const offsetWidth = rangeWidth - Math.floor(rangeWidth);
    if (offsetWidth < 1e-3) {
      rangeWidth = Math.floor(rangeWidth);
    }
    const offsetHeight = rangeHeight - Math.floor(rangeHeight);
    if (offsetHeight < 1e-3) {
      rangeHeight = Math.floor(rangeHeight);
    }
    const { top, left, right, bottom } = getPadding(cellChild);
    const horizontalPadding = left + right;
    const verticalPadding = top + bottom;
    if (rangeWidth + horizontalPadding > cellChild.offsetWidth || rangeHeight + verticalPadding > cellChild.offsetHeight || cellChild.scrollWidth > cellChild.offsetWidth) {
      util.createTablePopper(parent == null ? void 0 : parent.refs.tableWrapper, cell, cell.innerText || cell.textContent, nextZIndex, tooltipOptions);
    }
  };
  const handleCellMouseLeave = (event) => {
    const cell = util.getCell(event);
    if (!cell)
      return;
    const oldHoverState = parent == null ? void 0 : parent.hoverState;
    parent == null ? void 0 : parent.emit("cell-mouse-leave", oldHoverState == null ? void 0 : oldHoverState.row, oldHoverState == null ? void 0 : oldHoverState.column, oldHoverState == null ? void 0 : oldHoverState.cell, event);
  };
  return {
    handleDoubleClick,
    handleClick,
    handleContextMenu,
    handleMouseEnter,
    handleMouseLeave,
    handleCellMouseEnter,
    handleCellMouseLeave,
    tooltipContent,
    tooltipTrigger
  };
}

exports["default"] = useEvents;
//# sourceMappingURL=events-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/index.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/index.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var layoutObserver = __webpack_require__(/*! ../layout-observer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/layout-observer.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var renderHelper = __webpack_require__(/*! ./render-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/render-helper.js");
var defaults = __webpack_require__(/*! ./defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/defaults.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var raf = __webpack_require__(/*! ../../../../utils/raf.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/raf.js");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

var TableBody = vue.defineComponent({
  name: "ElTableBody",
  props: defaults["default"],
  setup(props) {
    const instance = vue.getCurrentInstance();
    const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
    const ns = index.useNamespace("table");
    const { wrappedRowRender, tooltipContent, tooltipTrigger } = renderHelper["default"](props);
    const { onColumnsChange, onScrollableChange } = layoutObserver["default"](parent);
    vue.watch(props.store.states.hoverRow, (newVal, oldVal) => {
      if (!props.store.states.isComplex.value || !core.isClient)
        return;
      raf.rAF(() => {
        const el = instance == null ? void 0 : instance.vnode.el;
        const rows = Array.from((el == null ? void 0 : el.children) || []).filter((e) => e == null ? void 0 : e.classList.contains(`${ns.e("row")}`));
        const oldRow = rows[oldVal];
        const newRow = rows[newVal];
        if (oldRow) {
          style.removeClass(oldRow, "hover-row");
        }
        if (newRow) {
          style.addClass(newRow, "hover-row");
        }
      });
    });
    vue.onUnmounted(() => {
      var _a;
      (_a = util.removePopper) == null ? void 0 : _a();
    });
    return {
      ns,
      onColumnsChange,
      onScrollableChange,
      wrappedRowRender,
      tooltipContent,
      tooltipTrigger
    };
  },
  render() {
    const { wrappedRowRender, store } = this;
    const data = store.states.data.value || [];
    return vue.h("tbody", {}, [
      data.reduce((acc, row) => {
        return acc.concat(wrappedRowRender(row, acc.length));
      }, [])
    ]);
  }
});

exports["default"] = TableBody;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/render-helper.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/render-helper.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var eventsHelper = __webpack_require__(/*! ./events-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/events-helper.js");
var stylesHelper = __webpack_require__(/*! ./styles-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/styles-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function useRender(props) {
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const ns = index.useNamespace("table");
  const {
    handleDoubleClick,
    handleClick,
    handleContextMenu,
    handleMouseEnter,
    handleMouseLeave,
    handleCellMouseEnter,
    handleCellMouseLeave,
    tooltipContent,
    tooltipTrigger
  } = eventsHelper["default"](props);
  const {
    getRowStyle,
    getRowClass,
    getCellStyle,
    getCellClass,
    getSpan,
    getColspanRealWidth
  } = stylesHelper["default"](props);
  const firstDefaultColumnIndex = vue.computed(() => {
    return props.store.states.columns.value.findIndex(({ type }) => type === "default");
  });
  const getKeyOfRow = (row, index) => {
    const rowKey = parent.props.rowKey;
    if (rowKey) {
      return util.getRowIdentity(row, rowKey);
    }
    return index;
  };
  const rowRender = (row, $index, treeRowData, expanded = false) => {
    const { tooltipEffect, tooltipOptions, store } = props;
    const { indent, columns } = store.states;
    const rowClasses = getRowClass(row, $index);
    let display = true;
    if (treeRowData) {
      rowClasses.push(ns.em("row", `level-${treeRowData.level}`));
      display = treeRowData.display;
    }
    const displayStyle = display ? null : {
      display: "none"
    };
    return vue.h("tr", {
      style: [displayStyle, getRowStyle(row, $index)],
      class: rowClasses,
      key: getKeyOfRow(row, $index),
      onDblclick: ($event) => handleDoubleClick($event, row),
      onClick: ($event) => handleClick($event, row),
      onContextmenu: ($event) => handleContextMenu($event, row),
      onMouseenter: () => handleMouseEnter($index),
      onMouseleave: handleMouseLeave
    }, columns.value.map((column, cellIndex) => {
      const { rowspan, colspan } = getSpan(row, column, $index, cellIndex);
      if (!rowspan || !colspan) {
        return null;
      }
      const columnData = Object.assign({}, column);
      columnData.realWidth = getColspanRealWidth(columns.value, colspan, cellIndex);
      const data = {
        store: props.store,
        _self: props.context || parent,
        column: columnData,
        row,
        $index,
        cellIndex,
        expanded
      };
      if (cellIndex === firstDefaultColumnIndex.value && treeRowData) {
        data.treeNode = {
          indent: treeRowData.level * indent.value,
          level: treeRowData.level
        };
        if (typeof treeRowData.expanded === "boolean") {
          data.treeNode.expanded = treeRowData.expanded;
          if ("loading" in treeRowData) {
            data.treeNode.loading = treeRowData.loading;
          }
          if ("noLazyChildren" in treeRowData) {
            data.treeNode.noLazyChildren = treeRowData.noLazyChildren;
          }
        }
      }
      const baseKey = `${$index},${cellIndex}`;
      const patchKey = columnData.columnKey || columnData.rawColumnKey || "";
      const tdChildren = cellChildren(cellIndex, column, data);
      const mergedTooltipOptions = column.showOverflowTooltip && lodashUnified.merge({
        effect: tooltipEffect
      }, tooltipOptions, column.showOverflowTooltip);
      return vue.h("td", {
        style: getCellStyle($index, cellIndex, row, column),
        class: getCellClass($index, cellIndex, row, column, colspan - 1),
        key: `${patchKey}${baseKey}`,
        rowspan,
        colspan,
        onMouseenter: ($event) => handleCellMouseEnter($event, row, mergedTooltipOptions),
        onMouseleave: handleCellMouseLeave
      }, [tdChildren]);
    }));
  };
  const cellChildren = (cellIndex, column, data) => {
    return column.renderCell(data);
  };
  const wrappedRowRender = (row, $index) => {
    const store = props.store;
    const { isRowExpanded, assertRowKey } = store;
    const { treeData, lazyTreeNodeMap, childrenColumnName, rowKey } = store.states;
    const columns = store.states.columns.value;
    const hasExpandColumn = columns.some(({ type }) => type === "expand");
    if (hasExpandColumn) {
      const expanded = isRowExpanded(row);
      const tr = rowRender(row, $index, void 0, expanded);
      const renderExpanded = parent.renderExpanded;
      if (expanded) {
        if (!renderExpanded) {
          console.error("[Element Error]renderExpanded is required.");
          return tr;
        }
        return [
          [
            tr,
            vue.h("tr", {
              key: `expanded-row__${tr.key}`
            }, [
              vue.h("td", {
                colspan: columns.length,
                class: `${ns.e("cell")} ${ns.e("expanded-cell")}`
              }, [renderExpanded({ row, $index, store, expanded })])
            ])
          ]
        ];
      } else {
        return [[tr]];
      }
    } else if (Object.keys(treeData.value).length) {
      assertRowKey();
      const key = util.getRowIdentity(row, rowKey.value);
      let cur = treeData.value[key];
      let treeRowData = null;
      if (cur) {
        treeRowData = {
          expanded: cur.expanded,
          level: cur.level,
          display: true
        };
        if (typeof cur.lazy === "boolean") {
          if (typeof cur.loaded === "boolean" && cur.loaded) {
            treeRowData.noLazyChildren = !(cur.children && cur.children.length);
          }
          treeRowData.loading = cur.loading;
        }
      }
      const tmp = [rowRender(row, $index, treeRowData)];
      if (cur) {
        let i = 0;
        const traverse = (children, parent2) => {
          if (!(children && children.length && parent2))
            return;
          children.forEach((node) => {
            const innerTreeRowData = {
              display: parent2.display && parent2.expanded,
              level: parent2.level + 1,
              expanded: false,
              noLazyChildren: false,
              loading: false
            };
            const childKey = util.getRowIdentity(node, rowKey.value);
            if (childKey === void 0 || childKey === null) {
              throw new Error("For nested data item, row-key is required.");
            }
            cur = { ...treeData.value[childKey] };
            if (cur) {
              innerTreeRowData.expanded = cur.expanded;
              cur.level = cur.level || innerTreeRowData.level;
              cur.display = !!(cur.expanded && innerTreeRowData.display);
              if (typeof cur.lazy === "boolean") {
                if (typeof cur.loaded === "boolean" && cur.loaded) {
                  innerTreeRowData.noLazyChildren = !(cur.children && cur.children.length);
                }
                innerTreeRowData.loading = cur.loading;
              }
            }
            i++;
            tmp.push(rowRender(node, $index + i, innerTreeRowData));
            if (cur) {
              const nodes2 = lazyTreeNodeMap.value[childKey] || node[childrenColumnName.value];
              traverse(nodes2, cur);
            }
          });
        };
        cur.display = true;
        const nodes = lazyTreeNodeMap.value[key] || row[childrenColumnName.value];
        traverse(nodes, cur);
      }
      return tmp;
    } else {
      return rowRender(row, $index, void 0);
    }
  };
  return {
    wrappedRowRender,
    tooltipContent,
    tooltipTrigger
  };
}

exports["default"] = useRender;
//# sourceMappingURL=render-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/styles-helper.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/styles-helper.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function useStyles(props) {
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const ns = index.useNamespace("table");
  const getRowStyle = (row, rowIndex) => {
    const rowStyle = parent == null ? void 0 : parent.props.rowStyle;
    if (typeof rowStyle === "function") {
      return rowStyle.call(null, {
        row,
        rowIndex
      });
    }
    return rowStyle || null;
  };
  const getRowClass = (row, rowIndex) => {
    const classes = [ns.e("row")];
    if ((parent == null ? void 0 : parent.props.highlightCurrentRow) && row === props.store.states.currentRow.value) {
      classes.push("current-row");
    }
    if (props.stripe && rowIndex % 2 === 1) {
      classes.push(ns.em("row", "striped"));
    }
    const rowClassName = parent == null ? void 0 : parent.props.rowClassName;
    if (typeof rowClassName === "string") {
      classes.push(rowClassName);
    } else if (typeof rowClassName === "function") {
      classes.push(rowClassName.call(null, {
        row,
        rowIndex
      }));
    }
    return classes;
  };
  const getCellStyle = (rowIndex, columnIndex, row, column) => {
    const cellStyle = parent == null ? void 0 : parent.props.cellStyle;
    let cellStyles = cellStyle != null ? cellStyle : {};
    if (typeof cellStyle === "function") {
      cellStyles = cellStyle.call(null, {
        rowIndex,
        columnIndex,
        row,
        column
      });
    }
    const fixedStyle = util.getFixedColumnOffset(columnIndex, props == null ? void 0 : props.fixed, props.store);
    util.ensurePosition(fixedStyle, "left");
    util.ensurePosition(fixedStyle, "right");
    return Object.assign({}, cellStyles, fixedStyle);
  };
  const getCellClass = (rowIndex, columnIndex, row, column, offset) => {
    const fixedClasses = util.getFixedColumnsClass(ns.b(), columnIndex, props == null ? void 0 : props.fixed, props.store, void 0, offset);
    const classes = [column.id, column.align, column.className, ...fixedClasses];
    const cellClassName = parent == null ? void 0 : parent.props.cellClassName;
    if (typeof cellClassName === "string") {
      classes.push(cellClassName);
    } else if (typeof cellClassName === "function") {
      classes.push(cellClassName.call(null, {
        rowIndex,
        columnIndex,
        row,
        column
      }));
    }
    classes.push(ns.e("cell"));
    return classes.filter((className) => Boolean(className)).join(" ");
  };
  const getSpan = (row, column, rowIndex, columnIndex) => {
    let rowspan = 1;
    let colspan = 1;
    const fn = parent == null ? void 0 : parent.props.spanMethod;
    if (typeof fn === "function") {
      const result = fn({
        row,
        column,
        rowIndex,
        columnIndex
      });
      if (Array.isArray(result)) {
        rowspan = result[0];
        colspan = result[1];
      } else if (typeof result === "object") {
        rowspan = result.rowspan;
        colspan = result.colspan;
      }
    }
    return { rowspan, colspan };
  };
  const getColspanRealWidth = (columns, colspan, index) => {
    if (colspan < 1) {
      return columns[index].realWidth;
    }
    const widthArr = columns.map(({ realWidth, width }) => realWidth || width).slice(index, index + colspan);
    return Number(widthArr.reduce((acc, width) => Number(acc) + Number(width), -1));
  };
  return {
    getRowStyle,
    getRowClass,
    getCellStyle,
    getCellClass,
    getSpan,
    getColspanRealWidth
  };
}

exports["default"] = useStyles;
//# sourceMappingURL=styles-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/defaults.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/defaults.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var defaultProps = {
  type: {
    type: String,
    default: "default"
  },
  label: String,
  className: String,
  labelClassName: String,
  property: String,
  prop: String,
  width: {
    type: [String, Number],
    default: ""
  },
  minWidth: {
    type: [String, Number],
    default: ""
  },
  renderHeader: Function,
  sortable: {
    type: [Boolean, String],
    default: false
  },
  sortMethod: Function,
  sortBy: [String, Function, Array],
  resizable: {
    type: Boolean,
    default: true
  },
  columnKey: String,
  align: String,
  headerAlign: String,
  showOverflowTooltip: {
    type: [Boolean, Object],
    default: void 0
  },
  fixed: [Boolean, String],
  formatter: Function,
  selectable: Function,
  reserveSelection: Boolean,
  filterMethod: Function,
  filteredValue: Array,
  filters: Array,
  filterPlacement: String,
  filterMultiple: {
    type: Boolean,
    default: true
  },
  index: [Number, Function],
  sortOrders: {
    type: Array,
    default: () => {
      return ["ascending", "descending", null];
    },
    validator: (val) => {
      return val.every((order) => ["ascending", "descending", null].includes(order));
    }
  }
};

exports["default"] = defaultProps;
//# sourceMappingURL=defaults.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/index.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/index.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var config = __webpack_require__(/*! ../config.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/config.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var watcherHelper = __webpack_require__(/*! ./watcher-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/watcher-helper.js");
var renderHelper = __webpack_require__(/*! ./render-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/render-helper.js");
var defaults = __webpack_require__(/*! ./defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/defaults.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

let columnIdSeed = 1;
var ElTableColumn = vue.defineComponent({
  name: "ElTableColumn",
  components: {
    ElCheckbox: index.ElCheckbox
  },
  props: defaults["default"],
  setup(props, { slots }) {
    const instance = vue.getCurrentInstance();
    const columnConfig = vue.ref({});
    const owner = vue.computed(() => {
      let parent2 = instance.parent;
      while (parent2 && !parent2.tableId) {
        parent2 = parent2.parent;
      }
      return parent2;
    });
    const { registerNormalWatchers, registerComplexWatchers } = watcherHelper["default"](owner, props);
    const {
      columnId,
      isSubColumn,
      realHeaderAlign,
      columnOrTableParent,
      setColumnWidth,
      setColumnForcedProps,
      setColumnRenders,
      getPropsData,
      getColumnElIndex,
      realAlign,
      updateColumnOrder
    } = renderHelper["default"](props, slots, owner);
    const parent = columnOrTableParent.value;
    columnId.value = `${parent.tableId || parent.columnId}_column_${columnIdSeed++}`;
    vue.onBeforeMount(() => {
      isSubColumn.value = owner.value !== parent;
      const type = props.type || "default";
      const sortable = props.sortable === "" ? true : props.sortable;
      const showOverflowTooltip = types.isUndefined(props.showOverflowTooltip) ? parent.props.showOverflowTooltip : props.showOverflowTooltip;
      const defaults = {
        ...config.cellStarts[type],
        id: columnId.value,
        type,
        property: props.prop || props.property,
        align: realAlign,
        headerAlign: realHeaderAlign,
        showOverflowTooltip,
        filterable: props.filters || props.filterMethod,
        filteredValue: [],
        filterPlacement: "",
        isColumnGroup: false,
        isSubColumn: false,
        filterOpened: false,
        sortable,
        index: props.index,
        rawColumnKey: instance.vnode.key
      };
      const basicProps = [
        "columnKey",
        "label",
        "className",
        "labelClassName",
        "type",
        "renderHeader",
        "formatter",
        "fixed",
        "resizable"
      ];
      const sortProps = ["sortMethod", "sortBy", "sortOrders"];
      const selectProps = ["selectable", "reserveSelection"];
      const filterProps = [
        "filterMethod",
        "filters",
        "filterMultiple",
        "filterOpened",
        "filteredValue",
        "filterPlacement"
      ];
      let column = getPropsData(basicProps, sortProps, selectProps, filterProps);
      column = util.mergeOptions(defaults, column);
      const chains = util.compose(setColumnRenders, setColumnWidth, setColumnForcedProps);
      column = chains(column);
      columnConfig.value = column;
      registerNormalWatchers();
      registerComplexWatchers();
    });
    vue.onMounted(() => {
      var _a;
      const parent2 = columnOrTableParent.value;
      const children = isSubColumn.value ? parent2.vnode.el.children : (_a = parent2.refs.hiddenColumns) == null ? void 0 : _a.children;
      const getColumnIndex = () => getColumnElIndex(children || [], instance.vnode.el);
      columnConfig.value.getColumnIndex = getColumnIndex;
      const columnIndex = getColumnIndex();
      columnIndex > -1 && owner.value.store.commit("insertColumn", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null, updateColumnOrder);
    });
    vue.onBeforeUnmount(() => {
      owner.value.store.commit("removeColumn", columnConfig.value, isSubColumn.value ? parent.columnConfig.value : null, updateColumnOrder);
    });
    instance.columnId = columnId.value;
    instance.columnConfig = columnConfig;
    return;
  },
  render() {
    var _a, _b, _c;
    try {
      const renderDefault = (_b = (_a = this.$slots).default) == null ? void 0 : _b.call(_a, {
        row: {},
        column: {},
        $index: -1
      });
      const children = [];
      if (Array.isArray(renderDefault)) {
        for (const childNode of renderDefault) {
          if (((_c = childNode.type) == null ? void 0 : _c.name) === "ElTableColumn" || childNode.shapeFlag & 2) {
            children.push(childNode);
          } else if (childNode.type === vue.Fragment && Array.isArray(childNode.children)) {
            childNode.children.forEach((vnode2) => {
              if ((vnode2 == null ? void 0 : vnode2.patchFlag) !== 1024 && !shared.isString(vnode2 == null ? void 0 : vnode2.children)) {
                children.push(vnode2);
              }
            });
          }
        }
      }
      const vnode = vue.h("div", children);
      return vnode;
    } catch (e) {
      return vue.h("div", []);
    }
  }
});

exports["default"] = ElTableColumn;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/render-helper.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/render-helper.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var config = __webpack_require__(/*! ../config.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/config.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

function useRender(props, slots, owner) {
  const instance = vue.getCurrentInstance();
  const columnId = vue.ref("");
  const isSubColumn = vue.ref(false);
  const realAlign = vue.ref();
  const realHeaderAlign = vue.ref();
  const ns = index.useNamespace("table");
  vue.watchEffect(() => {
    realAlign.value = props.align ? `is-${props.align}` : null;
    realAlign.value;
  });
  vue.watchEffect(() => {
    realHeaderAlign.value = props.headerAlign ? `is-${props.headerAlign}` : realAlign.value;
    realHeaderAlign.value;
  });
  const columnOrTableParent = vue.computed(() => {
    let parent = instance.vnode.vParent || instance.parent;
    while (parent && !parent.tableId && !parent.columnId) {
      parent = parent.vnode.vParent || parent.parent;
    }
    return parent;
  });
  const hasTreeColumn = vue.computed(() => {
    const { store } = instance.parent;
    if (!store)
      return false;
    const { treeData } = store.states;
    const treeDataValue = treeData.value;
    return treeDataValue && Object.keys(treeDataValue).length > 0;
  });
  const realWidth = vue.ref(util.parseWidth(props.width));
  const realMinWidth = vue.ref(util.parseMinWidth(props.minWidth));
  const setColumnWidth = (column) => {
    if (realWidth.value)
      column.width = realWidth.value;
    if (realMinWidth.value) {
      column.minWidth = realMinWidth.value;
    }
    if (!realWidth.value && realMinWidth.value) {
      column.width = void 0;
    }
    if (!column.minWidth) {
      column.minWidth = 80;
    }
    column.realWidth = Number(column.width === void 0 ? column.minWidth : column.width);
    return column;
  };
  const setColumnForcedProps = (column) => {
    const type = column.type;
    const source = config.cellForced[type] || {};
    Object.keys(source).forEach((prop) => {
      const value = source[prop];
      if (prop !== "className" && value !== void 0) {
        column[prop] = value;
      }
    });
    const className = config.getDefaultClassName(type);
    if (className) {
      const forceClass = `${vue.unref(ns.namespace)}-${className}`;
      column.className = column.className ? `${column.className} ${forceClass}` : forceClass;
    }
    return column;
  };
  const checkSubColumn = (children) => {
    if (Array.isArray(children)) {
      children.forEach((child) => check(child));
    } else {
      check(children);
    }
    function check(item) {
      var _a;
      if (((_a = item == null ? void 0 : item.type) == null ? void 0 : _a.name) === "ElTableColumn") {
        item.vParent = instance;
      }
    }
  };
  const setColumnRenders = (column) => {
    if (props.renderHeader) {
      error.debugWarn("TableColumn", "Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.");
    } else if (column.type !== "selection") {
      column.renderHeader = (scope) => {
        instance.columnConfig.value["label"];
        const renderHeader = slots.header;
        return renderHeader ? renderHeader(scope) : column.label;
      };
    }
    let originRenderCell = column.renderCell;
    if (column.type === "expand") {
      column.renderCell = (data) => vue.h("div", {
        class: "cell"
      }, [originRenderCell(data)]);
      owner.value.renderExpanded = (data) => {
        return slots.default ? slots.default(data) : slots.default;
      };
    } else {
      originRenderCell = originRenderCell || config.defaultRenderCell;
      column.renderCell = (data) => {
        let children = null;
        if (slots.default) {
          const vnodes = slots.default(data);
          children = vnodes.some((v) => v.type !== vue.Comment) ? vnodes : originRenderCell(data);
        } else {
          children = originRenderCell(data);
        }
        const { columns } = owner.value.store.states;
        const firstUserColumnIndex = columns.value.findIndex((item) => item.type === "default");
        const shouldCreatePlaceholder = hasTreeColumn.value && data.cellIndex === firstUserColumnIndex;
        const prefix = config.treeCellPrefix(data, shouldCreatePlaceholder);
        const props2 = {
          class: "cell",
          style: {}
        };
        if (column.showOverflowTooltip) {
          props2.class = `${props2.class} ${vue.unref(ns.namespace)}-tooltip`;
          props2.style = {
            width: `${(data.column.realWidth || Number(data.column.width)) - 1}px`
          };
        }
        checkSubColumn(children);
        return vue.h("div", props2, [prefix, children]);
      };
    }
    return column;
  };
  const getPropsData = (...propsKey) => {
    return propsKey.reduce((prev, cur) => {
      if (Array.isArray(cur)) {
        cur.forEach((key) => {
          prev[key] = props[key];
        });
      }
      return prev;
    }, {});
  };
  const getColumnElIndex = (children, child) => {
    return Array.prototype.indexOf.call(children, child);
  };
  const updateColumnOrder = () => {
    owner.value.store.commit("updateColumnOrder", instance.columnConfig.value);
  };
  return {
    columnId,
    realAlign,
    isSubColumn,
    realHeaderAlign,
    columnOrTableParent,
    setColumnWidth,
    setColumnForcedProps,
    setColumnRenders,
    getPropsData,
    getColumnElIndex,
    updateColumnOrder
  };
}

exports["default"] = useRender;
//# sourceMappingURL=render-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/watcher-helper.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/watcher-helper.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function getAllAliases(props, aliases) {
  return props.reduce((prev, cur) => {
    prev[cur] = cur;
    return prev;
  }, aliases);
}
function useWatcher(owner, props_) {
  const instance = vue.getCurrentInstance();
  const registerComplexWatchers = () => {
    const props = ["fixed"];
    const aliases = {
      realWidth: "width",
      realMinWidth: "minWidth"
    };
    const allAliases = getAllAliases(props, aliases);
    Object.keys(allAliases).forEach((key) => {
      const columnKey = aliases[key];
      if (shared.hasOwn(props_, columnKey)) {
        vue.watch(() => props_[columnKey], (newVal) => {
          let value = newVal;
          if (columnKey === "width" && key === "realWidth") {
            value = util.parseWidth(newVal);
          }
          if (columnKey === "minWidth" && key === "realMinWidth") {
            value = util.parseMinWidth(newVal);
          }
          instance.columnConfig.value[columnKey] = value;
          instance.columnConfig.value[key] = value;
          const updateColumns = columnKey === "fixed";
          owner.value.store.scheduleLayout(updateColumns);
        });
      }
    });
  };
  const registerNormalWatchers = () => {
    const props = [
      "label",
      "filters",
      "filterMultiple",
      "filteredValue",
      "sortable",
      "index",
      "formatter",
      "className",
      "labelClassName",
      "showOverflowTooltip"
    ];
    const aliases = {
      property: "prop",
      align: "realAlign",
      headerAlign: "realHeaderAlign"
    };
    const allAliases = getAllAliases(props, aliases);
    Object.keys(allAliases).forEach((key) => {
      const columnKey = aliases[key];
      if (shared.hasOwn(props_, columnKey)) {
        vue.watch(() => props_[columnKey], (newVal) => {
          instance.columnConfig.value[key] = newVal;
        });
      }
    });
  };
  return {
    registerComplexWatchers,
    registerNormalWatchers
  };
}

exports["default"] = useWatcher;
//# sourceMappingURL=watcher-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/index.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/index.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var hHelper = __webpack_require__(/*! ../h-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/h-helper.js");
var styleHelper = __webpack_require__(/*! ./style-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/style-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

var TableFooter = vue.defineComponent({
  name: "ElTableFooter",
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: true,
      type: Object
    },
    summaryMethod: Function,
    sumText: String,
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => {
        return {
          prop: "",
          order: ""
        };
      }
    }
  },
  setup(props) {
    const { getCellClasses, getCellStyles, columns } = styleHelper["default"](props);
    const ns = index.useNamespace("table");
    return {
      ns,
      getCellClasses,
      getCellStyles,
      columns
    };
  },
  render() {
    const {
      columns,
      getCellStyles,
      getCellClasses,
      summaryMethod,
      sumText,
      ns
    } = this;
    const data = this.store.states.data.value;
    let sums = [];
    if (summaryMethod) {
      sums = summaryMethod({
        columns,
        data
      });
    } else {
      columns.forEach((column, index) => {
        if (index === 0) {
          sums[index] = sumText;
          return;
        }
        const values = data.map((item) => Number(item[column.property]));
        const precisions = [];
        let notNumber = true;
        values.forEach((value) => {
          if (!Number.isNaN(+value)) {
            notNumber = false;
            const decimal = `${value}`.split(".")[1];
            precisions.push(decimal ? decimal.length : 0);
          }
        });
        const precision = Math.max.apply(null, precisions);
        if (!notNumber) {
          sums[index] = values.reduce((prev, curr) => {
            const value = Number(curr);
            if (!Number.isNaN(+value)) {
              return Number.parseFloat((prev + curr).toFixed(Math.min(precision, 20)));
            } else {
              return prev;
            }
          }, 0);
        } else {
          sums[index] = "";
        }
      });
    }
    return vue.h("table", {
      class: ns.e("footer"),
      cellspacing: "0",
      cellpadding: "0",
      border: "0"
    }, [
      hHelper.hColgroup({
        columns
      }),
      vue.h("tbody", [
        vue.h("tr", {}, [
          ...columns.map((column, cellIndex) => vue.h("td", {
            key: cellIndex,
            colspan: column.colSpan,
            rowspan: column.rowSpan,
            class: getCellClasses(columns, cellIndex),
            style: getCellStyles(column, cellIndex)
          }, [
            vue.h("div", {
              class: ["cell", column.labelClassName]
            }, [sums[cellIndex]])
          ]))
        ])
      ])
    ]);
  }
});

exports["default"] = TableFooter;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/mapState-helper.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/mapState-helper.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");

function useMapState() {
  const table = vue.inject(tokens.TABLE_INJECTION_KEY);
  const store = table == null ? void 0 : table.store;
  const leftFixedLeafCount = vue.computed(() => {
    return store.states.fixedLeafColumnsLength.value;
  });
  const rightFixedLeafCount = vue.computed(() => {
    return store.states.rightFixedColumns.value.length;
  });
  const columnsCount = vue.computed(() => {
    return store.states.columns.value.length;
  });
  const leftFixedCount = vue.computed(() => {
    return store.states.fixedColumns.value.length;
  });
  const rightFixedCount = vue.computed(() => {
    return store.states.rightFixedColumns.value.length;
  });
  return {
    leftFixedLeafCount,
    rightFixedLeafCount,
    columnsCount,
    leftFixedCount,
    rightFixedCount,
    columns: store.states.columns
  };
}

exports["default"] = useMapState;
//# sourceMappingURL=mapState-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/style-helper.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/style-helper.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var mapStateHelper = __webpack_require__(/*! ./mapState-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/mapState-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function useStyle(props) {
  const { columns } = mapStateHelper["default"]();
  const ns = index.useNamespace("table");
  const getCellClasses = (columns2, cellIndex) => {
    const column = columns2[cellIndex];
    const classes = [
      ns.e("cell"),
      column.id,
      column.align,
      column.labelClassName,
      ...util.getFixedColumnsClass(ns.b(), cellIndex, column.fixed, props.store)
    ];
    if (column.className) {
      classes.push(column.className);
    }
    if (!column.children) {
      classes.push(ns.is("leaf"));
    }
    return classes;
  };
  const getCellStyles = (column, cellIndex) => {
    const fixedStyle = util.getFixedColumnOffset(cellIndex, column.fixed, props.store);
    util.ensurePosition(fixedStyle, "left");
    util.ensurePosition(fixedStyle, "right");
    return fixedStyle;
  };
  return {
    getCellClasses,
    getCellStyles,
    columns
  };
}

exports["default"] = useStyle;
//# sourceMappingURL=style-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/event-helper.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/event-helper.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

function useEvent(props, emit) {
  const instance = vue.getCurrentInstance();
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const handleFilterClick = (event) => {
    event.stopPropagation();
    return;
  };
  const handleHeaderClick = (event, column) => {
    if (!column.filters && column.sortable) {
      handleSortClick(event, column, false);
    } else if (column.filterable && !column.sortable) {
      handleFilterClick(event);
    }
    parent == null ? void 0 : parent.emit("header-click", column, event);
  };
  const handleHeaderContextMenu = (event, column) => {
    parent == null ? void 0 : parent.emit("header-contextmenu", column, event);
  };
  const draggingColumn = vue.ref(null);
  const dragging = vue.ref(false);
  const dragState = vue.ref({});
  const handleMouseDown = (event, column) => {
    if (!core.isClient)
      return;
    if (column.children && column.children.length > 0)
      return;
    if (draggingColumn.value && props.border) {
      dragging.value = true;
      const table = parent;
      emit("set-drag-visible", true);
      const tableEl = table == null ? void 0 : table.vnode.el;
      const tableLeft = tableEl.getBoundingClientRect().left;
      const columnEl = instance.vnode.el.querySelector(`th.${column.id}`);
      const columnRect = columnEl.getBoundingClientRect();
      const minLeft = columnRect.left - tableLeft + 30;
      style.addClass(columnEl, "noclick");
      dragState.value = {
        startMouseLeft: event.clientX,
        startLeft: columnRect.right - tableLeft,
        startColumnLeft: columnRect.left - tableLeft,
        tableLeft
      };
      const resizeProxy = table == null ? void 0 : table.refs.resizeProxy;
      resizeProxy.style.left = `${dragState.value.startLeft}px`;
      document.onselectstart = function() {
        return false;
      };
      document.ondragstart = function() {
        return false;
      };
      const handleMouseMove2 = (event2) => {
        const deltaLeft = event2.clientX - dragState.value.startMouseLeft;
        const proxyLeft = dragState.value.startLeft + deltaLeft;
        resizeProxy.style.left = `${Math.max(minLeft, proxyLeft)}px`;
      };
      const handleMouseUp = () => {
        if (dragging.value) {
          const { startColumnLeft, startLeft } = dragState.value;
          const finalLeft = Number.parseInt(resizeProxy.style.left, 10);
          const columnWidth = finalLeft - startColumnLeft;
          column.width = column.realWidth = columnWidth;
          table == null ? void 0 : table.emit("header-dragend", column.width, startLeft - startColumnLeft, column, event);
          requestAnimationFrame(() => {
            props.store.scheduleLayout(false, true);
          });
          document.body.style.cursor = "";
          dragging.value = false;
          draggingColumn.value = null;
          dragState.value = {};
          emit("set-drag-visible", false);
        }
        document.removeEventListener("mousemove", handleMouseMove2);
        document.removeEventListener("mouseup", handleMouseUp);
        document.onselectstart = null;
        document.ondragstart = null;
        setTimeout(() => {
          style.removeClass(columnEl, "noclick");
        }, 0);
      };
      document.addEventListener("mousemove", handleMouseMove2);
      document.addEventListener("mouseup", handleMouseUp);
    }
  };
  const handleMouseMove = (event, column) => {
    if (column.children && column.children.length > 0)
      return;
    const el = event.target;
    if (!types.isElement(el)) {
      return;
    }
    const target = el == null ? void 0 : el.closest("th");
    if (!column || !column.resizable)
      return;
    if (!dragging.value && props.border) {
      const rect = target.getBoundingClientRect();
      const bodyStyle = document.body.style;
      if (rect.width > 12 && rect.right - event.pageX < 8) {
        bodyStyle.cursor = "col-resize";
        if (style.hasClass(target, "is-sortable")) {
          target.style.cursor = "col-resize";
        }
        draggingColumn.value = column;
      } else if (!dragging.value) {
        bodyStyle.cursor = "";
        if (style.hasClass(target, "is-sortable")) {
          target.style.cursor = "pointer";
        }
        draggingColumn.value = null;
      }
    }
  };
  const handleMouseOut = () => {
    if (!core.isClient)
      return;
    document.body.style.cursor = "";
  };
  const toggleOrder = ({ order, sortOrders }) => {
    if (order === "")
      return sortOrders[0];
    const index = sortOrders.indexOf(order || null);
    return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1];
  };
  const handleSortClick = (event, column, givenOrder) => {
    var _a;
    event.stopPropagation();
    const order = column.order === givenOrder ? null : givenOrder || toggleOrder(column);
    const target = (_a = event.target) == null ? void 0 : _a.closest("th");
    if (target) {
      if (style.hasClass(target, "noclick")) {
        style.removeClass(target, "noclick");
        return;
      }
    }
    if (!column.sortable)
      return;
    const states = props.store.states;
    let sortProp = states.sortProp.value;
    let sortOrder;
    const sortingColumn = states.sortingColumn.value;
    if (sortingColumn !== column || sortingColumn === column && sortingColumn.order === null) {
      if (sortingColumn) {
        sortingColumn.order = null;
      }
      states.sortingColumn.value = column;
      sortProp = column.property;
    }
    if (!order) {
      sortOrder = column.order = null;
    } else {
      sortOrder = column.order = order;
    }
    states.sortProp.value = sortProp;
    states.sortOrder.value = sortOrder;
    parent == null ? void 0 : parent.store.commit("changeSortCondition");
  };
  return {
    handleHeaderClick,
    handleHeaderContextMenu,
    handleMouseDown,
    handleMouseMove,
    handleMouseOut,
    handleSortClick,
    handleFilterClick
  };
}

exports["default"] = useEvent;
//# sourceMappingURL=event-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/index.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/index.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var filterPanel = __webpack_require__(/*! ../filter-panel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/filter-panel.js");
var layoutObserver = __webpack_require__(/*! ../layout-observer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/layout-observer.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var eventHelper = __webpack_require__(/*! ./event-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/event-helper.js");
var style_helper = __webpack_require__(/*! ./style.helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/style.helper.js");
var utilsHelper = __webpack_require__(/*! ./utils-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/utils-helper.js");
var index$1 = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

var TableHeader = vue.defineComponent({
  name: "ElTableHeader",
  components: {
    ElCheckbox: index.ElCheckbox
  },
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: true,
      type: Object
    },
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => {
        return {
          prop: "",
          order: ""
        };
      }
    }
  },
  setup(props, { emit }) {
    const instance = vue.getCurrentInstance();
    const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
    const ns = index$1.useNamespace("table");
    const filterPanels = vue.ref({});
    const { onColumnsChange, onScrollableChange } = layoutObserver["default"](parent);
    vue.onMounted(async () => {
      await vue.nextTick();
      await vue.nextTick();
      const { prop, order } = props.defaultSort;
      parent == null ? void 0 : parent.store.commit("sort", { prop, order, init: true });
    });
    const {
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleMouseOut,
      handleSortClick,
      handleFilterClick
    } = eventHelper["default"](props, emit);
    const {
      getHeaderRowStyle,
      getHeaderRowClass,
      getHeaderCellStyle,
      getHeaderCellClass
    } = style_helper["default"](props);
    const { isGroup, toggleAllSelection, columnRows } = utilsHelper["default"](props);
    instance.state = {
      onColumnsChange,
      onScrollableChange
    };
    instance.filterPanels = filterPanels;
    return {
      ns,
      filterPanels,
      onColumnsChange,
      onScrollableChange,
      columnRows,
      getHeaderRowClass,
      getHeaderRowStyle,
      getHeaderCellClass,
      getHeaderCellStyle,
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleMouseOut,
      handleSortClick,
      handleFilterClick,
      isGroup,
      toggleAllSelection
    };
  },
  render() {
    const {
      ns,
      isGroup,
      columnRows,
      getHeaderCellStyle,
      getHeaderCellClass,
      getHeaderRowClass,
      getHeaderRowStyle,
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleSortClick,
      handleMouseOut,
      store,
      $parent
    } = this;
    let rowSpan = 1;
    return vue.h("thead", {
      class: { [ns.is("group")]: isGroup }
    }, columnRows.map((subColumns, rowIndex) => vue.h("tr", {
      class: getHeaderRowClass(rowIndex),
      key: rowIndex,
      style: getHeaderRowStyle(rowIndex)
    }, subColumns.map((column, cellIndex) => {
      if (column.rowSpan > rowSpan) {
        rowSpan = column.rowSpan;
      }
      return vue.h("th", {
        class: getHeaderCellClass(rowIndex, cellIndex, subColumns, column),
        colspan: column.colSpan,
        key: `${column.id}-thead`,
        rowspan: column.rowSpan,
        style: getHeaderCellStyle(rowIndex, cellIndex, subColumns, column),
        onClick: ($event) => handleHeaderClick($event, column),
        onContextmenu: ($event) => handleHeaderContextMenu($event, column),
        onMousedown: ($event) => handleMouseDown($event, column),
        onMousemove: ($event) => handleMouseMove($event, column),
        onMouseout: handleMouseOut
      }, [
        vue.h("div", {
          class: [
            "cell",
            column.filteredValue && column.filteredValue.length > 0 ? "highlight" : ""
          ]
        }, [
          column.renderHeader ? column.renderHeader({
            column,
            $index: cellIndex,
            store,
            _self: $parent
          }) : column.label,
          column.sortable && vue.h("span", {
            onClick: ($event) => handleSortClick($event, column),
            class: "caret-wrapper"
          }, [
            vue.h("i", {
              onClick: ($event) => handleSortClick($event, column, "ascending"),
              class: "sort-caret ascending"
            }),
            vue.h("i", {
              onClick: ($event) => handleSortClick($event, column, "descending"),
              class: "sort-caret descending"
            })
          ]),
          column.filterable && vue.h(filterPanel["default"], {
            store,
            placement: column.filterPlacement || "bottom-start",
            column,
            upDataColumn: (key, value) => {
              column[key] = value;
            }
          })
        ])
      ]);
    }))));
  }
});

exports["default"] = TableHeader;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/style.helper.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/style.helper.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var util = __webpack_require__(/*! ../util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

function useStyle(props) {
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const ns = index.useNamespace("table");
  const getHeaderRowStyle = (rowIndex) => {
    const headerRowStyle = parent == null ? void 0 : parent.props.headerRowStyle;
    if (typeof headerRowStyle === "function") {
      return headerRowStyle.call(null, { rowIndex });
    }
    return headerRowStyle;
  };
  const getHeaderRowClass = (rowIndex) => {
    const classes = [];
    const headerRowClassName = parent == null ? void 0 : parent.props.headerRowClassName;
    if (typeof headerRowClassName === "string") {
      classes.push(headerRowClassName);
    } else if (typeof headerRowClassName === "function") {
      classes.push(headerRowClassName.call(null, { rowIndex }));
    }
    return classes.join(" ");
  };
  const getHeaderCellStyle = (rowIndex, columnIndex, row, column) => {
    var _a;
    let headerCellStyles = (_a = parent == null ? void 0 : parent.props.headerCellStyle) != null ? _a : {};
    if (typeof headerCellStyles === "function") {
      headerCellStyles = headerCellStyles.call(null, {
        rowIndex,
        columnIndex,
        row,
        column
      });
    }
    const fixedStyle = util.getFixedColumnOffset(columnIndex, column.fixed, props.store, row);
    util.ensurePosition(fixedStyle, "left");
    util.ensurePosition(fixedStyle, "right");
    return Object.assign({}, headerCellStyles, fixedStyle);
  };
  const getHeaderCellClass = (rowIndex, columnIndex, row, column) => {
    const fixedClasses = util.getFixedColumnsClass(ns.b(), columnIndex, column.fixed, props.store, row);
    const classes = [
      column.id,
      column.order,
      column.headerAlign,
      column.className,
      column.labelClassName,
      ...fixedClasses
    ];
    if (!column.children) {
      classes.push("is-leaf");
    }
    if (column.sortable) {
      classes.push("is-sortable");
    }
    const headerCellClassName = parent == null ? void 0 : parent.props.headerCellClassName;
    if (typeof headerCellClassName === "string") {
      classes.push(headerCellClassName);
    } else if (typeof headerCellClassName === "function") {
      classes.push(headerCellClassName.call(null, {
        rowIndex,
        columnIndex,
        row,
        column
      }));
    }
    classes.push(ns.e("cell"));
    return classes.filter((className) => Boolean(className)).join(" ");
  };
  return {
    getHeaderRowStyle,
    getHeaderRowClass,
    getHeaderCellStyle,
    getHeaderCellClass
  };
}

exports["default"] = useStyle;
//# sourceMappingURL=style.helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/utils-helper.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/utils-helper.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var tokens = __webpack_require__(/*! ../tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");

const getAllColumns = (columns) => {
  const result = [];
  columns.forEach((column) => {
    if (column.children) {
      result.push(column);
      result.push.apply(result, getAllColumns(column.children));
    } else {
      result.push(column);
    }
  });
  return result;
};
const convertToRows = (originColumns) => {
  let maxLevel = 1;
  const traverse = (column, parent) => {
    if (parent) {
      column.level = parent.level + 1;
      if (maxLevel < column.level) {
        maxLevel = column.level;
      }
    }
    if (column.children) {
      let colSpan = 0;
      column.children.forEach((subColumn) => {
        traverse(subColumn, column);
        colSpan += subColumn.colSpan;
      });
      column.colSpan = colSpan;
    } else {
      column.colSpan = 1;
    }
  };
  originColumns.forEach((column) => {
    column.level = 1;
    traverse(column, void 0);
  });
  const rows = [];
  for (let i = 0; i < maxLevel; i++) {
    rows.push([]);
  }
  const allColumns = getAllColumns(originColumns);
  allColumns.forEach((column) => {
    if (!column.children) {
      column.rowSpan = maxLevel - column.level + 1;
    } else {
      column.rowSpan = 1;
      column.children.forEach((col) => col.isSubColumn = true);
    }
    rows[column.level - 1].push(column);
  });
  return rows;
};
function useUtils(props) {
  const parent = vue.inject(tokens.TABLE_INJECTION_KEY);
  const columnRows = vue.computed(() => {
    return convertToRows(props.store.states.originColumns.value);
  });
  const isGroup = vue.computed(() => {
    const result = columnRows.value.length > 1;
    if (result && parent) {
      parent.state.isGroup.value = true;
    }
    return result;
  });
  const toggleAllSelection = (event) => {
    event.stopPropagation();
    parent == null ? void 0 : parent.store.commit("toggleAllSelection");
  };
  return {
    isGroup,
    toggleAllSelection,
    columnRows
  };
}

exports["default"] = useUtils;
//# sourceMappingURL=utils-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-layout.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-layout.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var util = __webpack_require__(/*! ./util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");

class TableLayout {
  constructor(options) {
    this.observers = [];
    this.table = null;
    this.store = null;
    this.columns = [];
    this.fit = true;
    this.showHeader = true;
    this.height = vue.ref(null);
    this.scrollX = vue.ref(false);
    this.scrollY = vue.ref(false);
    this.bodyWidth = vue.ref(null);
    this.fixedWidth = vue.ref(null);
    this.rightFixedWidth = vue.ref(null);
    this.gutterWidth = 0;
    for (const name in options) {
      if (shared.hasOwn(options, name)) {
        if (vue.isRef(this[name])) {
          this[name].value = options[name];
        } else {
          this[name] = options[name];
        }
      }
    }
    if (!this.table) {
      throw new Error("Table is required for Table Layout");
    }
    if (!this.store) {
      throw new Error("Store is required for Table Layout");
    }
  }
  updateScrollY() {
    const height = this.height.value;
    if (height === null)
      return false;
    const scrollBarRef = this.table.refs.scrollBarRef;
    if (this.table.vnode.el && (scrollBarRef == null ? void 0 : scrollBarRef.wrapRef)) {
      let scrollY = true;
      const prevScrollY = this.scrollY.value;
      scrollY = scrollBarRef.wrapRef.scrollHeight > scrollBarRef.wrapRef.clientHeight;
      this.scrollY.value = scrollY;
      return prevScrollY !== scrollY;
    }
    return false;
  }
  setHeight(value, prop = "height") {
    if (!core.isClient)
      return;
    const el = this.table.vnode.el;
    value = util.parseHeight(value);
    this.height.value = Number(value);
    if (!el && (value || value === 0))
      return vue.nextTick(() => this.setHeight(value, prop));
    if (typeof value === "number") {
      el.style[prop] = `${value}px`;
      this.updateElsHeight();
    } else if (typeof value === "string") {
      el.style[prop] = value;
      this.updateElsHeight();
    }
  }
  setMaxHeight(value) {
    this.setHeight(value, "max-height");
  }
  getFlattenColumns() {
    const flattenColumns = [];
    const columns = this.table.store.states.columns.value;
    columns.forEach((column) => {
      if (column.isColumnGroup) {
        flattenColumns.push.apply(flattenColumns, column.columns);
      } else {
        flattenColumns.push(column);
      }
    });
    return flattenColumns;
  }
  updateElsHeight() {
    this.updateScrollY();
    this.notifyObservers("scrollable");
  }
  headerDisplayNone(elm) {
    if (!elm)
      return true;
    let headerChild = elm;
    while (headerChild.tagName !== "DIV") {
      if (getComputedStyle(headerChild).display === "none") {
        return true;
      }
      headerChild = headerChild.parentElement;
    }
    return false;
  }
  updateColumnsWidth() {
    if (!core.isClient)
      return;
    const fit = this.fit;
    const bodyWidth = this.table.vnode.el.clientWidth;
    let bodyMinWidth = 0;
    const flattenColumns = this.getFlattenColumns();
    const flexColumns = flattenColumns.filter((column) => typeof column.width !== "number");
    flattenColumns.forEach((column) => {
      if (typeof column.width === "number" && column.realWidth)
        column.realWidth = null;
    });
    if (flexColumns.length > 0 && fit) {
      flattenColumns.forEach((column) => {
        bodyMinWidth += Number(column.width || column.minWidth || 80);
      });
      if (bodyMinWidth <= bodyWidth) {
        this.scrollX.value = false;
        const totalFlexWidth = bodyWidth - bodyMinWidth;
        if (flexColumns.length === 1) {
          flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth;
        } else {
          const allColumnsWidth = flexColumns.reduce((prev, column) => prev + Number(column.minWidth || 80), 0);
          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth;
          let noneFirstWidth = 0;
          flexColumns.forEach((column, index) => {
            if (index === 0)
              return;
            const flexWidth = Math.floor(Number(column.minWidth || 80) * flexWidthPerPixel);
            noneFirstWidth += flexWidth;
            column.realWidth = Number(column.minWidth || 80) + flexWidth;
          });
          flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;
        }
      } else {
        this.scrollX.value = true;
        flexColumns.forEach((column) => {
          column.realWidth = Number(column.minWidth);
        });
      }
      this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth);
      this.table.state.resizeState.value.width = this.bodyWidth.value;
    } else {
      flattenColumns.forEach((column) => {
        if (!column.width && !column.minWidth) {
          column.realWidth = 80;
        } else {
          column.realWidth = Number(column.width || column.minWidth);
        }
        bodyMinWidth += column.realWidth;
      });
      this.scrollX.value = bodyMinWidth > bodyWidth;
      this.bodyWidth.value = bodyMinWidth;
    }
    const fixedColumns = this.store.states.fixedColumns.value;
    if (fixedColumns.length > 0) {
      let fixedWidth = 0;
      fixedColumns.forEach((column) => {
        fixedWidth += Number(column.realWidth || column.width);
      });
      this.fixedWidth.value = fixedWidth;
    }
    const rightFixedColumns = this.store.states.rightFixedColumns.value;
    if (rightFixedColumns.length > 0) {
      let rightFixedWidth = 0;
      rightFixedColumns.forEach((column) => {
        rightFixedWidth += Number(column.realWidth || column.width);
      });
      this.rightFixedWidth.value = rightFixedWidth;
    }
    this.notifyObservers("columns");
  }
  addObserver(observer) {
    this.observers.push(observer);
  }
  removeObserver(observer) {
    const index = this.observers.indexOf(observer);
    if (index !== -1) {
      this.observers.splice(index, 1);
    }
  }
  notifyObservers(event) {
    const observers = this.observers;
    observers.forEach((observer) => {
      var _a, _b;
      switch (event) {
        case "columns":
          (_a = observer.state) == null ? void 0 : _a.onColumnsChange(this);
          break;
        case "scrollable":
          (_b = observer.state) == null ? void 0 : _b.onScrollableChange(this);
          break;
        default:
          throw new Error(`Table Layout don't have event ${event}.`);
      }
    });
  }
}

exports["default"] = TableLayout;
//# sourceMappingURL=table-layout.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../directives/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$4 = __webpack_require__(/*! ../../scrollbar/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/scrollbar/index.js");
var helper = __webpack_require__(/*! ./store/helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/store/helper.js");
var tableLayout = __webpack_require__(/*! ./table-layout.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-layout.js");
var index$1 = __webpack_require__(/*! ./table-header/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-header/index.js");
var index$2 = __webpack_require__(/*! ./table-body/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-body/index.js");
var index$3 = __webpack_require__(/*! ./table-footer/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-footer/index.js");
var utilsHelper = __webpack_require__(/*! ./table/utils-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/utils-helper.js");
var styleHelper = __webpack_require__(/*! ./table/style-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/style-helper.js");
var keyRenderHelper = __webpack_require__(/*! ./table/key-render-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/key-render-helper.js");
var defaults = __webpack_require__(/*! ./table/defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/defaults.js");
var tokens = __webpack_require__(/*! ./tokens.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js");
var hHelper = __webpack_require__(/*! ./h-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/h-helper.js");
var useScrollbar = __webpack_require__(/*! ./composables/use-scrollbar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/composables/use-scrollbar.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../directives/mousewheel/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/mousewheel/index.js");
var index$5 = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$6 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

let tableIdSeed = 1;
const _sfc_main = vue.defineComponent({
  name: "ElTable",
  directives: {
    Mousewheel: index["default"]
  },
  components: {
    TableHeader: index$1["default"],
    TableBody: index$2["default"],
    TableFooter: index$3["default"],
    ElScrollbar: index$4.ElScrollbar,
    hColgroup: hHelper.hColgroup
  },
  props: defaults["default"],
  emits: [
    "select",
    "select-all",
    "selection-change",
    "cell-mouse-enter",
    "cell-mouse-leave",
    "cell-contextmenu",
    "cell-click",
    "cell-dblclick",
    "row-click",
    "row-contextmenu",
    "row-dblclick",
    "header-click",
    "header-contextmenu",
    "sort-change",
    "filter-change",
    "current-change",
    "header-dragend",
    "expand-change"
  ],
  setup(props) {
    const { t } = index$5.useLocale();
    const ns = index$6.useNamespace("table");
    const table = vue.getCurrentInstance();
    vue.provide(tokens.TABLE_INJECTION_KEY, table);
    const store = helper.createStore(table, props);
    table.store = store;
    const layout = new tableLayout["default"]({
      store: table.store,
      table,
      fit: props.fit,
      showHeader: props.showHeader
    });
    table.layout = layout;
    const isEmpty = vue.computed(() => (store.states.data.value || []).length === 0);
    const {
      setCurrentRow,
      getSelectionRows,
      toggleRowSelection,
      clearSelection,
      clearFilter,
      toggleAllSelection,
      toggleRowExpansion,
      clearSort,
      sort
    } = utilsHelper["default"](store);
    const {
      isHidden,
      renderExpanded,
      setDragVisible,
      isGroup,
      handleMouseLeave,
      handleHeaderFooterMousewheel,
      tableSize,
      emptyBlockStyle,
      handleFixedMousewheel,
      resizeProxyVisible,
      bodyWidth,
      resizeState,
      doLayout,
      tableBodyStyles,
      tableLayout: tableLayout$1,
      scrollbarViewStyle,
      tableInnerStyle,
      scrollbarStyle
    } = styleHelper["default"](props, layout, store, table);
    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } = useScrollbar.useScrollbar();
    const debouncedUpdateLayout = lodashUnified.debounce(doLayout, 50);
    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`;
    table.tableId = tableId;
    table.state = {
      isGroup,
      resizeState,
      doLayout,
      debouncedUpdateLayout
    };
    const computedSumText = vue.computed(() => props.sumText || t("el.table.sumText"));
    const computedEmptyText = vue.computed(() => {
      return props.emptyText || t("el.table.emptyText");
    });
    keyRenderHelper["default"](table);
    return {
      ns,
      layout,
      store,
      handleHeaderFooterMousewheel,
      handleMouseLeave,
      tableId,
      tableSize,
      isHidden,
      isEmpty,
      renderExpanded,
      resizeProxyVisible,
      resizeState,
      isGroup,
      bodyWidth,
      tableBodyStyles,
      emptyBlockStyle,
      debouncedUpdateLayout,
      handleFixedMousewheel,
      setCurrentRow,
      getSelectionRows,
      toggleRowSelection,
      clearSelection,
      clearFilter,
      toggleAllSelection,
      toggleRowExpansion,
      clearSort,
      doLayout,
      sort,
      t,
      setDragVisible,
      context: table,
      computedSumText,
      computedEmptyText,
      tableLayout: tableLayout$1,
      scrollbarViewStyle,
      tableInnerStyle,
      scrollbarStyle,
      scrollBarRef,
      scrollTo,
      setScrollLeft,
      setScrollTop
    };
  }
});
const _hoisted_1 = ["data-prefix"];
const _hoisted_2 = {
  ref: "hiddenColumns",
  class: "hidden-columns"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_hColgroup = vue.resolveComponent("hColgroup");
  const _component_table_header = vue.resolveComponent("table-header");
  const _component_table_body = vue.resolveComponent("table-body");
  const _component_el_scrollbar = vue.resolveComponent("el-scrollbar");
  const _component_table_footer = vue.resolveComponent("table-footer");
  const _directive_mousewheel = vue.resolveDirective("mousewheel");
  return vue.openBlock(), vue.createElementBlock("div", {
    ref: "tableWrapper",
    class: vue.normalizeClass([
      {
        [_ctx.ns.m("fit")]: _ctx.fit,
        [_ctx.ns.m("striped")]: _ctx.stripe,
        [_ctx.ns.m("border")]: _ctx.border || _ctx.isGroup,
        [_ctx.ns.m("hidden")]: _ctx.isHidden,
        [_ctx.ns.m("group")]: _ctx.isGroup,
        [_ctx.ns.m("fluid-height")]: _ctx.maxHeight,
        [_ctx.ns.m("scrollable-x")]: _ctx.layout.scrollX.value,
        [_ctx.ns.m("scrollable-y")]: _ctx.layout.scrollY.value,
        [_ctx.ns.m("enable-row-hover")]: !_ctx.store.states.isComplex.value,
        [_ctx.ns.m("enable-row-transition")]: (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100,
        "has-footer": _ctx.showSummary
      },
      _ctx.ns.m(_ctx.tableSize),
      _ctx.className,
      _ctx.ns.b(),
      _ctx.ns.m(`layout-${_ctx.tableLayout}`)
    ]),
    style: vue.normalizeStyle(_ctx.style),
    "data-prefix": _ctx.ns.namespace.value,
    onMouseleave: _cache[0] || (_cache[0] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args))
  }, [
    vue.createElementVNode("div", {
      class: vue.normalizeClass(_ctx.ns.e("inner-wrapper")),
      style: vue.normalizeStyle(_ctx.tableInnerStyle)
    }, [
      vue.createElementVNode("div", _hoisted_2, [
        vue.renderSlot(_ctx.$slots, "default")
      ], 512),
      _ctx.showHeader && _ctx.tableLayout === "fixed" ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        ref: "headerWrapper",
        class: vue.normalizeClass(_ctx.ns.e("header-wrapper"))
      }, [
        vue.createElementVNode("table", {
          ref: "tableHeader",
          class: vue.normalizeClass(_ctx.ns.e("header")),
          style: vue.normalizeStyle(_ctx.tableBodyStyles),
          border: "0",
          cellpadding: "0",
          cellspacing: "0"
        }, [
          vue.createVNode(_component_hColgroup, {
            columns: _ctx.store.states.columns.value,
            "table-layout": _ctx.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          vue.createVNode(_component_table_header, {
            ref: "tableHeaderRef",
            border: _ctx.border,
            "default-sort": _ctx.defaultSort,
            store: _ctx.store,
            onSetDragVisible: _ctx.setDragVisible
          }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])
        ], 6)
      ], 2)), [
        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
      ]) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode("div", {
        ref: "bodyWrapper",
        class: vue.normalizeClass(_ctx.ns.e("body-wrapper"))
      }, [
        vue.createVNode(_component_el_scrollbar, {
          ref: "scrollBarRef",
          "view-style": _ctx.scrollbarViewStyle,
          "wrap-style": _ctx.scrollbarStyle,
          always: _ctx.scrollbarAlwaysOn
        }, {
          default: vue.withCtx(() => [
            vue.createElementVNode("table", {
              ref: "tableBody",
              class: vue.normalizeClass(_ctx.ns.e("body")),
              cellspacing: "0",
              cellpadding: "0",
              border: "0",
              style: vue.normalizeStyle({
                width: _ctx.bodyWidth,
                tableLayout: _ctx.tableLayout
              })
            }, [
              vue.createVNode(_component_hColgroup, {
                columns: _ctx.store.states.columns.value,
                "table-layout": _ctx.tableLayout
              }, null, 8, ["columns", "table-layout"]),
              _ctx.showHeader && _ctx.tableLayout === "auto" ? (vue.openBlock(), vue.createBlock(_component_table_header, {
                key: 0,
                ref: "tableHeaderRef",
                border: _ctx.border,
                "default-sort": _ctx.defaultSort,
                store: _ctx.store,
                onSetDragVisible: _ctx.setDragVisible
              }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])) : vue.createCommentVNode("v-if", true),
              vue.createVNode(_component_table_body, {
                context: _ctx.context,
                highlight: _ctx.highlightCurrentRow,
                "row-class-name": _ctx.rowClassName,
                "tooltip-effect": _ctx.tooltipEffect,
                "tooltip-options": _ctx.tooltipOptions,
                "row-style": _ctx.rowStyle,
                store: _ctx.store,
                stripe: _ctx.stripe
              }, null, 8, ["context", "highlight", "row-class-name", "tooltip-effect", "tooltip-options", "row-style", "store", "stripe"])
            ], 6),
            _ctx.isEmpty ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              ref: "emptyBlock",
              style: vue.normalizeStyle(_ctx.emptyBlockStyle),
              class: vue.normalizeClass(_ctx.ns.e("empty-block"))
            }, [
              vue.createElementVNode("span", {
                class: vue.normalizeClass(_ctx.ns.e("empty-text"))
              }, [
                vue.renderSlot(_ctx.$slots, "empty", {}, () => [
                  vue.createTextVNode(vue.toDisplayString(_ctx.computedEmptyText), 1)
                ])
              ], 2)
            ], 6)) : vue.createCommentVNode("v-if", true),
            _ctx.$slots.append ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 1,
              ref: "appendWrapper",
              class: vue.normalizeClass(_ctx.ns.e("append-wrapper"))
            }, [
              vue.renderSlot(_ctx.$slots, "append")
            ], 2)) : vue.createCommentVNode("v-if", true)
          ]),
          _: 3
        }, 8, ["view-style", "wrap-style", "always"])
      ], 2),
      _ctx.showSummary ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("div", {
        key: 1,
        ref: "footerWrapper",
        class: vue.normalizeClass(_ctx.ns.e("footer-wrapper"))
      }, [
        vue.createVNode(_component_table_footer, {
          border: _ctx.border,
          "default-sort": _ctx.defaultSort,
          store: _ctx.store,
          style: vue.normalizeStyle(_ctx.tableBodyStyles),
          "sum-text": _ctx.computedSumText,
          "summary-method": _ctx.summaryMethod
        }, null, 8, ["border", "default-sort", "store", "style", "sum-text", "summary-method"])
      ], 2)), [
        [vue.vShow, !_ctx.isEmpty],
        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
      ]) : vue.createCommentVNode("v-if", true),
      _ctx.border || _ctx.isGroup ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 2,
        class: vue.normalizeClass(_ctx.ns.e("border-left-patch"))
      }, null, 2)) : vue.createCommentVNode("v-if", true)
    ], 6),
    vue.withDirectives(vue.createElementVNode("div", {
      ref: "resizeProxy",
      class: vue.normalizeClass(_ctx.ns.e("column-resize-proxy"))
    }, null, 2), [
      [vue.vShow, _ctx.resizeProxyVisible]
    ])
  ], 46, _hoisted_1);
}
var Table = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue"]]);

exports["default"] = Table;
//# sourceMappingURL=table.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tableColumn.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tableColumn.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var index = __webpack_require__(/*! ./table-column/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table-column/index.js");



exports["default"] = index["default"];
//# sourceMappingURL=tableColumn.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/defaults.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/defaults.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index = __webpack_require__(/*! ../../../../hooks/use-size/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-size/index.js");

var defaultProps = {
  data: {
    type: Array,
    default: () => []
  },
  size: index.useSizeProp,
  width: [String, Number],
  height: [String, Number],
  maxHeight: [String, Number],
  fit: {
    type: Boolean,
    default: true
  },
  stripe: Boolean,
  border: Boolean,
  rowKey: [String, Function],
  showHeader: {
    type: Boolean,
    default: true
  },
  showSummary: Boolean,
  sumText: String,
  summaryMethod: Function,
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  cellClassName: [String, Function],
  cellStyle: [Object, Function],
  headerRowClassName: [String, Function],
  headerRowStyle: [Object, Function],
  headerCellClassName: [String, Function],
  headerCellStyle: [Object, Function],
  highlightCurrentRow: Boolean,
  currentRowKey: [String, Number],
  emptyText: String,
  expandRowKeys: Array,
  defaultExpandAll: Boolean,
  defaultSort: Object,
  tooltipEffect: String,
  tooltipOptions: Object,
  spanMethod: Function,
  selectOnIndeterminate: {
    type: Boolean,
    default: true
  },
  indent: {
    type: Number,
    default: 16
  },
  treeProps: {
    type: Object,
    default: () => {
      return {
        hasChildren: "hasChildren",
        children: "children"
      };
    }
  },
  lazy: Boolean,
  load: Function,
  style: {
    type: Object,
    default: () => ({})
  },
  className: {
    type: String,
    default: ""
  },
  tableLayout: {
    type: String,
    default: "fixed"
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: false
  },
  flexible: Boolean,
  showOverflowTooltip: [Boolean, Object]
};

exports["default"] = defaultProps;
//# sourceMappingURL=defaults.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/key-render-helper.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/key-render-helper.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

function useKeyRender(table) {
  const observer = vue.ref();
  const initWatchDom = () => {
    const el = table.vnode.el;
    const columnsWrapper = el.querySelector(".hidden-columns");
    const config = { childList: true, subtree: true };
    const updateOrderFns = table.store.states.updateOrderFns;
    observer.value = new MutationObserver(() => {
      updateOrderFns.forEach((fn) => fn());
    });
    observer.value.observe(columnsWrapper, config);
  };
  vue.onMounted(() => {
    initWatchDom();
  });
  vue.onUnmounted(() => {
    var _a;
    (_a = observer.value) == null ? void 0 : _a.disconnect();
  });
}

exports["default"] = useKeyRender;
//# sourceMappingURL=key-render-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/style-helper.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/style-helper.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var useFormCommonProps = __webpack_require__(/*! ../../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

function useStyle(props, layout, store, table) {
  const isHidden = vue.ref(false);
  const renderExpanded = vue.ref(null);
  const resizeProxyVisible = vue.ref(false);
  const setDragVisible = (visible) => {
    resizeProxyVisible.value = visible;
  };
  const resizeState = vue.ref({
    width: null,
    height: null,
    headerHeight: null
  });
  const isGroup = vue.ref(false);
  const scrollbarViewStyle = {
    display: "inline-block",
    verticalAlign: "middle"
  };
  const tableWidth = vue.ref();
  const tableScrollHeight = vue.ref(0);
  const bodyScrollHeight = vue.ref(0);
  const headerScrollHeight = vue.ref(0);
  const footerScrollHeight = vue.ref(0);
  const appendScrollHeight = vue.ref(0);
  vue.watchEffect(() => {
    layout.setHeight(props.height);
  });
  vue.watchEffect(() => {
    layout.setMaxHeight(props.maxHeight);
  });
  vue.watch(() => [props.currentRowKey, store.states.rowKey], ([currentRowKey, rowKey]) => {
    if (!vue.unref(rowKey) || !vue.unref(currentRowKey))
      return;
    store.setCurrentRowKey(`${currentRowKey}`);
  }, {
    immediate: true
  });
  vue.watch(() => props.data, (data) => {
    table.store.commit("setData", data);
  }, {
    immediate: true,
    deep: true
  });
  vue.watchEffect(() => {
    if (props.expandRowKeys) {
      store.setExpandRowKeysAdapter(props.expandRowKeys);
    }
  });
  const handleMouseLeave = () => {
    table.store.commit("setHoverRow", null);
    if (table.hoverState)
      table.hoverState = null;
  };
  const handleHeaderFooterMousewheel = (event, data) => {
    const { pixelX, pixelY } = data;
    if (Math.abs(pixelX) >= Math.abs(pixelY)) {
      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;
    }
  };
  const shouldUpdateHeight = vue.computed(() => {
    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;
  });
  const tableBodyStyles = vue.computed(() => {
    return {
      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : ""
    };
  });
  const doLayout = () => {
    if (shouldUpdateHeight.value) {
      layout.updateElsHeight();
    }
    layout.updateColumnsWidth();
    requestAnimationFrame(syncPosition);
  };
  vue.onMounted(async () => {
    await vue.nextTick();
    store.updateColumns();
    bindEvents();
    requestAnimationFrame(doLayout);
    const el = table.vnode.el;
    const tableHeader = table.refs.headerWrapper;
    if (props.flexible && el && el.parentElement) {
      el.parentElement.style.minWidth = "0";
    }
    resizeState.value = {
      width: tableWidth.value = el.offsetWidth,
      height: el.offsetHeight,
      headerHeight: props.showHeader && tableHeader ? tableHeader.offsetHeight : null
    };
    store.states.columns.value.forEach((column) => {
      if (column.filteredValue && column.filteredValue.length) {
        table.store.commit("filterChange", {
          column,
          values: column.filteredValue,
          silent: true
        });
      }
    });
    table.$ready = true;
  });
  const setScrollClassByEl = (el, className) => {
    if (!el)
      return;
    const classList = Array.from(el.classList).filter((item) => !item.startsWith("is-scrolling-"));
    classList.push(layout.scrollX.value ? className : "is-scrolling-none");
    el.className = classList.join(" ");
  };
  const setScrollClass = (className) => {
    const { tableWrapper } = table.refs;
    setScrollClassByEl(tableWrapper, className);
  };
  const hasScrollClass = (className) => {
    const { tableWrapper } = table.refs;
    return !!(tableWrapper && tableWrapper.classList.contains(className));
  };
  const syncPosition = function() {
    if (!table.refs.scrollBarRef)
      return;
    if (!layout.scrollX.value) {
      const scrollingNoneClass = "is-scrolling-none";
      if (!hasScrollClass(scrollingNoneClass)) {
        setScrollClass(scrollingNoneClass);
      }
      return;
    }
    const scrollContainer = table.refs.scrollBarRef.wrapRef;
    if (!scrollContainer)
      return;
    const { scrollLeft, offsetWidth, scrollWidth } = scrollContainer;
    const { headerWrapper, footerWrapper } = table.refs;
    if (headerWrapper)
      headerWrapper.scrollLeft = scrollLeft;
    if (footerWrapper)
      footerWrapper.scrollLeft = scrollLeft;
    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1;
    if (scrollLeft >= maxScrollLeftPosition) {
      setScrollClass("is-scrolling-right");
    } else if (scrollLeft === 0) {
      setScrollClass("is-scrolling-left");
    } else {
      setScrollClass("is-scrolling-middle");
    }
  };
  const bindEvents = () => {
    if (!table.refs.scrollBarRef)
      return;
    if (table.refs.scrollBarRef.wrapRef) {
      core.useEventListener(table.refs.scrollBarRef.wrapRef, "scroll", syncPosition, {
        passive: true
      });
    }
    if (props.fit) {
      core.useResizeObserver(table.vnode.el, resizeListener);
    } else {
      core.useEventListener(window, "resize", resizeListener);
    }
    core.useResizeObserver(table.refs.bodyWrapper, () => {
      var _a, _b;
      resizeListener();
      (_b = (_a = table.refs) == null ? void 0 : _a.scrollBarRef) == null ? void 0 : _b.update();
    });
  };
  const resizeListener = () => {
    var _a, _b, _c, _d;
    const el = table.vnode.el;
    if (!table.$ready || !el)
      return;
    let shouldUpdateLayout = false;
    const {
      width: oldWidth,
      height: oldHeight,
      headerHeight: oldHeaderHeight
    } = resizeState.value;
    const width = tableWidth.value = el.offsetWidth;
    if (oldWidth !== width) {
      shouldUpdateLayout = true;
    }
    const height = el.offsetHeight;
    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {
      shouldUpdateLayout = true;
    }
    const tableHeader = props.tableLayout === "fixed" ? table.refs.headerWrapper : (_a = table.refs.tableHeaderRef) == null ? void 0 : _a.$el;
    if (props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) !== oldHeaderHeight) {
      shouldUpdateLayout = true;
    }
    tableScrollHeight.value = ((_b = table.refs.tableWrapper) == null ? void 0 : _b.scrollHeight) || 0;
    headerScrollHeight.value = (tableHeader == null ? void 0 : tableHeader.scrollHeight) || 0;
    footerScrollHeight.value = ((_c = table.refs.footerWrapper) == null ? void 0 : _c.offsetHeight) || 0;
    appendScrollHeight.value = ((_d = table.refs.appendWrapper) == null ? void 0 : _d.offsetHeight) || 0;
    bodyScrollHeight.value = tableScrollHeight.value - headerScrollHeight.value - footerScrollHeight.value - appendScrollHeight.value;
    if (shouldUpdateLayout) {
      resizeState.value = {
        width,
        height,
        headerHeight: props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) || 0
      };
      doLayout();
    }
  };
  const tableSize = useFormCommonProps.useFormSize();
  const bodyWidth = vue.computed(() => {
    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout;
    return bodyWidth_.value ? `${bodyWidth_.value - (scrollY.value ? gutterWidth : 0)}px` : "";
  });
  const tableLayout = vue.computed(() => {
    if (props.maxHeight)
      return "fixed";
    return props.tableLayout;
  });
  const emptyBlockStyle = vue.computed(() => {
    if (props.data && props.data.length)
      return null;
    let height = "100%";
    if (props.height && bodyScrollHeight.value) {
      height = `${bodyScrollHeight.value}px`;
    }
    const width = tableWidth.value;
    return {
      width: width ? `${width}px` : "",
      height
    };
  });
  const tableInnerStyle = vue.computed(() => {
    if (props.height) {
      return {
        height: !Number.isNaN(Number(props.height)) ? `${props.height}px` : props.height
      };
    }
    if (props.maxHeight) {
      return {
        maxHeight: !Number.isNaN(Number(props.maxHeight)) ? `${props.maxHeight}px` : props.maxHeight
      };
    }
    return {};
  });
  const scrollbarStyle = vue.computed(() => {
    if (props.height) {
      return {
        height: "100%"
      };
    }
    if (props.maxHeight) {
      if (!Number.isNaN(Number(props.maxHeight))) {
        return {
          maxHeight: `${props.maxHeight - headerScrollHeight.value - footerScrollHeight.value}px`
        };
      } else {
        return {
          maxHeight: `calc(${props.maxHeight} - ${headerScrollHeight.value + footerScrollHeight.value}px)`
        };
      }
    }
    return {};
  });
  const handleFixedMousewheel = (event, data) => {
    const bodyWrapper = table.refs.bodyWrapper;
    if (Math.abs(data.spinY) > 0) {
      const currentScrollTop = bodyWrapper.scrollTop;
      if (data.pixelY < 0 && currentScrollTop !== 0) {
        event.preventDefault();
      }
      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {
        event.preventDefault();
      }
      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);
    } else {
      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);
    }
  };
  return {
    isHidden,
    renderExpanded,
    setDragVisible,
    isGroup,
    handleMouseLeave,
    handleHeaderFooterMousewheel,
    tableSize,
    emptyBlockStyle,
    handleFixedMousewheel,
    resizeProxyVisible,
    bodyWidth,
    resizeState,
    doLayout,
    tableBodyStyles,
    tableLayout,
    scrollbarViewStyle,
    tableInnerStyle,
    scrollbarStyle
  };
}

exports["default"] = useStyle;
//# sourceMappingURL=style-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/utils-helper.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/table/utils-helper.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

function useUtils(store) {
  const setCurrentRow = (row) => {
    store.commit("setCurrentRow", row);
  };
  const getSelectionRows = () => {
    return store.getSelectionRows();
  };
  const toggleRowSelection = (row, selected) => {
    store.toggleRowSelection(row, selected, false);
    store.updateAllSelected();
  };
  const clearSelection = () => {
    store.clearSelection();
  };
  const clearFilter = (columnKeys) => {
    store.clearFilter(columnKeys);
  };
  const toggleAllSelection = () => {
    store.commit("toggleAllSelection");
  };
  const toggleRowExpansion = (row, expanded) => {
    store.toggleRowExpansionAdapter(row, expanded);
  };
  const clearSort = () => {
    store.clearSort();
  };
  const sort = (prop, order) => {
    store.commit("sort", { prop, order });
  };
  return {
    setCurrentRow,
    getSelectionRows,
    toggleRowSelection,
    clearSelection,
    clearFilter,
    toggleAllSelection,
    toggleRowExpansion,
    clearSort,
    sort
  };
}

exports["default"] = useUtils;
//# sourceMappingURL=utils-helper.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/tokens.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const TABLE_INJECTION_KEY = Symbol("ElTable");

exports.TABLE_INJECTION_KEY = TABLE_INJECTION_KEY;
//# sourceMappingURL=tokens.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/table/src/util.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var core = __webpack_require__(/*! @popperjs/core */ "./node_modules/.pnpm/@sxzz+popperjs-es@2.11.7/node_modules/@sxzz/popperjs-es/dist/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var escapeHtml = __webpack_require__(/*! escape-html */ "./node_modules/.pnpm/escape-html@1.0.3/node_modules/escape-html/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var index = __webpack_require__(/*! ../../../hooks/use-delayed-toggle/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-delayed-toggle/index.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var escapeHtml__default = /*#__PURE__*/_interopDefaultLegacy(escapeHtml);

const getCell = function(event) {
  var _a;
  return (_a = event.target) == null ? void 0 : _a.closest("td");
};
const orderBy = function(array, sortKey, reverse, sortMethod, sortBy) {
  if (!sortKey && !sortMethod && (!sortBy || Array.isArray(sortBy) && !sortBy.length)) {
    return array;
  }
  if (typeof reverse === "string") {
    reverse = reverse === "descending" ? -1 : 1;
  } else {
    reverse = reverse && reverse < 0 ? -1 : 1;
  }
  const getKey = sortMethod ? null : function(value, index) {
    if (sortBy) {
      if (!Array.isArray(sortBy)) {
        sortBy = [sortBy];
      }
      return sortBy.map((by) => {
        if (typeof by === "string") {
          return lodashUnified.get(value, by);
        } else {
          return by(value, index, array);
        }
      });
    }
    if (sortKey !== "$key") {
      if (shared.isObject(value) && "$value" in value)
        value = value.$value;
    }
    return [shared.isObject(value) ? lodashUnified.get(value, sortKey) : value];
  };
  const compare = function(a, b) {
    if (sortMethod) {
      return sortMethod(a.value, b.value);
    }
    for (let i = 0, len = a.key.length; i < len; i++) {
      if (a.key[i] < b.key[i]) {
        return -1;
      }
      if (a.key[i] > b.key[i]) {
        return 1;
      }
    }
    return 0;
  };
  return array.map((value, index) => {
    return {
      value,
      index,
      key: getKey ? getKey(value, index) : null
    };
  }).sort((a, b) => {
    let order = compare(a, b);
    if (!order) {
      order = a.index - b.index;
    }
    return order * +reverse;
  }).map((item) => item.value);
};
const getColumnById = function(table, columnId) {
  let column = null;
  table.columns.forEach((item) => {
    if (item.id === columnId) {
      column = item;
    }
  });
  return column;
};
const getColumnByKey = function(table, columnKey) {
  let column = null;
  for (let i = 0; i < table.columns.length; i++) {
    const item = table.columns[i];
    if (item.columnKey === columnKey) {
      column = item;
      break;
    }
  }
  if (!column)
    error.throwError("ElTable", `No column matching with column-key: ${columnKey}`);
  return column;
};
const getColumnByCell = function(table, cell, namespace) {
  const matches = (cell.className || "").match(new RegExp(`${namespace}-table_[^\\s]+`, "gm"));
  if (matches) {
    return getColumnById(table, matches[0]);
  }
  return null;
};
const getRowIdentity = (row, rowKey) => {
  if (!row)
    throw new Error("Row is required when get row identity");
  if (typeof rowKey === "string") {
    if (!rowKey.includes(".")) {
      return `${row[rowKey]}`;
    }
    const key = rowKey.split(".");
    let current = row;
    for (const element of key) {
      current = current[element];
    }
    return `${current}`;
  } else if (typeof rowKey === "function") {
    return rowKey.call(null, row);
  }
};
const getKeysMap = function(array, rowKey) {
  const arrayMap = {};
  (array || []).forEach((row, index) => {
    arrayMap[getRowIdentity(row, rowKey)] = { row, index };
  });
  return arrayMap;
};
function mergeOptions(defaults, config) {
  const options = {};
  let key;
  for (key in defaults) {
    options[key] = defaults[key];
  }
  for (key in config) {
    if (shared.hasOwn(config, key)) {
      const value = config[key];
      if (typeof value !== "undefined") {
        options[key] = value;
      }
    }
  }
  return options;
}
function parseWidth(width) {
  if (width === "")
    return width;
  if (width !== void 0) {
    width = Number.parseInt(width, 10);
    if (Number.isNaN(width)) {
      width = "";
    }
  }
  return width;
}
function parseMinWidth(minWidth) {
  if (minWidth === "")
    return minWidth;
  if (minWidth !== void 0) {
    minWidth = parseWidth(minWidth);
    if (Number.isNaN(minWidth)) {
      minWidth = 80;
    }
  }
  return minWidth;
}
function parseHeight(height) {
  if (typeof height === "number") {
    return height;
  }
  if (typeof height === "string") {
    if (/^\d+(?:px)?$/.test(height)) {
      return Number.parseInt(height, 10);
    } else {
      return height;
    }
  }
  return null;
}
function compose(...funcs) {
  if (funcs.length === 0) {
    return (arg) => arg;
  }
  if (funcs.length === 1) {
    return funcs[0];
  }
  return funcs.reduce((a, b) => (...args) => a(b(...args)));
}
function toggleRowStatus(statusArr, row, newVal) {
  let changed = false;
  const index = statusArr.indexOf(row);
  const included = index !== -1;
  const toggleStatus = (type) => {
    if (type === "add") {
      statusArr.push(row);
    } else {
      statusArr.splice(index, 1);
    }
    changed = true;
    if (shared.isArray(row.children)) {
      row.children.forEach((item) => {
        toggleRowStatus(statusArr, item, newVal != null ? newVal : !included);
      });
    }
  };
  if (types.isBoolean(newVal)) {
    if (newVal && !included) {
      toggleStatus("add");
    } else if (!newVal && included) {
      toggleStatus("remove");
    }
  } else {
    included ? toggleStatus("remove") : toggleStatus("add");
  }
  return changed;
}
function walkTreeNode(root, cb, childrenKey = "children", lazyKey = "hasChildren") {
  const isNil = (array) => !(Array.isArray(array) && array.length);
  function _walker(parent, children, level) {
    cb(parent, children, level);
    children.forEach((item) => {
      if (item[lazyKey]) {
        cb(item, null, level + 1);
        return;
      }
      const children2 = item[childrenKey];
      if (!isNil(children2)) {
        _walker(item, children2, level + 1);
      }
    });
  }
  root.forEach((item) => {
    if (item[lazyKey]) {
      cb(item, null, 0);
      return;
    }
    const children = item[childrenKey];
    if (!isNil(children)) {
      _walker(item, children, 0);
    }
  });
}
exports.removePopper = void 0;
function createTablePopper(parentNode, trigger, popperContent, nextZIndex, tooltipOptions) {
  tooltipOptions = lodashUnified.merge({
    enterable: true,
    showArrow: true
  }, tooltipOptions);
  const ns = parentNode == null ? void 0 : parentNode.dataset.prefix;
  const scrollContainer = parentNode == null ? void 0 : parentNode.querySelector(`.${ns}-scrollbar__wrap`);
  function renderContent() {
    const isLight = tooltipOptions.effect === "light";
    const content2 = document.createElement("div");
    content2.className = [
      `${ns}-popper`,
      isLight ? "is-light" : "is-dark",
      tooltipOptions.popperClass || ""
    ].join(" ");
    popperContent = escapeHtml__default["default"](popperContent);
    content2.innerHTML = popperContent;
    content2.style.zIndex = String(nextZIndex());
    parentNode == null ? void 0 : parentNode.appendChild(content2);
    return content2;
  }
  function renderArrow() {
    const arrow = document.createElement("div");
    arrow.className = `${ns}-popper__arrow`;
    return arrow;
  }
  function showPopper() {
    popperInstance && popperInstance.update();
  }
  exports.removePopper == null ? void 0 : exports.removePopper();
  exports.removePopper = () => {
    try {
      popperInstance && popperInstance.destroy();
      content && (parentNode == null ? void 0 : parentNode.removeChild(content));
      trigger.removeEventListener("mouseenter", onOpen);
      trigger.removeEventListener("mouseleave", onClose);
      scrollContainer == null ? void 0 : scrollContainer.removeEventListener("scroll", exports.removePopper);
      exports.removePopper = void 0;
    } catch (e) {
    }
  };
  let popperInstance = null;
  let onOpen = showPopper;
  let onClose = exports.removePopper;
  if (tooltipOptions.enterable) {
    ;
    ({ onOpen, onClose } = index.useDelayedToggle({
      showAfter: tooltipOptions.showAfter,
      hideAfter: tooltipOptions.hideAfter,
      open: showPopper,
      close: exports.removePopper
    }));
  }
  const content = renderContent();
  content.onmouseenter = onOpen;
  content.onmouseleave = onClose;
  const modifiers = [];
  if (tooltipOptions.offset) {
    modifiers.push({
      name: "offset",
      options: {
        offset: [0, tooltipOptions.offset]
      }
    });
  }
  if (tooltipOptions.showArrow) {
    const arrow = content.appendChild(renderArrow());
    modifiers.push({
      name: "arrow",
      options: {
        element: arrow,
        padding: 10
      }
    });
  }
  const popperOptions = tooltipOptions.popperOptions || {};
  popperInstance = core.createPopper(trigger, content, {
    placement: tooltipOptions.placement || "top",
    strategy: "fixed",
    ...popperOptions,
    modifiers: popperOptions.modifiers ? modifiers.concat(popperOptions.modifiers) : modifiers
  });
  trigger.addEventListener("mouseenter", onOpen);
  trigger.addEventListener("mouseleave", onClose);
  scrollContainer == null ? void 0 : scrollContainer.addEventListener("scroll", exports.removePopper);
  return popperInstance;
}
function getCurrentColumns(column) {
  if (column.children) {
    return lodashUnified.flatMap(column.children, getCurrentColumns);
  } else {
    return [column];
  }
}
function getColSpan(colSpan, column) {
  return colSpan + column.colSpan;
}
const isFixedColumn = (index, fixed, store, realColumns) => {
  let start = 0;
  let after = index;
  const columns = store.states.columns.value;
  if (realColumns) {
    const curColumns = getCurrentColumns(realColumns[index]);
    const preColumns = columns.slice(0, columns.indexOf(curColumns[0]));
    start = preColumns.reduce(getColSpan, 0);
    after = start + curColumns.reduce(getColSpan, 0) - 1;
  } else {
    start = index;
  }
  let fixedLayout;
  switch (fixed) {
    case "left":
      if (after < store.states.fixedLeafColumnsLength.value) {
        fixedLayout = "left";
      }
      break;
    case "right":
      if (start >= columns.length - store.states.rightFixedLeafColumnsLength.value) {
        fixedLayout = "right";
      }
      break;
    default:
      if (after < store.states.fixedLeafColumnsLength.value) {
        fixedLayout = "left";
      } else if (start >= columns.length - store.states.rightFixedLeafColumnsLength.value) {
        fixedLayout = "right";
      }
  }
  return fixedLayout ? {
    direction: fixedLayout,
    start,
    after
  } : {};
};
const getFixedColumnsClass = (namespace, index, fixed, store, realColumns, offset = 0) => {
  const classes = [];
  const { direction, start, after } = isFixedColumn(index, fixed, store, realColumns);
  if (direction) {
    const isLeft = direction === "left";
    classes.push(`${namespace}-fixed-column--${direction}`);
    if (isLeft && after + offset === store.states.fixedLeafColumnsLength.value - 1) {
      classes.push("is-last-column");
    } else if (!isLeft && start - offset === store.states.columns.value.length - store.states.rightFixedLeafColumnsLength.value) {
      classes.push("is-first-column");
    }
  }
  return classes;
};
function getOffset(offset, column) {
  return offset + (column.realWidth === null || Number.isNaN(column.realWidth) ? Number(column.width) : column.realWidth);
}
const getFixedColumnOffset = (index, fixed, store, realColumns) => {
  const {
    direction,
    start = 0,
    after = 0
  } = isFixedColumn(index, fixed, store, realColumns);
  if (!direction) {
    return;
  }
  const styles = {};
  const isLeft = direction === "left";
  const columns = store.states.columns.value;
  if (isLeft) {
    styles.left = columns.slice(0, start).reduce(getOffset, 0);
  } else {
    styles.right = columns.slice(after + 1).reverse().reduce(getOffset, 0);
  }
  return styles;
};
const ensurePosition = (style, key) => {
  if (!style)
    return;
  if (!Number.isNaN(style[key])) {
    style[key] = `${style[key]}px`;
  }
};

exports.compose = compose;
exports.createTablePopper = createTablePopper;
exports.ensurePosition = ensurePosition;
exports.getCell = getCell;
exports.getColumnByCell = getColumnByCell;
exports.getColumnById = getColumnById;
exports.getColumnByKey = getColumnByKey;
exports.getFixedColumnOffset = getFixedColumnOffset;
exports.getFixedColumnsClass = getFixedColumnsClass;
exports.getKeysMap = getKeysMap;
exports.getRowIdentity = getRowIdentity;
exports.isFixedColumn = isFixedColumn;
exports.mergeOptions = mergeOptions;
exports.orderBy = orderBy;
exports.parseHeight = parseHeight;
exports.parseMinWidth = parseMinWidth;
exports.parseWidth = parseWidth;
exports.toggleRowStatus = toggleRowStatus;
exports.walkTreeNode = walkTreeNode;
//# sourceMappingURL=util.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/index.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tabs = __webpack_require__(/*! ./src/tabs.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tabs.js");
var tabPane$1 = __webpack_require__(/*! ./src/tab-pane2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane2.js");
var tabBar = __webpack_require__(/*! ./src/tab-bar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar.js");
var tabNav = __webpack_require__(/*! ./src/tab-nav.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-nav.js");
var tabPane = __webpack_require__(/*! ./src/tab-pane.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTabs = install.withInstall(tabs["default"], {
  TabPane: tabPane$1["default"]
});
const ElTabPane = install.withNoopInstall(tabPane$1["default"]);

exports.tabsEmits = tabs.tabsEmits;
exports.tabsProps = tabs.tabsProps;
exports.tabBarProps = tabBar.tabBarProps;
exports.tabNavEmits = tabNav.tabNavEmits;
exports.tabNavProps = tabNav.tabNavProps;
exports.tabPaneProps = tabPane.tabPaneProps;
exports.tabsRootContextKey = constants.tabsRootContextKey;
exports.ElTabPane = ElTabPane;
exports.ElTabs = ElTabs;
exports["default"] = ElTabs;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const tabsRootContextKey = Symbol("tabsRootContextKey");

exports.tabsRootContextKey = tabsRootContextKey;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");

const tabBarProps = runtime.buildProps({
  tabs: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  }
});

exports.tabBarProps = tabBarProps;
//# sourceMappingURL=tab-bar.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar2.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar2.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js");
var tabBar = __webpack_require__(/*! ./tab-bar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var strings = __webpack_require__(/*! ../../../utils/strings.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/strings.js");

const COMPONENT_NAME = "ElTabBar";
const __default__ = vue.defineComponent({
  name: COMPONENT_NAME
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: tabBar.tabBarProps,
  setup(__props, { expose }) {
    const props = __props;
    const instance = vue.getCurrentInstance();
    const rootTabs = vue.inject(constants.tabsRootContextKey);
    if (!rootTabs)
      error.throwError(COMPONENT_NAME, "<el-tabs><el-tab-bar /></el-tabs>");
    const ns = index.useNamespace("tabs");
    const barRef = vue.ref();
    const barStyle = vue.ref();
    const getBarStyle = () => {
      let offset = 0;
      let tabSize = 0;
      const sizeName = ["top", "bottom"].includes(rootTabs.props.tabPosition) ? "width" : "height";
      const sizeDir = sizeName === "width" ? "x" : "y";
      const position = sizeDir === "x" ? "left" : "top";
      props.tabs.every((tab) => {
        var _a, _b;
        const $el = (_b = (_a = instance.parent) == null ? void 0 : _a.refs) == null ? void 0 : _b[`tab-${tab.uid}`];
        if (!$el)
          return false;
        if (!tab.active) {
          return true;
        }
        offset = $el[`offset${strings.capitalize(position)}`];
        tabSize = $el[`client${strings.capitalize(sizeName)}`];
        const tabStyles = window.getComputedStyle($el);
        if (sizeName === "width") {
          if (props.tabs.length > 1) {
            tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);
          }
          offset += Number.parseFloat(tabStyles.paddingLeft);
        }
        return false;
      });
      return {
        [sizeName]: `${tabSize}px`,
        transform: `translate${strings.capitalize(sizeDir)}(${offset}px)`
      };
    };
    const update = () => barStyle.value = getBarStyle();
    vue.watch(() => props.tabs, async () => {
      await vue.nextTick();
      update();
    }, { immediate: true });
    core.useResizeObserver(barRef, () => update());
    expose({
      ref: barRef,
      update
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        ref_key: "barRef",
        ref: barRef,
        class: vue.normalizeClass([vue.unref(ns).e("active-bar"), vue.unref(ns).is(vue.unref(rootTabs).props.tabPosition)]),
        style: vue.normalizeStyle(barStyle.value)
      }, null, 6);
    };
  }
});
var TabBar = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-bar.vue"]]);

exports["default"] = TabBar;
//# sourceMappingURL=tab-bar2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-nav.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-nav.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var tabBar = __webpack_require__(/*! ./tab-bar2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-bar2.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var strings = __webpack_require__(/*! ../../../utils/strings.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/strings.js");
var aria = __webpack_require__(/*! ../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

const tabNavProps = runtime.buildProps({
  panes: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  currentName: {
    type: [String, Number],
    default: ""
  },
  editable: Boolean,
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  stretch: Boolean
});
const tabNavEmits = {
  tabClick: (tab, tabName, ev) => ev instanceof Event,
  tabRemove: (tab, ev) => ev instanceof Event
};
const COMPONENT_NAME = "ElTabNav";
const TabNav = vue.defineComponent({
  name: COMPONENT_NAME,
  props: tabNavProps,
  emits: tabNavEmits,
  setup(props, {
    expose,
    emit
  }) {
    const vm = vue.getCurrentInstance();
    const rootTabs = vue.inject(constants.tabsRootContextKey);
    if (!rootTabs)
      error.throwError(COMPONENT_NAME, `<el-tabs><tab-nav /></el-tabs>`);
    const ns = index.useNamespace("tabs");
    const visibility = core.useDocumentVisibility();
    const focused = core.useWindowFocus();
    const navScroll$ = vue.ref();
    const nav$ = vue.ref();
    const el$ = vue.ref();
    const tabBarRef = vue.ref();
    const scrollable = vue.ref(false);
    const navOffset = vue.ref(0);
    const isFocus = vue.ref(false);
    const focusable = vue.ref(true);
    const sizeName = vue.computed(() => ["top", "bottom"].includes(rootTabs.props.tabPosition) ? "width" : "height");
    const navStyle = vue.computed(() => {
      const dir = sizeName.value === "width" ? "X" : "Y";
      return {
        transform: `translate${dir}(-${navOffset.value}px)`
      };
    });
    const scrollPrev = () => {
      if (!navScroll$.value)
        return;
      const containerSize = navScroll$.value[`offset${strings.capitalize(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (!currentOffset)
        return;
      const newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;
      navOffset.value = newOffset;
    };
    const scrollNext = () => {
      if (!navScroll$.value || !nav$.value)
        return;
      const navSize = nav$.value[`offset${strings.capitalize(sizeName.value)}`];
      const containerSize = navScroll$.value[`offset${strings.capitalize(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (navSize - currentOffset <= containerSize)
        return;
      const newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;
      navOffset.value = newOffset;
    };
    const scrollToActiveTab = async () => {
      const nav = nav$.value;
      if (!scrollable.value || !el$.value || !navScroll$.value || !nav)
        return;
      await vue.nextTick();
      const activeTab = el$.value.querySelector(".is-active");
      if (!activeTab)
        return;
      const navScroll = navScroll$.value;
      const isHorizontal = ["top", "bottom"].includes(rootTabs.props.tabPosition);
      const activeTabBounding = activeTab.getBoundingClientRect();
      const navScrollBounding = navScroll.getBoundingClientRect();
      const maxOffset = isHorizontal ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;
      const currentOffset = navOffset.value;
      let newOffset = currentOffset;
      if (isHorizontal) {
        if (activeTabBounding.left < navScrollBounding.left) {
          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);
        }
        if (activeTabBounding.right > navScrollBounding.right) {
          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;
        }
      } else {
        if (activeTabBounding.top < navScrollBounding.top) {
          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);
        }
        if (activeTabBounding.bottom > navScrollBounding.bottom) {
          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);
        }
      }
      newOffset = Math.max(newOffset, 0);
      navOffset.value = Math.min(newOffset, maxOffset);
    };
    const update = () => {
      var _a;
      if (!nav$.value || !navScroll$.value)
        return;
      props.stretch && ((_a = tabBarRef.value) == null ? void 0 : _a.update());
      const navSize = nav$.value[`offset${strings.capitalize(sizeName.value)}`];
      const containerSize = navScroll$.value[`offset${strings.capitalize(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (containerSize < navSize) {
        scrollable.value = scrollable.value || {};
        scrollable.value.prev = currentOffset;
        scrollable.value.next = currentOffset + containerSize < navSize;
        if (navSize - currentOffset < containerSize) {
          navOffset.value = navSize - containerSize;
        }
      } else {
        scrollable.value = false;
        if (currentOffset > 0) {
          navOffset.value = 0;
        }
      }
    };
    const changeTab = (e) => {
      const code = e.code;
      const {
        up,
        down,
        left,
        right
      } = aria.EVENT_CODE;
      if (![up, down, left, right].includes(code))
        return;
      const tabList = Array.from(e.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)"));
      const currentIndex = tabList.indexOf(e.target);
      let nextIndex;
      if (code === left || code === up) {
        if (currentIndex === 0) {
          nextIndex = tabList.length - 1;
        } else {
          nextIndex = currentIndex - 1;
        }
      } else {
        if (currentIndex < tabList.length - 1) {
          nextIndex = currentIndex + 1;
        } else {
          nextIndex = 0;
        }
      }
      tabList[nextIndex].focus({
        preventScroll: true
      });
      tabList[nextIndex].click();
      setFocus();
    };
    const setFocus = () => {
      if (focusable.value)
        isFocus.value = true;
    };
    const removeFocus = () => isFocus.value = false;
    vue.watch(visibility, (visibility2) => {
      if (visibility2 === "hidden") {
        focusable.value = false;
      } else if (visibility2 === "visible") {
        setTimeout(() => focusable.value = true, 50);
      }
    });
    vue.watch(focused, (focused2) => {
      if (focused2) {
        setTimeout(() => focusable.value = true, 50);
      } else {
        focusable.value = false;
      }
    });
    core.useResizeObserver(el$, update);
    vue.onMounted(() => setTimeout(() => scrollToActiveTab(), 0));
    vue.onUpdated(() => update());
    expose({
      scrollToActiveTab,
      removeFocus
    });
    vue.watch(() => props.panes, () => vm.update(), {
      flush: "post",
      deep: true
    });
    return () => {
      const scrollBtn = scrollable.value ? [vue.createVNode("span", {
        "class": [ns.e("nav-prev"), ns.is("disabled", !scrollable.value.prev)],
        "onClick": scrollPrev
      }, [vue.createVNode(index$1.ElIcon, null, {
        default: () => [vue.createVNode(iconsVue.ArrowLeft, null, null)]
      })]), vue.createVNode("span", {
        "class": [ns.e("nav-next"), ns.is("disabled", !scrollable.value.next)],
        "onClick": scrollNext
      }, [vue.createVNode(index$1.ElIcon, null, {
        default: () => [vue.createVNode(iconsVue.ArrowRight, null, null)]
      })])] : null;
      const tabs = props.panes.map((pane, index) => {
        var _a, _b, _c, _d;
        const uid = pane.uid;
        const disabled = pane.props.disabled;
        const tabName = (_b = (_a = pane.props.name) != null ? _a : pane.index) != null ? _b : `${index}`;
        const closable = !disabled && (pane.isClosable || props.editable);
        pane.index = `${index}`;
        const btnClose = closable ? vue.createVNode(index$1.ElIcon, {
          "class": "is-icon-close",
          "onClick": (ev) => emit("tabRemove", pane, ev)
        }, {
          default: () => [vue.createVNode(iconsVue.Close, null, null)]
        }) : null;
        const tabLabelContent = ((_d = (_c = pane.slots).label) == null ? void 0 : _d.call(_c)) || pane.props.label;
        const tabindex = !disabled && pane.active ? 0 : -1;
        return vue.createVNode("div", {
          "ref": `tab-${uid}`,
          "class": [ns.e("item"), ns.is(rootTabs.props.tabPosition), ns.is("active", pane.active), ns.is("disabled", disabled), ns.is("closable", closable), ns.is("focus", isFocus.value)],
          "id": `tab-${tabName}`,
          "key": `tab-${uid}`,
          "aria-controls": `pane-${tabName}`,
          "role": "tab",
          "aria-selected": pane.active,
          "tabindex": tabindex,
          "onFocus": () => setFocus(),
          "onBlur": () => removeFocus(),
          "onClick": (ev) => {
            removeFocus();
            emit("tabClick", pane, tabName, ev);
          },
          "onKeydown": (ev) => {
            if (closable && (ev.code === aria.EVENT_CODE.delete || ev.code === aria.EVENT_CODE.backspace)) {
              emit("tabRemove", pane, ev);
            }
          }
        }, [...[tabLabelContent, btnClose]]);
      });
      return vue.createVNode("div", {
        "ref": el$,
        "class": [ns.e("nav-wrap"), ns.is("scrollable", !!scrollable.value), ns.is(rootTabs.props.tabPosition)]
      }, [scrollBtn, vue.createVNode("div", {
        "class": ns.e("nav-scroll"),
        "ref": navScroll$
      }, [vue.createVNode("div", {
        "class": [ns.e("nav"), ns.is(rootTabs.props.tabPosition), ns.is("stretch", props.stretch && ["top", "bottom"].includes(rootTabs.props.tabPosition))],
        "ref": nav$,
        "style": navStyle.value,
        "role": "tablist",
        "onKeydown": changeTab
      }, [...[!props.type ? vue.createVNode(tabBar["default"], {
        "ref": tabBarRef,
        "tabs": [...props.panes]
      }, null) : null, tabs]])])]);
    };
  }
});

exports["default"] = TabNav;
exports.tabNavEmits = tabNavEmits;
exports.tabNavProps = tabNavProps;
//# sourceMappingURL=tab-nav.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tabPaneProps = runtime.buildProps({
  label: {
    type: String,
    default: ""
  },
  name: {
    type: [String, Number]
  },
  closable: Boolean,
  disabled: Boolean,
  lazy: Boolean
});

exports.tabPaneProps = tabPaneProps;
//# sourceMappingURL=tab-pane.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane2.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane2.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js");
var tabPane = __webpack_require__(/*! ./tab-pane.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-pane.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const _hoisted_1 = ["id", "aria-hidden", "aria-labelledby"];
const COMPONENT_NAME = "ElTabPane";
const __default__ = vue.defineComponent({
  name: COMPONENT_NAME
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: tabPane.tabPaneProps,
  setup(__props) {
    const props = __props;
    const instance = vue.getCurrentInstance();
    const slots = vue.useSlots();
    const tabsRoot = vue.inject(constants.tabsRootContextKey);
    if (!tabsRoot)
      error.throwError(COMPONENT_NAME, "usage: <el-tabs><el-tab-pane /></el-tabs/>");
    const ns = index.useNamespace("tab-pane");
    const index$1 = vue.ref();
    const isClosable = vue.computed(() => props.closable || tabsRoot.props.closable);
    const active = core.eagerComputed(() => {
      var _a;
      return tabsRoot.currentName.value === ((_a = props.name) != null ? _a : index$1.value);
    });
    const loaded = vue.ref(active.value);
    const paneName = vue.computed(() => {
      var _a;
      return (_a = props.name) != null ? _a : index$1.value;
    });
    const shouldBeRender = core.eagerComputed(() => !props.lazy || loaded.value || active.value);
    vue.watch(active, (val) => {
      if (val)
        loaded.value = true;
    });
    const pane = vue.reactive({
      uid: instance.uid,
      slots,
      props,
      paneName,
      active,
      index: index$1,
      isClosable
    });
    vue.onMounted(() => {
      tabsRoot.registerPane(pane);
    });
    vue.onUnmounted(() => {
      tabsRoot.unregisterPane(pane.uid);
    });
    return (_ctx, _cache) => {
      return vue.unref(shouldBeRender) ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        id: `pane-${vue.unref(paneName)}`,
        class: vue.normalizeClass(vue.unref(ns).b()),
        role: "tabpanel",
        "aria-hidden": !vue.unref(active),
        "aria-labelledby": `tab-${vue.unref(paneName)}`
      }, [
        vue.renderSlot(_ctx.$slots, "default")
      ], 10, _hoisted_1)), [
        [vue.vShow, vue.unref(active)]
      ]) : vue.createCommentVNode("v-if", true);
    };
  }
});
var TabPane = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-pane.vue"]]);

exports["default"] = TabPane;
//# sourceMappingURL=tab-pane2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tabs.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tabs.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var index$3 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/constants.js");
var tabNav = __webpack_require__(/*! ./tab-nav.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tabs/src/tab-nav.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var event = __webpack_require__(/*! ../../../constants/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-ordered-children/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-ordered-children/index.js");
var index$2 = __webpack_require__(/*! ../../../hooks/use-deprecated/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-deprecated/index.js");
var aria = __webpack_require__(/*! ../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

const tabsProps = runtime.buildProps({
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  activeName: {
    type: [String, Number]
  },
  closable: Boolean,
  addable: Boolean,
  modelValue: {
    type: [String, Number]
  },
  editable: Boolean,
  tabPosition: {
    type: String,
    values: ["top", "right", "bottom", "left"],
    default: "top"
  },
  beforeLeave: {
    type: runtime.definePropType(Function),
    default: () => true
  },
  stretch: Boolean
});
const isPaneName = (value) => shared.isString(value) || types.isNumber(value);
const tabsEmits = {
  [event.UPDATE_MODEL_EVENT]: (name) => isPaneName(name),
  tabClick: (pane, ev) => ev instanceof Event,
  tabChange: (name) => isPaneName(name),
  edit: (paneName, action) => ["remove", "add"].includes(action),
  tabRemove: (name) => isPaneName(name),
  tabAdd: () => true
};
var Tabs = vue.defineComponent({
  name: "ElTabs",
  props: tabsProps,
  emits: tabsEmits,
  setup(props, {
    emit,
    slots,
    expose
  }) {
    var _a, _b;
    const ns = index.useNamespace("tabs");
    const {
      children: panes,
      addChild: registerPane,
      removeChild: unregisterPane
    } = index$1.useOrderedChildren(vue.getCurrentInstance(), "ElTabPane");
    const nav$ = vue.ref();
    const currentName = vue.ref((_b = (_a = props.modelValue) != null ? _a : props.activeName) != null ? _b : "0");
    const changeCurrentName = (value) => {
      currentName.value = value;
      emit(event.UPDATE_MODEL_EVENT, value);
      emit("tabChange", value);
    };
    const setCurrentName = async (value) => {
      var _a2, _b2, _c;
      if (currentName.value === value || types.isUndefined(value))
        return;
      try {
        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));
        if (canLeave !== false) {
          changeCurrentName(value);
          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);
        }
      } catch (e) {
      }
    };
    const handleTabClick = (tab, tabName, event) => {
      if (tab.props.disabled)
        return;
      setCurrentName(tabName);
      emit("tabClick", tab, event);
    };
    const handleTabRemove = (pane, ev) => {
      if (pane.props.disabled || types.isUndefined(pane.props.name))
        return;
      ev.stopPropagation();
      emit("edit", pane.props.name, "remove");
      emit("tabRemove", pane.props.name);
    };
    const handleTabAdd = () => {
      emit("edit", void 0, "add");
      emit("tabAdd");
    };
    index$2.useDeprecated({
      from: '"activeName"',
      replacement: '"model-value" or "v-model"',
      scope: "ElTabs",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#attributes",
      type: "Attribute"
    }, vue.computed(() => !!props.activeName));
    vue.watch(() => props.activeName, (modelValue) => setCurrentName(modelValue));
    vue.watch(() => props.modelValue, (modelValue) => setCurrentName(modelValue));
    vue.watch(currentName, async () => {
      var _a2;
      await vue.nextTick();
      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();
    });
    vue.provide(constants.tabsRootContextKey, {
      props,
      currentName,
      registerPane,
      unregisterPane
    });
    expose({
      currentName
    });
    return () => {
      const newButton = props.editable || props.addable ? vue.createVNode("span", {
        "class": ns.e("new-tab"),
        "tabindex": "0",
        "onClick": handleTabAdd,
        "onKeydown": (ev) => {
          if (ev.code === aria.EVENT_CODE.enter)
            handleTabAdd();
        }
      }, [vue.createVNode(index$3.ElIcon, {
        "class": ns.is("icon-plus")
      }, {
        default: () => [vue.createVNode(iconsVue.Plus, null, null)]
      })]) : null;
      const header = vue.createVNode("div", {
        "class": [ns.e("header"), ns.is(props.tabPosition)]
      }, [newButton, vue.createVNode(tabNav["default"], {
        "ref": nav$,
        "currentName": currentName.value,
        "editable": props.editable,
        "type": props.type,
        "panes": panes.value,
        "stretch": props.stretch,
        "onTabClick": handleTabClick,
        "onTabRemove": handleTabRemove
      }, null)]);
      const panels = vue.createVNode("div", {
        "class": ns.e("content")
      }, [vue.renderSlot(slots, "default")]);
      return vue.createVNode("div", {
        "class": [ns.b(), ns.m(props.tabPosition), {
          [ns.m("card")]: props.type === "card",
          [ns.m("border-card")]: props.type === "border-card"
        }]
      }, [...props.tabPosition !== "bottom" ? [header, panels] : [panels, header]]);
    };
  }
});

exports["default"] = Tabs;
exports.tabsEmits = tabsEmits;
exports.tabsProps = tabsProps;
//# sourceMappingURL=tabs.js.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-9a474c.entry.js.map