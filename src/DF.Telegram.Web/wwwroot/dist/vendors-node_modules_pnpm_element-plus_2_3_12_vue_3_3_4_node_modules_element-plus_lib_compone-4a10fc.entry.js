"use strict";
(self["webpackChunkDF_Telegram_VueApp"] = self["webpackChunkDF_Telegram_VueApp"] || []).push([["vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-4a10fc"],{

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tag$1 = __webpack_require__(/*! ./src/tag2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag2.js");
var tag = __webpack_require__(/*! ./src/tag.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTag = install.withInstall(tag$1["default"]);

exports.tagEmits = tag.tagEmits;
exports.tagProps = tag.tagProps;
exports.ElTag = ElTag;
exports["default"] = ElTag;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var size = __webpack_require__(/*! ../../../constants/size.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/size.js");

const tagProps = runtime.buildProps({
  type: {
    type: String,
    values: ["success", "info", "warning", "danger", ""],
    default: ""
  },
  closable: Boolean,
  disableTransitions: Boolean,
  hit: Boolean,
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: size.componentSizes,
    default: ""
  },
  effect: {
    type: String,
    values: ["dark", "light", "plain"],
    default: "light"
  },
  round: Boolean
});
const tagEmits = {
  close: (evt) => evt instanceof MouseEvent,
  click: (evt) => evt instanceof MouseEvent
};

exports.tagEmits = tagEmits;
exports.tagProps = tagProps;
//# sourceMappingURL=tag.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag2.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag2.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var tag = __webpack_require__(/*! ./tag.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tag/src/tag.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const __default__ = vue.defineComponent({
  name: "ElTag"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: tag.tagProps,
  emits: tag.tagEmits,
  setup(__props, { emit }) {
    const props = __props;
    const tagSize = useFormCommonProps.useFormSize();
    const ns = index.useNamespace("tag");
    const containerKls = vue.computed(() => {
      const { type, hit, effect, closable, round } = props;
      return [
        ns.b(),
        ns.is("closable", closable),
        ns.m(type),
        ns.m(tagSize.value),
        ns.m(effect),
        ns.is("hit", hit),
        ns.is("round", round)
      ];
    });
    const handleClose = (event) => {
      emit("close", event);
    };
    const handleClick = (event) => {
      emit("click", event);
    };
    return (_ctx, _cache) => {
      return _ctx.disableTransitions ? (vue.openBlock(), vue.createElementBlock("span", {
        key: 0,
        class: vue.normalizeClass(vue.unref(containerKls)),
        style: vue.normalizeStyle({ backgroundColor: _ctx.color }),
        onClick: handleClick
      }, [
        vue.createElementVNode("span", {
          class: vue.normalizeClass(vue.unref(ns).e("content"))
        }, [
          vue.renderSlot(_ctx.$slots, "default")
        ], 2),
        _ctx.closable ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
          key: 0,
          class: vue.normalizeClass(vue.unref(ns).e("close")),
          onClick: vue.withModifiers(handleClose, ["stop"])
        }, {
          default: vue.withCtx(() => [
            vue.createVNode(vue.unref(iconsVue.Close))
          ]),
          _: 1
        }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true)
      ], 6)) : (vue.openBlock(), vue.createBlock(vue.Transition, {
        key: 1,
        name: `${vue.unref(ns).namespace.value}-zoom-in-center`,
        appear: ""
      }, {
        default: vue.withCtx(() => [
          vue.createElementVNode("span", {
            class: vue.normalizeClass(vue.unref(containerKls)),
            style: vue.normalizeStyle({ backgroundColor: _ctx.color }),
            onClick: handleClick
          }, [
            vue.createElementVNode("span", {
              class: vue.normalizeClass(vue.unref(ns).e("content"))
            }, [
              vue.renderSlot(_ctx.$slots, "default")
            ], 2),
            _ctx.closable ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
              key: 0,
              class: vue.normalizeClass(vue.unref(ns).e("close")),
              onClick: vue.withModifiers(handleClose, ["stop"])
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(vue.unref(iconsVue.Close))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true)
          ], 6)
        ]),
        _: 3
      }, 8, ["name"]));
    };
  }
});
var Tag = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue"]]);

exports["default"] = Tag;
//# sourceMappingURL=tag2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/index.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var text$1 = __webpack_require__(/*! ./src/text2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text2.js");
var text = __webpack_require__(/*! ./src/text.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElText = install.withInstall(text$1["default"]);

exports.textProps = text.textProps;
exports.ElText = ElText;
exports["default"] = ElText;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var size = __webpack_require__(/*! ../../../constants/size.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/size.js");

const textProps = runtime.buildProps({
  type: {
    type: String,
    values: ["primary", "success", "info", "warning", "danger", ""],
    default: ""
  },
  size: {
    type: String,
    values: size.componentSizes,
    default: ""
  },
  truncated: {
    type: Boolean
  },
  tag: {
    type: String,
    default: "span"
  }
});

exports.textProps = textProps;
//# sourceMappingURL=text.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text2.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text2.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var text = __webpack_require__(/*! ./text.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/text/src/text.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const __default__ = vue.defineComponent({
  name: "ElText"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: text.textProps,
  setup(__props) {
    const props = __props;
    const textSize = useFormCommonProps.useFormSize();
    const ns = index.useNamespace("text");
    const textKls = vue.computed(() => [
      ns.b(),
      ns.m(props.type),
      ns.m(textSize.value),
      ns.is("truncated", props.truncated)
    ]);
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.tag), {
        class: vue.normalizeClass(vue.unref(textKls))
      }, {
        default: vue.withCtx(() => [
          vue.renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"]);
    };
  }
});
var Text = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/text/src/text.vue"]]);

exports["default"] = Text;
//# sourceMappingURL=text2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var timePicker = __webpack_require__(/*! ./src/time-picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker.js");
var picker = __webpack_require__(/*! ./src/common/picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/picker.js");
var panelTimePick = __webpack_require__(/*! ./src/time-picker-com/panel-time-pick.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-pick.js");
var utils = __webpack_require__(/*! ./src/utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/constants.js");
var props = __webpack_require__(/*! ./src/common/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/props.js");

const _TimePicker = timePicker["default"];
_TimePicker.install = (app) => {
  app.component(_TimePicker.name, _TimePicker);
};
const ElTimePicker = _TimePicker;

exports.CommonPicker = picker["default"];
exports.TimePickPanel = panelTimePick["default"];
exports.buildTimeList = utils.buildTimeList;
exports.dateEquals = utils.dateEquals;
exports.extractDateFormat = utils.extractDateFormat;
exports.extractTimeFormat = utils.extractTimeFormat;
exports.formatter = utils.formatter;
exports.makeList = utils.makeList;
exports.parseDate = utils.parseDate;
exports.rangeArr = utils.rangeArr;
exports.valueEquals = utils.valueEquals;
exports.DEFAULT_FORMATS_DATE = constants.DEFAULT_FORMATS_DATE;
exports.DEFAULT_FORMATS_DATEPICKER = constants.DEFAULT_FORMATS_DATEPICKER;
exports.DEFAULT_FORMATS_TIME = constants.DEFAULT_FORMATS_TIME;
exports.timeUnits = constants.timeUnits;
exports.timePickerDefaultProps = props.timePickerDefaultProps;
exports.ElTimePicker = ElTimePicker;
exports["default"] = _TimePicker;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/picker.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/picker.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var index$3 = __webpack_require__(/*! ../../../input/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/input/index.js");
var index$4 = __webpack_require__(/*! ../../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var index$2 = __webpack_require__(/*! ../../../tooltip/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js");
var props = __webpack_require__(/*! ./props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/props.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormItem = __webpack_require__(/*! ../../../form/src/hooks/use-form-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-item.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");
var useFormCommonProps = __webpack_require__(/*! ../../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

const _hoisted_1 = ["id", "name", "placeholder", "value", "disabled", "readonly"];
const _hoisted_2 = ["id", "name", "placeholder", "value", "disabled", "readonly"];
const __default__ = vue.defineComponent({
  name: "Picker"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: props.timePickerDefaultProps,
  emits: [
    "update:modelValue",
    "change",
    "focus",
    "blur",
    "calendar-change",
    "panel-change",
    "visible-change",
    "keydown"
  ],
  setup(__props, { expose, emit }) {
    const props = __props;
    const attrs = vue.useAttrs();
    const { lang } = index.useLocale();
    const nsDate = index$1.useNamespace("date");
    const nsInput = index$1.useNamespace("input");
    const nsRange = index$1.useNamespace("range");
    const { form, formItem } = useFormItem.useFormItem();
    const elPopperOptions = vue.inject("ElPopperOptions", {});
    const refPopper = vue.ref();
    const inputRef = vue.ref();
    const pickerVisible = vue.ref(false);
    const pickerActualVisible = vue.ref(false);
    const valueOnOpen = vue.ref(null);
    let hasJustTabExitedInput = false;
    let ignoreFocusEvent = false;
    const rangeInputKls = vue.computed(() => [
      nsDate.b("editor"),
      nsDate.bm("editor", props.type),
      nsInput.e("wrapper"),
      nsDate.is("disabled", pickerDisabled.value),
      nsDate.is("active", pickerVisible.value),
      nsRange.b("editor"),
      pickerSize ? nsRange.bm("editor", pickerSize.value) : "",
      attrs.class
    ]);
    const clearIconKls = vue.computed(() => [
      nsInput.e("icon"),
      nsRange.e("close-icon"),
      !showClose.value ? nsRange.e("close-icon--hidden") : ""
    ]);
    vue.watch(pickerVisible, (val) => {
      if (!val) {
        userInput.value = null;
        vue.nextTick(() => {
          emitChange(props.modelValue);
        });
      } else {
        vue.nextTick(() => {
          if (val) {
            valueOnOpen.value = props.modelValue;
          }
        });
      }
    });
    const emitChange = (val, isClear) => {
      if (isClear || !utils.valueEquals(val, valueOnOpen.value)) {
        emit("change", val);
        props.validateEvent && (formItem == null ? void 0 : formItem.validate("change").catch((err) => error.debugWarn(err)));
      }
    };
    const emitInput = (input) => {
      if (!utils.valueEquals(props.modelValue, input)) {
        let formatted;
        if (shared.isArray(input)) {
          formatted = input.map((item) => utils.formatter(item, props.valueFormat, lang.value));
        } else if (input) {
          formatted = utils.formatter(input, props.valueFormat, lang.value);
        }
        emit("update:modelValue", input ? formatted : input, lang.value);
      }
    };
    const emitKeydown = (e) => {
      emit("keydown", e);
    };
    const refInput = vue.computed(() => {
      if (inputRef.value) {
        const _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;
        return Array.from(_r.querySelectorAll("input"));
      }
      return [];
    });
    const setSelectionRange = (start, end, pos) => {
      const _inputs = refInput.value;
      if (!_inputs.length)
        return;
      if (!pos || pos === "min") {
        _inputs[0].setSelectionRange(start, end);
        _inputs[0].focus();
      } else if (pos === "max") {
        _inputs[1].setSelectionRange(start, end);
        _inputs[1].focus();
      }
    };
    const focusOnInputBox = () => {
      focus(true, true);
      vue.nextTick(() => {
        ignoreFocusEvent = false;
      });
    };
    const onPick = (date = "", visible = false) => {
      if (!visible) {
        ignoreFocusEvent = true;
      }
      pickerVisible.value = visible;
      let result;
      if (shared.isArray(date)) {
        result = date.map((_) => _.toDate());
      } else {
        result = date ? date.toDate() : date;
      }
      userInput.value = null;
      emitInput(result);
    };
    const onBeforeShow = () => {
      pickerActualVisible.value = true;
    };
    const onShow = () => {
      emit("visible-change", true);
    };
    const onKeydownPopperContent = (event) => {
      if ((event == null ? void 0 : event.key) === aria.EVENT_CODE.esc) {
        focus(true, true);
      }
    };
    const onHide = () => {
      pickerActualVisible.value = false;
      pickerVisible.value = false;
      ignoreFocusEvent = false;
      emit("visible-change", false);
    };
    const handleOpen = () => {
      pickerVisible.value = true;
    };
    const handleClose = () => {
      pickerVisible.value = false;
    };
    const focus = (focusStartInput = true, isIgnoreFocusEvent = false) => {
      ignoreFocusEvent = isIgnoreFocusEvent;
      const [leftInput, rightInput] = vue.unref(refInput);
      let input = leftInput;
      if (!focusStartInput && isRangeInput.value) {
        input = rightInput;
      }
      if (input) {
        input.focus();
      }
    };
    const handleFocusInput = (e) => {
      if (props.readonly || pickerDisabled.value || pickerVisible.value || ignoreFocusEvent) {
        return;
      }
      pickerVisible.value = true;
      emit("focus", e);
    };
    let currentHandleBlurDeferCallback = void 0;
    const handleBlurInput = (e) => {
      const handleBlurDefer = async () => {
        setTimeout(() => {
          var _a;
          if (currentHandleBlurDeferCallback === handleBlurDefer) {
            if (!(((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent()) && !hasJustTabExitedInput) && refInput.value.filter((input) => {
              return input.contains(document.activeElement);
            }).length === 0) {
              handleChange();
              pickerVisible.value = false;
              emit("blur", e);
              props.validateEvent && (formItem == null ? void 0 : formItem.validate("blur").catch((err) => error.debugWarn(err)));
            }
            hasJustTabExitedInput = false;
          }
        }, 0);
      };
      currentHandleBlurDeferCallback = handleBlurDefer;
      handleBlurDefer();
    };
    const pickerDisabled = vue.computed(() => {
      return props.disabled || (form == null ? void 0 : form.disabled);
    });
    const parsedValue = vue.computed(() => {
      let dayOrDays;
      if (valueIsEmpty.value) {
        if (pickerOptions.value.getDefaultValue) {
          dayOrDays = pickerOptions.value.getDefaultValue();
        }
      } else {
        if (shared.isArray(props.modelValue)) {
          dayOrDays = props.modelValue.map((d) => utils.parseDate(d, props.valueFormat, lang.value));
        } else {
          dayOrDays = utils.parseDate(props.modelValue, props.valueFormat, lang.value);
        }
      }
      if (pickerOptions.value.getRangeAvailableTime) {
        const availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);
        if (!lodashUnified.isEqual(availableResult, dayOrDays)) {
          dayOrDays = availableResult;
          emitInput(shared.isArray(dayOrDays) ? dayOrDays.map((_) => _.toDate()) : dayOrDays.toDate());
        }
      }
      if (shared.isArray(dayOrDays) && dayOrDays.some((day) => !day)) {
        dayOrDays = [];
      }
      return dayOrDays;
    });
    const displayValue = vue.computed(() => {
      if (!pickerOptions.value.panelReady)
        return "";
      const formattedValue = formatDayjsToString(parsedValue.value);
      if (shared.isArray(userInput.value)) {
        return [
          userInput.value[0] || formattedValue && formattedValue[0] || "",
          userInput.value[1] || formattedValue && formattedValue[1] || ""
        ];
      } else if (userInput.value !== null) {
        return userInput.value;
      }
      if (!isTimePicker.value && valueIsEmpty.value)
        return "";
      if (!pickerVisible.value && valueIsEmpty.value)
        return "";
      if (formattedValue) {
        return isDatesPicker.value ? formattedValue.join(", ") : formattedValue;
      }
      return "";
    });
    const isTimeLikePicker = vue.computed(() => props.type.includes("time"));
    const isTimePicker = vue.computed(() => props.type.startsWith("time"));
    const isDatesPicker = vue.computed(() => props.type === "dates");
    const triggerIcon = vue.computed(() => props.prefixIcon || (isTimeLikePicker.value ? iconsVue.Clock : iconsVue.Calendar));
    const showClose = vue.ref(false);
    const onClearIconClick = (event) => {
      if (props.readonly || pickerDisabled.value)
        return;
      if (showClose.value) {
        event.stopPropagation();
        focusOnInputBox();
        emitInput(null);
        emitChange(null, true);
        showClose.value = false;
        pickerVisible.value = false;
        pickerOptions.value.handleClear && pickerOptions.value.handleClear();
      }
    };
    const valueIsEmpty = vue.computed(() => {
      const { modelValue } = props;
      return !modelValue || shared.isArray(modelValue) && !modelValue.filter(Boolean).length;
    });
    const onMouseDownInput = async (event) => {
      var _a;
      if (props.readonly || pickerDisabled.value)
        return;
      if (((_a = event.target) == null ? void 0 : _a.tagName) !== "INPUT" || refInput.value.includes(document.activeElement)) {
        pickerVisible.value = true;
      }
    };
    const onMouseEnter = () => {
      if (props.readonly || pickerDisabled.value)
        return;
      if (!valueIsEmpty.value && props.clearable) {
        showClose.value = true;
      }
    };
    const onMouseLeave = () => {
      showClose.value = false;
    };
    const onTouchStartInput = (event) => {
      var _a;
      if (props.readonly || pickerDisabled.value)
        return;
      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== "INPUT" || refInput.value.includes(document.activeElement)) {
        pickerVisible.value = true;
      }
    };
    const isRangeInput = vue.computed(() => {
      return props.type.includes("range");
    });
    const pickerSize = useFormCommonProps.useFormSize();
    const popperEl = vue.computed(() => {
      var _a, _b;
      return (_b = (_a = vue.unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;
    });
    const actualInputRef = vue.computed(() => {
      var _a;
      if (vue.unref(isRangeInput)) {
        return vue.unref(inputRef);
      }
      return (_a = vue.unref(inputRef)) == null ? void 0 : _a.$el;
    });
    core.onClickOutside(actualInputRef, (e) => {
      const unrefedPopperEl = vue.unref(popperEl);
      const inputEl = vue.unref(actualInputRef);
      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl))
        return;
      pickerVisible.value = false;
    });
    const userInput = vue.ref(null);
    const handleChange = () => {
      if (userInput.value) {
        const value = parseUserInputToDayjs(displayValue.value);
        if (value) {
          if (isValidValue(value)) {
            emitInput(shared.isArray(value) ? value.map((_) => _.toDate()) : value.toDate());
            userInput.value = null;
          }
        }
      }
      if (userInput.value === "") {
        emitInput(null);
        emitChange(null);
        userInput.value = null;
      }
    };
    const parseUserInputToDayjs = (value) => {
      if (!value)
        return null;
      return pickerOptions.value.parseUserInput(value);
    };
    const formatDayjsToString = (value) => {
      if (!value)
        return null;
      return pickerOptions.value.formatToString(value);
    };
    const isValidValue = (value) => {
      return pickerOptions.value.isValidValue(value);
    };
    const handleKeydownInput = async (event) => {
      if (props.readonly || pickerDisabled.value)
        return;
      const { code } = event;
      emitKeydown(event);
      if (code === aria.EVENT_CODE.esc) {
        if (pickerVisible.value === true) {
          pickerVisible.value = false;
          event.preventDefault();
          event.stopPropagation();
        }
        return;
      }
      if (code === aria.EVENT_CODE.down) {
        if (pickerOptions.value.handleFocusPicker) {
          event.preventDefault();
          event.stopPropagation();
        }
        if (pickerVisible.value === false) {
          pickerVisible.value = true;
          await vue.nextTick();
        }
        if (pickerOptions.value.handleFocusPicker) {
          pickerOptions.value.handleFocusPicker();
          return;
        }
      }
      if (code === aria.EVENT_CODE.tab) {
        hasJustTabExitedInput = true;
        return;
      }
      if (code === aria.EVENT_CODE.enter || code === aria.EVENT_CODE.numpadEnter) {
        if (userInput.value === null || userInput.value === "" || isValidValue(parseUserInputToDayjs(displayValue.value))) {
          handleChange();
          pickerVisible.value = false;
        }
        event.stopPropagation();
        return;
      }
      if (userInput.value) {
        event.stopPropagation();
        return;
      }
      if (pickerOptions.value.handleKeydownInput) {
        pickerOptions.value.handleKeydownInput(event);
      }
    };
    const onUserInput = (e) => {
      userInput.value = e;
      if (!pickerVisible.value) {
        pickerVisible.value = true;
      }
    };
    const handleStartInput = (event) => {
      const target = event.target;
      if (userInput.value) {
        userInput.value = [target.value, userInput.value[1]];
      } else {
        userInput.value = [target.value, null];
      }
    };
    const handleEndInput = (event) => {
      const target = event.target;
      if (userInput.value) {
        userInput.value = [userInput.value[0], target.value];
      } else {
        userInput.value = [null, target.value];
      }
    };
    const handleStartChange = () => {
      var _a;
      const values = userInput.value;
      const value = parseUserInputToDayjs(values && values[0]);
      const parsedVal = vue.unref(parsedValue);
      if (value && value.isValid()) {
        userInput.value = [
          formatDayjsToString(value),
          ((_a = displayValue.value) == null ? void 0 : _a[1]) || null
        ];
        const newValue = [value, parsedVal && (parsedVal[1] || null)];
        if (isValidValue(newValue)) {
          emitInput(newValue);
          userInput.value = null;
        }
      }
    };
    const handleEndChange = () => {
      var _a;
      const values = vue.unref(userInput);
      const value = parseUserInputToDayjs(values && values[1]);
      const parsedVal = vue.unref(parsedValue);
      if (value && value.isValid()) {
        userInput.value = [
          ((_a = vue.unref(displayValue)) == null ? void 0 : _a[0]) || null,
          formatDayjsToString(value)
        ];
        const newValue = [parsedVal && parsedVal[0], value];
        if (isValidValue(newValue)) {
          emitInput(newValue);
          userInput.value = null;
        }
      }
    };
    const pickerOptions = vue.ref({});
    const onSetPickerOption = (e) => {
      pickerOptions.value[e[0]] = e[1];
      pickerOptions.value.panelReady = true;
    };
    const onCalendarChange = (e) => {
      emit("calendar-change", e);
    };
    const onPanelChange = (value, mode, view) => {
      emit("panel-change", value, mode, view);
    };
    vue.provide("EP_PICKER_BASE", {
      props
    });
    expose({
      focus,
      handleFocusInput,
      handleBlurInput,
      handleOpen,
      handleClose,
      onPick
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(index$2.ElTooltip), vue.mergeProps({
        ref_key: "refPopper",
        ref: refPopper,
        visible: pickerVisible.value,
        effect: "light",
        pure: "",
        trigger: "click"
      }, _ctx.$attrs, {
        role: "dialog",
        teleported: "",
        transition: `${vue.unref(nsDate).namespace.value}-zoom-in-top`,
        "popper-class": [`${vue.unref(nsDate).namespace.value}-picker__popper`, _ctx.popperClass],
        "popper-options": vue.unref(elPopperOptions),
        "fallback-placements": ["bottom", "top", "right", "left"],
        "gpu-acceleration": false,
        "stop-popper-mouse-event": false,
        "hide-after": 0,
        persistent: "",
        onBeforeShow,
        onShow,
        onHide
      }), {
        default: vue.withCtx(() => [
          !vue.unref(isRangeInput) ? (vue.openBlock(), vue.createBlock(vue.unref(index$3.ElInput), {
            key: 0,
            id: _ctx.id,
            ref_key: "inputRef",
            ref: inputRef,
            "container-role": "combobox",
            "model-value": vue.unref(displayValue),
            name: _ctx.name,
            size: vue.unref(pickerSize),
            disabled: vue.unref(pickerDisabled),
            placeholder: _ctx.placeholder,
            class: vue.normalizeClass([vue.unref(nsDate).b("editor"), vue.unref(nsDate).bm("editor", _ctx.type), _ctx.$attrs.class]),
            style: vue.normalizeStyle(_ctx.$attrs.style),
            readonly: !_ctx.editable || _ctx.readonly || vue.unref(isDatesPicker) || _ctx.type === "week",
            label: _ctx.label,
            tabindex: _ctx.tabindex,
            "validate-event": false,
            onInput: onUserInput,
            onFocus: handleFocusInput,
            onBlur: handleBlurInput,
            onKeydown: handleKeydownInput,
            onChange: handleChange,
            onMousedown: onMouseDownInput,
            onMouseenter: onMouseEnter,
            onMouseleave: onMouseLeave,
            onTouchstart: onTouchStartInput,
            onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
            }, ["stop"]))
          }, {
            prefix: vue.withCtx(() => [
              vue.unref(triggerIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {
                key: 0,
                class: vue.normalizeClass(vue.unref(nsInput).e("icon")),
                onMousedown: vue.withModifiers(onMouseDownInput, ["prevent"]),
                onTouchstart: onTouchStartInput
              }, {
                default: vue.withCtx(() => [
                  (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(triggerIcon))))
                ]),
                _: 1
              }, 8, ["class", "onMousedown"])) : vue.createCommentVNode("v-if", true)
            ]),
            suffix: vue.withCtx(() => [
              showClose.value && _ctx.clearIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {
                key: 0,
                class: vue.normalizeClass(`${vue.unref(nsInput).e("icon")} clear-icon`),
                onClick: vue.withModifiers(onClearIconClick, ["stop"])
              }, {
                default: vue.withCtx(() => [
                  (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.clearIcon)))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true)
            ]),
            _: 1
          }, 8, ["id", "model-value", "name", "size", "disabled", "placeholder", "class", "style", "readonly", "label", "tabindex", "onKeydown"])) : (vue.openBlock(), vue.createElementBlock("div", {
            key: 1,
            ref_key: "inputRef",
            ref: inputRef,
            class: vue.normalizeClass(vue.unref(rangeInputKls)),
            style: vue.normalizeStyle(_ctx.$attrs.style),
            onClick: handleFocusInput,
            onMouseenter: onMouseEnter,
            onMouseleave: onMouseLeave,
            onTouchstart: onTouchStartInput,
            onKeydown: handleKeydownInput
          }, [
            vue.unref(triggerIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {
              key: 0,
              class: vue.normalizeClass([vue.unref(nsInput).e("icon"), vue.unref(nsRange).e("icon")]),
              onMousedown: vue.withModifiers(onMouseDownInput, ["prevent"]),
              onTouchstart: onTouchStartInput
            }, {
              default: vue.withCtx(() => [
                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(triggerIcon))))
              ]),
              _: 1
            }, 8, ["class", "onMousedown"])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("input", {
              id: _ctx.id && _ctx.id[0],
              autocomplete: "off",
              name: _ctx.name && _ctx.name[0],
              placeholder: _ctx.startPlaceholder,
              value: vue.unref(displayValue) && vue.unref(displayValue)[0],
              disabled: vue.unref(pickerDisabled),
              readonly: !_ctx.editable || _ctx.readonly,
              class: vue.normalizeClass(vue.unref(nsRange).b("input")),
              onMousedown: onMouseDownInput,
              onInput: handleStartInput,
              onChange: handleStartChange,
              onFocus: handleFocusInput,
              onBlur: handleBlurInput
            }, null, 42, _hoisted_1),
            vue.renderSlot(_ctx.$slots, "range-separator", {}, () => [
              vue.createElementVNode("span", {
                class: vue.normalizeClass(vue.unref(nsRange).b("separator"))
              }, vue.toDisplayString(_ctx.rangeSeparator), 3)
            ]),
            vue.createElementVNode("input", {
              id: _ctx.id && _ctx.id[1],
              autocomplete: "off",
              name: _ctx.name && _ctx.name[1],
              placeholder: _ctx.endPlaceholder,
              value: vue.unref(displayValue) && vue.unref(displayValue)[1],
              disabled: vue.unref(pickerDisabled),
              readonly: !_ctx.editable || _ctx.readonly,
              class: vue.normalizeClass(vue.unref(nsRange).b("input")),
              onMousedown: onMouseDownInput,
              onFocus: handleFocusInput,
              onBlur: handleBlurInput,
              onInput: handleEndInput,
              onChange: handleEndChange
            }, null, 42, _hoisted_2),
            _ctx.clearIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {
              key: 1,
              class: vue.normalizeClass(vue.unref(clearIconKls)),
              onClick: onClearIconClick
            }, {
              default: vue.withCtx(() => [
                (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.clearIcon)))
              ]),
              _: 1
            }, 8, ["class"])) : vue.createCommentVNode("v-if", true)
          ], 38))
        ]),
        content: vue.withCtx(() => [
          vue.renderSlot(_ctx.$slots, "default", {
            visible: pickerVisible.value,
            actualVisible: pickerActualVisible.value,
            parsedValue: vue.unref(parsedValue),
            format: _ctx.format,
            unlinkPanels: _ctx.unlinkPanels,
            type: _ctx.type,
            defaultValue: _ctx.defaultValue,
            onPick,
            onSelectRange: setSelectionRange,
            onSetPickerOption,
            onCalendarChange,
            onPanelChange,
            onKeydown: onKeydownPopperContent,
            onMousedown: _cache[1] || (_cache[1] = vue.withModifiers(() => {
            }, ["stop"]))
          })
        ]),
        _: 3
      }, 16, ["visible", "transition", "popper-class", "popper-options"]);
    };
  }
});
var CommonPicker = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue"]]);

exports["default"] = CommonPicker;
//# sourceMappingURL=picker.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/props.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/props.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var shared = __webpack_require__(/*! ../props/shared.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js");
var runtime = __webpack_require__(/*! ../../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var index = __webpack_require__(/*! ../../../../hooks/use-size/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-size/index.js");

const timePickerDefaultProps = runtime.buildProps({
  id: {
    type: runtime.definePropType([Array, String])
  },
  name: {
    type: runtime.definePropType([Array, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  format: String,
  valueFormat: String,
  type: {
    type: String,
    default: ""
  },
  clearable: {
    type: Boolean,
    default: true
  },
  clearIcon: {
    type: runtime.definePropType([String, Object]),
    default: iconsVue.CircleClose
  },
  editable: {
    type: Boolean,
    default: true
  },
  prefixIcon: {
    type: runtime.definePropType([String, Object]),
    default: ""
  },
  size: index.useSizeProp,
  readonly: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  placeholder: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: runtime.definePropType(Object),
    default: () => ({})
  },
  modelValue: {
    type: runtime.definePropType([Date, Array, String, Number]),
    default: ""
  },
  rangeSeparator: {
    type: String,
    default: "-"
  },
  startPlaceholder: String,
  endPlaceholder: String,
  defaultValue: {
    type: runtime.definePropType([Date, Array])
  },
  defaultTime: {
    type: runtime.definePropType([Date, Array])
  },
  isRange: {
    type: Boolean,
    default: false
  },
  ...shared.disabledTimeListsProps,
  disabledDate: {
    type: Function
  },
  cellClassName: {
    type: Function
  },
  shortcuts: {
    type: Array,
    default: () => []
  },
  arrowControl: {
    type: Boolean,
    default: false
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: runtime.definePropType([String, Number]),
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  unlinkPanels: Boolean
});

exports.timePickerDefaultProps = timePickerDefaultProps;
//# sourceMappingURL=props.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-panel.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-panel.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const useTimePanel = ({
  getAvailableHours,
  getAvailableMinutes,
  getAvailableSeconds
}) => {
  const getAvailableTime = (date, role, first, compareDate) => {
    const availableTimeGetters = {
      hour: getAvailableHours,
      minute: getAvailableMinutes,
      second: getAvailableSeconds
    };
    let result = date;
    ["hour", "minute", "second"].forEach((type) => {
      if (availableTimeGetters[type]) {
        let availableTimeSlots;
        const method = availableTimeGetters[type];
        switch (type) {
          case "minute": {
            availableTimeSlots = method(result.hour(), role, compareDate);
            break;
          }
          case "second": {
            availableTimeSlots = method(result.hour(), result.minute(), role, compareDate);
            break;
          }
          default: {
            availableTimeSlots = method(role, compareDate);
            break;
          }
        }
        if ((availableTimeSlots == null ? void 0 : availableTimeSlots.length) && !availableTimeSlots.includes(result[type]())) {
          const pos = first ? 0 : availableTimeSlots.length - 1;
          result = result[type](availableTimeSlots[pos]);
        }
      }
    });
    return result;
  };
  const timePickerOptions = {};
  const onSetOption = ([key, val]) => {
    timePickerOptions[key] = val;
  };
  return {
    timePickerOptions,
    getAvailableTime,
    onSetOption
  };
};

exports.useTimePanel = useTimePanel;
//# sourceMappingURL=use-time-panel.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-picker.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-picker.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js");

const makeAvailableArr = (disabledList) => {
  const trueOrNumber = (isDisabled, index) => isDisabled || index;
  const getNumber = (predicate) => predicate !== true;
  return disabledList.map(trueOrNumber).filter(getNumber);
};
const getTimeLists = (disabledHours, disabledMinutes, disabledSeconds) => {
  const getHoursList = (role, compare) => {
    return utils.makeList(24, disabledHours && (() => disabledHours == null ? void 0 : disabledHours(role, compare)));
  };
  const getMinutesList = (hour, role, compare) => {
    return utils.makeList(60, disabledMinutes && (() => disabledMinutes == null ? void 0 : disabledMinutes(hour, role, compare)));
  };
  const getSecondsList = (hour, minute, role, compare) => {
    return utils.makeList(60, disabledSeconds && (() => disabledSeconds == null ? void 0 : disabledSeconds(hour, minute, role, compare)));
  };
  return {
    getHoursList,
    getMinutesList,
    getSecondsList
  };
};
const buildAvailableTimeSlotGetter = (disabledHours, disabledMinutes, disabledSeconds) => {
  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(disabledHours, disabledMinutes, disabledSeconds);
  const getAvailableHours = (role, compare) => {
    return makeAvailableArr(getHoursList(role, compare));
  };
  const getAvailableMinutes = (hour, role, compare) => {
    return makeAvailableArr(getMinutesList(hour, role, compare));
  };
  const getAvailableSeconds = (hour, minute, role, compare) => {
    return makeAvailableArr(getSecondsList(hour, minute, role, compare));
  };
  return {
    getAvailableHours,
    getAvailableMinutes,
    getAvailableSeconds
  };
};
const useOldValue = (props) => {
  const oldValue = vue.ref(props.parsedValue);
  vue.watch(() => props.visible, (val) => {
    if (!val) {
      oldValue.value = props.parsedValue;
    }
  });
  return oldValue;
};

exports.buildAvailableTimeSlotGetter = buildAvailableTimeSlotGetter;
exports.getTimeLists = getTimeLists;
exports.useOldValue = useOldValue;
//# sourceMappingURL=use-time-picker.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/constants.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/constants.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const timeUnits = ["hours", "minutes", "seconds"];
const DEFAULT_FORMATS_TIME = "HH:mm:ss";
const DEFAULT_FORMATS_DATE = "YYYY-MM-DD";
const DEFAULT_FORMATS_DATEPICKER = {
  date: DEFAULT_FORMATS_DATE,
  dates: DEFAULT_FORMATS_DATE,
  week: "gggg[w]ww",
  year: "YYYY",
  month: "YYYY-MM",
  datetime: `${DEFAULT_FORMATS_DATE} ${DEFAULT_FORMATS_TIME}`,
  monthrange: "YYYY-MM",
  daterange: DEFAULT_FORMATS_DATE,
  datetimerange: `${DEFAULT_FORMATS_DATE} ${DEFAULT_FORMATS_TIME}`
};

exports.DEFAULT_FORMATS_DATE = DEFAULT_FORMATS_DATE;
exports.DEFAULT_FORMATS_DATEPICKER = DEFAULT_FORMATS_DATEPICKER;
exports.DEFAULT_FORMATS_TIME = DEFAULT_FORMATS_TIME;
exports.timeUnits = timeUnits;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/basic-time-spinner.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/basic-time-spinner.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! ./shared.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js");
var runtime = __webpack_require__(/*! ../../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const basicTimeSpinnerProps = runtime.buildProps({
  role: {
    type: String,
    required: true
  },
  spinnerDate: {
    type: runtime.definePropType(Object),
    required: true
  },
  showSeconds: {
    type: Boolean,
    default: true
  },
  arrowControl: Boolean,
  amPmMode: {
    type: runtime.definePropType(String),
    default: ""
  },
  ...shared.disabledTimeListsProps
});

exports.basicTimeSpinnerProps = basicTimeSpinnerProps;
//# sourceMappingURL=basic-time-spinner.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-picker.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-picker.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! ./shared.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js");
var runtime = __webpack_require__(/*! ../../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const panelTimePickerProps = runtime.buildProps({
  ...shared.timePanelSharedProps,
  datetimeRole: String,
  parsedValue: {
    type: runtime.definePropType(Object)
  }
});

exports.panelTimePickerProps = panelTimePickerProps;
//# sourceMappingURL=panel-time-picker.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-range.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-range.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! ./shared.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js");
var runtime = __webpack_require__(/*! ../../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const panelTimeRangeProps = runtime.buildProps({
  ...shared.timePanelSharedProps,
  parsedValue: {
    type: runtime.definePropType(Array)
  }
});

exports.panelTimeRangeProps = panelTimeRangeProps;
//# sourceMappingURL=panel-time-range.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/shared.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const disabledTimeListsProps = runtime.buildProps({
  disabledHours: {
    type: runtime.definePropType(Function)
  },
  disabledMinutes: {
    type: runtime.definePropType(Function)
  },
  disabledSeconds: {
    type: runtime.definePropType(Function)
  }
});
const timePanelSharedProps = runtime.buildProps({
  visible: Boolean,
  actualVisible: {
    type: Boolean,
    default: void 0
  },
  format: {
    type: String,
    default: ""
  }
});

exports.disabledTimeListsProps = disabledTimeListsProps;
exports.timePanelSharedProps = timePanelSharedProps;
//# sourceMappingURL=shared.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/basic-time-spinner.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/basic-time-spinner.js ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../directives/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/index.js");
var index$1 = __webpack_require__(/*! ../../../scrollbar/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/scrollbar/index.js");
var index$2 = __webpack_require__(/*! ../../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/constants.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js");
var basicTimeSpinner = __webpack_require__(/*! ../props/basic-time-spinner.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/basic-time-spinner.js");
var useTimePicker = __webpack_require__(/*! ../composables/use-time-picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-picker.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");
var index$3 = __webpack_require__(/*! ../../../../directives/repeat-click/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/directives/repeat-click/index.js");

const _hoisted_1 = ["onClick"];
const _hoisted_2 = ["onMouseenter"];
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  __name: "basic-time-spinner",
  props: basicTimeSpinner.basicTimeSpinnerProps,
  emits: ["change", "select-range", "set-option"],
  setup(__props, { emit }) {
    const props = __props;
    const ns = index.useNamespace("time");
    const { getHoursList, getMinutesList, getSecondsList } = useTimePicker.getTimeLists(props.disabledHours, props.disabledMinutes, props.disabledSeconds);
    let isScrolling = false;
    const currentScrollbar = vue.ref();
    const listHoursRef = vue.ref();
    const listMinutesRef = vue.ref();
    const listSecondsRef = vue.ref();
    const listRefsMap = {
      hours: listHoursRef,
      minutes: listMinutesRef,
      seconds: listSecondsRef
    };
    const spinnerItems = vue.computed(() => {
      return props.showSeconds ? constants.timeUnits : constants.timeUnits.slice(0, 2);
    });
    const timePartials = vue.computed(() => {
      const { spinnerDate } = props;
      const hours = spinnerDate.hour();
      const minutes = spinnerDate.minute();
      const seconds = spinnerDate.second();
      return { hours, minutes, seconds };
    });
    const timeList = vue.computed(() => {
      const { hours, minutes } = vue.unref(timePartials);
      return {
        hours: getHoursList(props.role),
        minutes: getMinutesList(hours, props.role),
        seconds: getSecondsList(hours, minutes, props.role)
      };
    });
    const arrowControlTimeList = vue.computed(() => {
      const { hours, minutes, seconds } = vue.unref(timePartials);
      return {
        hours: utils.buildTimeList(hours, 23),
        minutes: utils.buildTimeList(minutes, 59),
        seconds: utils.buildTimeList(seconds, 59)
      };
    });
    const debouncedResetScroll = lodashUnified.debounce((type) => {
      isScrolling = false;
      adjustCurrentSpinner(type);
    }, 200);
    const getAmPmFlag = (hour) => {
      const shouldShowAmPm = !!props.amPmMode;
      if (!shouldShowAmPm)
        return "";
      const isCapital = props.amPmMode === "A";
      let content = hour < 12 ? " am" : " pm";
      if (isCapital)
        content = content.toUpperCase();
      return content;
    };
    const emitSelectRange = (type) => {
      let range;
      switch (type) {
        case "hours":
          range = [0, 2];
          break;
        case "minutes":
          range = [3, 5];
          break;
        case "seconds":
          range = [6, 8];
          break;
      }
      const [left, right] = range;
      emit("select-range", left, right);
      currentScrollbar.value = type;
    };
    const adjustCurrentSpinner = (type) => {
      adjustSpinner(type, vue.unref(timePartials)[type]);
    };
    const adjustSpinners = () => {
      adjustCurrentSpinner("hours");
      adjustCurrentSpinner("minutes");
      adjustCurrentSpinner("seconds");
    };
    const getScrollbarElement = (el) => el.querySelector(`.${ns.namespace.value}-scrollbar__wrap`);
    const adjustSpinner = (type, value) => {
      if (props.arrowControl)
        return;
      const scrollbar = vue.unref(listRefsMap[type]);
      if (scrollbar && scrollbar.$el) {
        getScrollbarElement(scrollbar.$el).scrollTop = Math.max(0, value * typeItemHeight(type));
      }
    };
    const typeItemHeight = (type) => {
      const scrollbar = vue.unref(listRefsMap[type]);
      const listItem = scrollbar == null ? void 0 : scrollbar.$el.querySelector("li");
      if (listItem) {
        return Number.parseFloat(style.getStyle(listItem, "height")) || 0;
      }
      return 0;
    };
    const onIncrement = () => {
      scrollDown(1);
    };
    const onDecrement = () => {
      scrollDown(-1);
    };
    const scrollDown = (step) => {
      if (!currentScrollbar.value) {
        emitSelectRange("hours");
      }
      const label = currentScrollbar.value;
      const now = vue.unref(timePartials)[label];
      const total = currentScrollbar.value === "hours" ? 24 : 60;
      const next = findNextUnDisabled(label, now, step, total);
      modifyDateField(label, next);
      adjustSpinner(label, next);
      vue.nextTick(() => emitSelectRange(label));
    };
    const findNextUnDisabled = (type, now, step, total) => {
      let next = (now + step + total) % total;
      const list = vue.unref(timeList)[type];
      while (list[next] && next !== now) {
        next = (next + step + total) % total;
      }
      return next;
    };
    const modifyDateField = (type, value) => {
      const list = vue.unref(timeList)[type];
      const isDisabled = list[value];
      if (isDisabled)
        return;
      const { hours, minutes, seconds } = vue.unref(timePartials);
      let changeTo;
      switch (type) {
        case "hours":
          changeTo = props.spinnerDate.hour(value).minute(minutes).second(seconds);
          break;
        case "minutes":
          changeTo = props.spinnerDate.hour(hours).minute(value).second(seconds);
          break;
        case "seconds":
          changeTo = props.spinnerDate.hour(hours).minute(minutes).second(value);
          break;
      }
      emit("change", changeTo);
    };
    const handleClick = (type, { value, disabled }) => {
      if (!disabled) {
        modifyDateField(type, value);
        emitSelectRange(type);
        adjustSpinner(type, value);
      }
    };
    const handleScroll = (type) => {
      isScrolling = true;
      debouncedResetScroll(type);
      const value = Math.min(Math.round((getScrollbarElement(vue.unref(listRefsMap[type]).$el).scrollTop - (scrollBarHeight(type) * 0.5 - 10) / typeItemHeight(type) + 3) / typeItemHeight(type)), type === "hours" ? 23 : 59);
      modifyDateField(type, value);
    };
    const scrollBarHeight = (type) => {
      return vue.unref(listRefsMap[type]).$el.offsetHeight;
    };
    const bindScrollEvent = () => {
      const bindFunction = (type) => {
        const scrollbar = vue.unref(listRefsMap[type]);
        if (scrollbar && scrollbar.$el) {
          getScrollbarElement(scrollbar.$el).onscroll = () => {
            handleScroll(type);
          };
        }
      };
      bindFunction("hours");
      bindFunction("minutes");
      bindFunction("seconds");
    };
    vue.onMounted(() => {
      vue.nextTick(() => {
        !props.arrowControl && bindScrollEvent();
        adjustSpinners();
        if (props.role === "start")
          emitSelectRange("hours");
      });
    });
    const setRef = (scrollbar, type) => {
      listRefsMap[type].value = scrollbar;
    };
    emit("set-option", [`${props.role}_scrollDown`, scrollDown]);
    emit("set-option", [`${props.role}_emitSelectRange`, emitSelectRange]);
    vue.watch(() => props.spinnerDate, () => {
      if (isScrolling)
        return;
      adjustSpinners();
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass([vue.unref(ns).b("spinner"), { "has-seconds": _ctx.showSeconds }])
      }, [
        !_ctx.arrowControl ? (vue.openBlock(true), vue.createElementBlock(vue.Fragment, { key: 0 }, vue.renderList(vue.unref(spinnerItems), (item) => {
          return vue.openBlock(), vue.createBlock(vue.unref(index$1.ElScrollbar), {
            key: item,
            ref_for: true,
            ref: (scrollbar) => setRef(scrollbar, item),
            class: vue.normalizeClass(vue.unref(ns).be("spinner", "wrapper")),
            "wrap-style": "max-height: inherit;",
            "view-class": vue.unref(ns).be("spinner", "list"),
            noresize: "",
            tag: "ul",
            onMouseenter: ($event) => emitSelectRange(item),
            onMousemove: ($event) => adjustCurrentSpinner(item)
          }, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(timeList)[item], (disabled, key) => {
                return vue.openBlock(), vue.createElementBlock("li", {
                  key,
                  class: vue.normalizeClass([
                    vue.unref(ns).be("spinner", "item"),
                    vue.unref(ns).is("active", key === vue.unref(timePartials)[item]),
                    vue.unref(ns).is("disabled", disabled)
                  ]),
                  onClick: ($event) => handleClick(item, { value: key, disabled })
                }, [
                  item === "hours" ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 0 }, [
                    vue.createTextVNode(vue.toDisplayString(("0" + (_ctx.amPmMode ? key % 12 || 12 : key)).slice(-2)) + vue.toDisplayString(getAmPmFlag(key)), 1)
                  ], 64)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
                    vue.createTextVNode(vue.toDisplayString(("0" + key).slice(-2)), 1)
                  ], 64))
                ], 10, _hoisted_1);
              }), 128))
            ]),
            _: 2
          }, 1032, ["class", "view-class", "onMouseenter", "onMousemove"]);
        }), 128)) : vue.createCommentVNode("v-if", true),
        _ctx.arrowControl ? (vue.openBlock(true), vue.createElementBlock(vue.Fragment, { key: 1 }, vue.renderList(vue.unref(spinnerItems), (item) => {
          return vue.openBlock(), vue.createElementBlock("div", {
            key: item,
            class: vue.normalizeClass([vue.unref(ns).be("spinner", "wrapper"), vue.unref(ns).is("arrow")]),
            onMouseenter: ($event) => emitSelectRange(item)
          }, [
            vue.withDirectives((vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
              class: vue.normalizeClass(["arrow-up", vue.unref(ns).be("spinner", "arrow")])
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(vue.unref(iconsVue.ArrowUp))
              ]),
              _: 1
            }, 8, ["class"])), [
              [vue.unref(index$3.vRepeatClick), onDecrement]
            ]),
            vue.withDirectives((vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
              class: vue.normalizeClass(["arrow-down", vue.unref(ns).be("spinner", "arrow")])
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(vue.unref(iconsVue.ArrowDown))
              ]),
              _: 1
            }, 8, ["class"])), [
              [vue.unref(index$3.vRepeatClick), onIncrement]
            ]),
            vue.createElementVNode("ul", {
              class: vue.normalizeClass(vue.unref(ns).be("spinner", "list"))
            }, [
              (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(arrowControlTimeList)[item], (time, key) => {
                return vue.openBlock(), vue.createElementBlock("li", {
                  key,
                  class: vue.normalizeClass([
                    vue.unref(ns).be("spinner", "item"),
                    vue.unref(ns).is("active", time === vue.unref(timePartials)[item]),
                    vue.unref(ns).is("disabled", vue.unref(timeList)[item][time])
                  ])
                }, [
                  typeof time === "number" ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 0 }, [
                    item === "hours" ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 0 }, [
                      vue.createTextVNode(vue.toDisplayString(("0" + (_ctx.amPmMode ? time % 12 || 12 : time)).slice(-2)) + vue.toDisplayString(getAmPmFlag(time)), 1)
                    ], 64)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
                      vue.createTextVNode(vue.toDisplayString(("0" + time).slice(-2)), 1)
                    ], 64))
                  ], 64)) : vue.createCommentVNode("v-if", true)
                ], 2);
              }), 128))
            ], 2)
          ], 42, _hoisted_2);
        }), 128)) : vue.createCommentVNode("v-if", true)
      ], 2);
    };
  }
});
var TimeSpinner = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/basic-time-spinner.vue"]]);

exports["default"] = TimeSpinner;
//# sourceMappingURL=basic-time-spinner.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-pick.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-pick.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var dayjs = __webpack_require__(/*! dayjs */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/dayjs.min.js");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var panelTimePicker = __webpack_require__(/*! ../props/panel-time-picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-picker.js");
var useTimePanel = __webpack_require__(/*! ../composables/use-time-panel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-panel.js");
var useTimePicker = __webpack_require__(/*! ../composables/use-time-picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-picker.js");
var basicTimeSpinner = __webpack_require__(/*! ./basic-time-spinner.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/basic-time-spinner.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var index$1 = __webpack_require__(/*! ../../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  __name: "panel-time-pick",
  props: panelTimePicker.panelTimePickerProps,
  emits: ["pick", "select-range", "set-picker-option"],
  setup(__props, { emit }) {
    const props = __props;
    const pickerBase = vue.inject("EP_PICKER_BASE");
    const {
      arrowControl,
      disabledHours,
      disabledMinutes,
      disabledSeconds,
      defaultValue
    } = pickerBase.props;
    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } = useTimePicker.buildAvailableTimeSlotGetter(disabledHours, disabledMinutes, disabledSeconds);
    const ns = index.useNamespace("time");
    const { t, lang } = index$1.useLocale();
    const selectionRange = vue.ref([0, 2]);
    const oldValue = useTimePicker.useOldValue(props);
    const transitionName = vue.computed(() => {
      return types.isUndefined(props.actualVisible) ? `${ns.namespace.value}-zoom-in-top` : "";
    });
    const showSeconds = vue.computed(() => {
      return props.format.includes("ss");
    });
    const amPmMode = vue.computed(() => {
      if (props.format.includes("A"))
        return "A";
      if (props.format.includes("a"))
        return "a";
      return "";
    });
    const isValidValue = (_date) => {
      const parsedDate = dayjs__default["default"](_date).locale(lang.value);
      const result = getRangeAvailableTime(parsedDate);
      return parsedDate.isSame(result);
    };
    const handleCancel = () => {
      emit("pick", oldValue.value, false);
    };
    const handleConfirm = (visible = false, first = false) => {
      if (first)
        return;
      emit("pick", props.parsedValue, visible);
    };
    const handleChange = (_date) => {
      if (!props.visible) {
        return;
      }
      const result = getRangeAvailableTime(_date).millisecond(0);
      emit("pick", result, true);
    };
    const setSelectionRange = (start, end) => {
      emit("select-range", start, end);
      selectionRange.value = [start, end];
    };
    const changeSelectionRange = (step) => {
      const list = [0, 3].concat(showSeconds.value ? [6] : []);
      const mapping = ["hours", "minutes"].concat(showSeconds.value ? ["seconds"] : []);
      const index = list.indexOf(selectionRange.value[0]);
      const next = (index + step + list.length) % list.length;
      timePickerOptions["start_emitSelectRange"](mapping[next]);
    };
    const handleKeydown = (event) => {
      const code = event.code;
      const { left, right, up, down } = aria.EVENT_CODE;
      if ([left, right].includes(code)) {
        const step = code === left ? -1 : 1;
        changeSelectionRange(step);
        event.preventDefault();
        return;
      }
      if ([up, down].includes(code)) {
        const step = code === up ? -1 : 1;
        timePickerOptions["start_scrollDown"](step);
        event.preventDefault();
        return;
      }
    };
    const { timePickerOptions, onSetOption, getAvailableTime } = useTimePanel.useTimePanel({
      getAvailableHours,
      getAvailableMinutes,
      getAvailableSeconds
    });
    const getRangeAvailableTime = (date) => {
      return getAvailableTime(date, props.datetimeRole || "", true);
    };
    const parseUserInput = (value) => {
      if (!value)
        return null;
      return dayjs__default["default"](value, props.format).locale(lang.value);
    };
    const formatToString = (value) => {
      if (!value)
        return null;
      return value.format(props.format);
    };
    const getDefaultValue = () => {
      return dayjs__default["default"](defaultValue).locale(lang.value);
    };
    emit("set-picker-option", ["isValidValue", isValidValue]);
    emit("set-picker-option", ["formatToString", formatToString]);
    emit("set-picker-option", ["parseUserInput", parseUserInput]);
    emit("set-picker-option", ["handleKeydownInput", handleKeydown]);
    emit("set-picker-option", ["getRangeAvailableTime", getRangeAvailableTime]);
    emit("set-picker-option", ["getDefaultValue", getDefaultValue]);
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.Transition, { name: vue.unref(transitionName) }, {
        default: vue.withCtx(() => [
          _ctx.actualVisible || _ctx.visible ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 0,
            class: vue.normalizeClass(vue.unref(ns).b("panel"))
          }, [
            vue.createElementVNode("div", {
              class: vue.normalizeClass([vue.unref(ns).be("panel", "content"), { "has-seconds": vue.unref(showSeconds) }])
            }, [
              vue.createVNode(basicTimeSpinner["default"], {
                ref: "spinner",
                role: _ctx.datetimeRole || "start",
                "arrow-control": vue.unref(arrowControl),
                "show-seconds": vue.unref(showSeconds),
                "am-pm-mode": vue.unref(amPmMode),
                "spinner-date": _ctx.parsedValue,
                "disabled-hours": vue.unref(disabledHours),
                "disabled-minutes": vue.unref(disabledMinutes),
                "disabled-seconds": vue.unref(disabledSeconds),
                onChange: handleChange,
                onSetOption: vue.unref(onSetOption),
                onSelectRange: setSelectionRange
              }, null, 8, ["role", "arrow-control", "show-seconds", "am-pm-mode", "spinner-date", "disabled-hours", "disabled-minutes", "disabled-seconds", "onSetOption"])
            ], 2),
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(ns).be("panel", "footer"))
            }, [
              vue.createElementVNode("button", {
                type: "button",
                class: vue.normalizeClass([vue.unref(ns).be("panel", "btn"), "cancel"]),
                onClick: handleCancel
              }, vue.toDisplayString(vue.unref(t)("el.datepicker.cancel")), 3),
              vue.createElementVNode("button", {
                type: "button",
                class: vue.normalizeClass([vue.unref(ns).be("panel", "btn"), "confirm"]),
                onClick: _cache[0] || (_cache[0] = ($event) => handleConfirm())
              }, vue.toDisplayString(vue.unref(t)("el.datepicker.confirm")), 3)
            ], 2)
          ], 2)) : vue.createCommentVNode("v-if", true)
        ]),
        _: 1
      }, 8, ["name"]);
    };
  }
});
var TimePickPanel = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"]]);

exports["default"] = TimePickPanel;
//# sourceMappingURL=panel-time-pick.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-range.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-range.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var dayjs = __webpack_require__(/*! dayjs */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/dayjs.min.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var panelTimeRange = __webpack_require__(/*! ../props/panel-time-range.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/props/panel-time-range.js");
var useTimePanel = __webpack_require__(/*! ../composables/use-time-panel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-panel.js");
var useTimePicker = __webpack_require__(/*! ../composables/use-time-picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/composables/use-time-picker.js");
var basicTimeSpinner = __webpack_require__(/*! ./basic-time-spinner.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/basic-time-spinner.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

const _hoisted_1 = ["disabled"];
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  __name: "panel-time-range",
  props: panelTimeRange.panelTimeRangeProps,
  emits: ["pick", "select-range", "set-picker-option"],
  setup(__props, { emit }) {
    const props = __props;
    const makeSelectRange = (start, end) => {
      const result = [];
      for (let i = start; i <= end; i++) {
        result.push(i);
      }
      return result;
    };
    const { t, lang } = index.useLocale();
    const nsTime = index$1.useNamespace("time");
    const nsPicker = index$1.useNamespace("picker");
    const pickerBase = vue.inject("EP_PICKER_BASE");
    const {
      arrowControl,
      disabledHours,
      disabledMinutes,
      disabledSeconds,
      defaultValue
    } = pickerBase.props;
    const startContainerKls = vue.computed(() => [
      nsTime.be("range-picker", "body"),
      nsTime.be("panel", "content"),
      nsTime.is("arrow", arrowControl),
      showSeconds.value ? "has-seconds" : ""
    ]);
    const endContainerKls = vue.computed(() => [
      nsTime.be("range-picker", "body"),
      nsTime.be("panel", "content"),
      nsTime.is("arrow", arrowControl),
      showSeconds.value ? "has-seconds" : ""
    ]);
    const startTime = vue.computed(() => props.parsedValue[0]);
    const endTime = vue.computed(() => props.parsedValue[1]);
    const oldValue = useTimePicker.useOldValue(props);
    const handleCancel = () => {
      emit("pick", oldValue.value, false);
    };
    const showSeconds = vue.computed(() => {
      return props.format.includes("ss");
    });
    const amPmMode = vue.computed(() => {
      if (props.format.includes("A"))
        return "A";
      if (props.format.includes("a"))
        return "a";
      return "";
    });
    const handleConfirm = (visible = false) => {
      emit("pick", [startTime.value, endTime.value], visible);
    };
    const handleMinChange = (date) => {
      handleChange(date.millisecond(0), endTime.value);
    };
    const handleMaxChange = (date) => {
      handleChange(startTime.value, date.millisecond(0));
    };
    const isValidValue = (_date) => {
      const parsedDate = _date.map((_) => dayjs__default["default"](_).locale(lang.value));
      const result = getRangeAvailableTime(parsedDate);
      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);
    };
    const handleChange = (start, end) => {
      emit("pick", [start, end], true);
    };
    const btnConfirmDisabled = vue.computed(() => {
      return startTime.value > endTime.value;
    });
    const selectionRange = vue.ref([0, 2]);
    const setMinSelectionRange = (start, end) => {
      emit("select-range", start, end, "min");
      selectionRange.value = [start, end];
    };
    const offset = vue.computed(() => showSeconds.value ? 11 : 8);
    const setMaxSelectionRange = (start, end) => {
      emit("select-range", start, end, "max");
      const _offset = vue.unref(offset);
      selectionRange.value = [start + _offset, end + _offset];
    };
    const changeSelectionRange = (step) => {
      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];
      const mapping = ["hours", "minutes"].concat(showSeconds.value ? ["seconds"] : []);
      const index = list.indexOf(selectionRange.value[0]);
      const next = (index + step + list.length) % list.length;
      const half = list.length / 2;
      if (next < half) {
        timePickerOptions["start_emitSelectRange"](mapping[next]);
      } else {
        timePickerOptions["end_emitSelectRange"](mapping[next - half]);
      }
    };
    const handleKeydown = (event) => {
      const code = event.code;
      const { left, right, up, down } = aria.EVENT_CODE;
      if ([left, right].includes(code)) {
        const step = code === left ? -1 : 1;
        changeSelectionRange(step);
        event.preventDefault();
        return;
      }
      if ([up, down].includes(code)) {
        const step = code === up ? -1 : 1;
        const role = selectionRange.value[0] < offset.value ? "start" : "end";
        timePickerOptions[`${role}_scrollDown`](step);
        event.preventDefault();
        return;
      }
    };
    const disabledHours_ = (role, compare) => {
      const defaultDisable = disabledHours ? disabledHours(role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);
      return lodashUnified.union(defaultDisable, nextDisable);
    };
    const disabledMinutes_ = (hour, role, compare) => {
      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      if (hour !== compareHour) {
        return defaultDisable;
      }
      const compareMinute = compareDate.minute();
      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);
      return lodashUnified.union(defaultDisable, nextDisable);
    };
    const disabledSeconds_ = (hour, minute, role, compare) => {
      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      const compareMinute = compareDate.minute();
      if (hour !== compareHour || minute !== compareMinute) {
        return defaultDisable;
      }
      const compareSecond = compareDate.second();
      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);
      return lodashUnified.union(defaultDisable, nextDisable);
    };
    const getRangeAvailableTime = ([start, end]) => {
      return [
        getAvailableTime(start, "start", true, end),
        getAvailableTime(end, "end", false, start)
      ];
    };
    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } = useTimePicker.buildAvailableTimeSlotGetter(disabledHours_, disabledMinutes_, disabledSeconds_);
    const {
      timePickerOptions,
      getAvailableTime,
      onSetOption
    } = useTimePanel.useTimePanel({
      getAvailableHours,
      getAvailableMinutes,
      getAvailableSeconds
    });
    const parseUserInput = (days) => {
      if (!days)
        return null;
      if (shared.isArray(days)) {
        return days.map((d) => dayjs__default["default"](d, props.format).locale(lang.value));
      }
      return dayjs__default["default"](days, props.format).locale(lang.value);
    };
    const formatToString = (days) => {
      if (!days)
        return null;
      if (shared.isArray(days)) {
        return days.map((d) => d.format(props.format));
      }
      return days.format(props.format);
    };
    const getDefaultValue = () => {
      if (shared.isArray(defaultValue)) {
        return defaultValue.map((d) => dayjs__default["default"](d).locale(lang.value));
      }
      const defaultDay = dayjs__default["default"](defaultValue).locale(lang.value);
      return [defaultDay, defaultDay.add(60, "m")];
    };
    emit("set-picker-option", ["formatToString", formatToString]);
    emit("set-picker-option", ["parseUserInput", parseUserInput]);
    emit("set-picker-option", ["isValidValue", isValidValue]);
    emit("set-picker-option", ["handleKeydownInput", handleKeydown]);
    emit("set-picker-option", ["getDefaultValue", getDefaultValue]);
    emit("set-picker-option", ["getRangeAvailableTime", getRangeAvailableTime]);
    return (_ctx, _cache) => {
      return _ctx.actualVisible ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: vue.normalizeClass([vue.unref(nsTime).b("range-picker"), vue.unref(nsPicker).b("panel")])
      }, [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(nsTime).be("range-picker", "content"))
        }, [
          vue.createElementVNode("div", {
            class: vue.normalizeClass(vue.unref(nsTime).be("range-picker", "cell"))
          }, [
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(nsTime).be("range-picker", "header"))
            }, vue.toDisplayString(vue.unref(t)("el.datepicker.startTime")), 3),
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(startContainerKls))
            }, [
              vue.createVNode(basicTimeSpinner["default"], {
                ref: "minSpinner",
                role: "start",
                "show-seconds": vue.unref(showSeconds),
                "am-pm-mode": vue.unref(amPmMode),
                "arrow-control": vue.unref(arrowControl),
                "spinner-date": vue.unref(startTime),
                "disabled-hours": disabledHours_,
                "disabled-minutes": disabledMinutes_,
                "disabled-seconds": disabledSeconds_,
                onChange: handleMinChange,
                onSetOption: vue.unref(onSetOption),
                onSelectRange: setMinSelectionRange
              }, null, 8, ["show-seconds", "am-pm-mode", "arrow-control", "spinner-date", "onSetOption"])
            ], 2)
          ], 2),
          vue.createElementVNode("div", {
            class: vue.normalizeClass(vue.unref(nsTime).be("range-picker", "cell"))
          }, [
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(nsTime).be("range-picker", "header"))
            }, vue.toDisplayString(vue.unref(t)("el.datepicker.endTime")), 3),
            vue.createElementVNode("div", {
              class: vue.normalizeClass(vue.unref(endContainerKls))
            }, [
              vue.createVNode(basicTimeSpinner["default"], {
                ref: "maxSpinner",
                role: "end",
                "show-seconds": vue.unref(showSeconds),
                "am-pm-mode": vue.unref(amPmMode),
                "arrow-control": vue.unref(arrowControl),
                "spinner-date": vue.unref(endTime),
                "disabled-hours": disabledHours_,
                "disabled-minutes": disabledMinutes_,
                "disabled-seconds": disabledSeconds_,
                onChange: handleMaxChange,
                onSetOption: vue.unref(onSetOption),
                onSelectRange: setMaxSelectionRange
              }, null, 8, ["show-seconds", "am-pm-mode", "arrow-control", "spinner-date", "onSetOption"])
            ], 2)
          ], 2)
        ], 2),
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(nsTime).be("panel", "footer"))
        }, [
          vue.createElementVNode("button", {
            type: "button",
            class: vue.normalizeClass([vue.unref(nsTime).be("panel", "btn"), "cancel"]),
            onClick: _cache[0] || (_cache[0] = ($event) => handleCancel())
          }, vue.toDisplayString(vue.unref(t)("el.datepicker.cancel")), 3),
          vue.createElementVNode("button", {
            type: "button",
            class: vue.normalizeClass([vue.unref(nsTime).be("panel", "btn"), "confirm"]),
            disabled: vue.unref(btnConfirmDisabled),
            onClick: _cache[1] || (_cache[1] = ($event) => handleConfirm())
          }, vue.toDisplayString(vue.unref(t)("el.datepicker.confirm")), 11, _hoisted_1)
        ], 2)
      ], 2)) : vue.createCommentVNode("v-if", true);
    };
  }
});
var TimeRangePanel = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue"]]);

exports["default"] = TimeRangePanel;
//# sourceMappingURL=panel-time-range.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var dayjs = __webpack_require__(/*! dayjs */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/dayjs.min.js");
var customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat.js */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/plugin/customParseFormat.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/constants.js");
var picker = __webpack_require__(/*! ./common/picker.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/picker.js");
var panelTimePick = __webpack_require__(/*! ./time-picker-com/panel-time-pick.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-pick.js");
var panelTimeRange = __webpack_require__(/*! ./time-picker-com/panel-time-range.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/time-picker-com/panel-time-range.js");
var props = __webpack_require__(/*! ./common/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/common/props.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var customParseFormat__default = /*#__PURE__*/_interopDefaultLegacy(customParseFormat);

dayjs__default["default"].extend(customParseFormat__default["default"]);
var TimePicker = vue.defineComponent({
  name: "ElTimePicker",
  install: null,
  props: {
    ...props.timePickerDefaultProps,
    isRange: {
      type: Boolean,
      default: false
    }
  },
  emits: ["update:modelValue"],
  setup(props, ctx) {
    const commonPicker = vue.ref();
    const [type, Panel] = props.isRange ? ["timerange", panelTimeRange["default"]] : ["time", panelTimePick["default"]];
    const modelUpdater = (value) => ctx.emit("update:modelValue", value);
    vue.provide("ElPopperOptions", props.popperOptions);
    ctx.expose({
      focus: (e) => {
        var _a;
        (_a = commonPicker.value) == null ? void 0 : _a.handleFocusInput(e);
      },
      blur: (e) => {
        var _a;
        (_a = commonPicker.value) == null ? void 0 : _a.handleBlurInput(e);
      },
      handleOpen: () => {
        var _a;
        (_a = commonPicker.value) == null ? void 0 : _a.handleOpen();
      },
      handleClose: () => {
        var _a;
        (_a = commonPicker.value) == null ? void 0 : _a.handleClose();
      }
    });
    return () => {
      var _a;
      const format = (_a = props.format) != null ? _a : constants.DEFAULT_FORMATS_TIME;
      return vue.createVNode(picker["default"], vue.mergeProps(props, {
        "ref": commonPicker,
        "type": type,
        "format": format,
        "onUpdate:modelValue": modelUpdater
      }), {
        default: (props2) => vue.createVNode(Panel, props2, null)
      });
    };
  }
});

exports["default"] = TimePicker;
//# sourceMappingURL=time-picker.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-picker/src/utils.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var dayjs = __webpack_require__(/*! dayjs */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/dayjs.min.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

const buildTimeList = (value, bound) => {
  return [
    value > 0 ? value - 1 : void 0,
    value,
    value < bound ? value + 1 : void 0
  ];
};
const rangeArr = (n) => Array.from(Array.from({ length: n }).keys());
const extractDateFormat = (format) => {
  return format.replace(/\W?m{1,2}|\W?ZZ/g, "").replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi, "").trim();
};
const extractTimeFormat = (format) => {
  return format.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?Y{2,4}/g, "").trim();
};
const dateEquals = function(a, b) {
  const aIsDate = shared.isDate(a);
  const bIsDate = shared.isDate(b);
  if (aIsDate && bIsDate) {
    return a.getTime() === b.getTime();
  }
  if (!aIsDate && !bIsDate) {
    return a === b;
  }
  return false;
};
const valueEquals = function(a, b) {
  const aIsArray = shared.isArray(a);
  const bIsArray = shared.isArray(b);
  if (aIsArray && bIsArray) {
    if (a.length !== b.length) {
      return false;
    }
    return a.every((item, index) => dateEquals(item, b[index]));
  }
  if (!aIsArray && !bIsArray) {
    return dateEquals(a, b);
  }
  return false;
};
const parseDate = function(date, format, lang) {
  const day = types.isEmpty(format) || format === "x" ? dayjs__default["default"](date).locale(lang) : dayjs__default["default"](date, format).locale(lang);
  return day.isValid() ? day : void 0;
};
const formatter = function(date, format, lang) {
  if (types.isEmpty(format))
    return date;
  if (format === "x")
    return +date;
  return dayjs__default["default"](date).locale(lang).format(format);
};
const makeList = (total, method) => {
  var _a;
  const arr = [];
  const disabledArr = method == null ? void 0 : method();
  for (let i = 0; i < total; i++) {
    arr.push((_a = disabledArr == null ? void 0 : disabledArr.includes(i)) != null ? _a : false);
  }
  return arr;
};

exports.buildTimeList = buildTimeList;
exports.dateEquals = dateEquals;
exports.extractDateFormat = extractDateFormat;
exports.extractTimeFormat = extractTimeFormat;
exports.formatter = formatter;
exports.makeList = makeList;
exports.parseDate = parseDate;
exports.rangeArr = rangeArr;
exports.valueEquals = valueEquals;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var timeSelect = __webpack_require__(/*! ./src/time-select2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select2.js");

timeSelect["default"].install = (app) => {
  app.component(timeSelect["default"].name, timeSelect["default"]);
};
const _TimeSelect = timeSelect["default"];
const ElTimeSelect = _TimeSelect;

exports.ElTimeSelect = ElTimeSelect;
exports["default"] = _TimeSelect;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var index = __webpack_require__(/*! ../../../hooks/use-size/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-size/index.js");

const timeSelectProps = runtime.buildProps({
  format: {
    type: String,
    default: "HH:mm"
  },
  modelValue: String,
  disabled: Boolean,
  editable: {
    type: Boolean,
    default: true
  },
  effect: {
    type: String,
    default: "light"
  },
  clearable: {
    type: Boolean,
    default: true
  },
  size: index.useSizeProp,
  placeholder: String,
  start: {
    type: String,
    default: "09:00"
  },
  end: {
    type: String,
    default: "18:00"
  },
  step: {
    type: String,
    default: "00:30"
  },
  minTime: String,
  maxTime: String,
  name: String,
  prefixIcon: {
    type: runtime.definePropType([String, Object]),
    default: () => iconsVue.Clock
  },
  clearIcon: {
    type: runtime.definePropType([String, Object]),
    default: () => iconsVue.CircleClose
  }
});

exports.timeSelectProps = timeSelectProps;
//# sourceMappingURL=time-select.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select2.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select2.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var dayjs = __webpack_require__(/*! dayjs */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/dayjs.min.js");
var customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat.js */ "./node_modules/.pnpm/dayjs@1.11.9/node_modules/dayjs/plugin/customParseFormat.js");
var index = __webpack_require__(/*! ../../select/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var index$2 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var timeSelect = __webpack_require__(/*! ./time-select.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/time-select.js");
var utils = __webpack_require__(/*! ./utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/utils.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var customParseFormat__default = /*#__PURE__*/_interopDefaultLegacy(customParseFormat);

const __default__ = vue.defineComponent({
  name: "ElTimeSelect"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: timeSelect.timeSelectProps,
  emits: ["change", "blur", "focus", "update:modelValue"],
  setup(__props, { expose }) {
    const props = __props;
    dayjs__default["default"].extend(customParseFormat__default["default"]);
    const { Option: ElOption } = index.ElSelect;
    const nsInput = index$1.useNamespace("input");
    const select = vue.ref();
    const _disabled = useFormCommonProps.useFormDisabled();
    const value = vue.computed(() => props.modelValue);
    const start = vue.computed(() => {
      const time = utils.parseTime(props.start);
      return time ? utils.formatTime(time) : null;
    });
    const end = vue.computed(() => {
      const time = utils.parseTime(props.end);
      return time ? utils.formatTime(time) : null;
    });
    const step = vue.computed(() => {
      const time = utils.parseTime(props.step);
      return time ? utils.formatTime(time) : null;
    });
    const minTime = vue.computed(() => {
      const time = utils.parseTime(props.minTime || "");
      return time ? utils.formatTime(time) : null;
    });
    const maxTime = vue.computed(() => {
      const time = utils.parseTime(props.maxTime || "");
      return time ? utils.formatTime(time) : null;
    });
    const items = vue.computed(() => {
      const result = [];
      if (props.start && props.end && props.step) {
        let current = start.value;
        let currentTime;
        while (current && end.value && utils.compareTime(current, end.value) <= 0) {
          currentTime = dayjs__default["default"](current, "HH:mm").format(props.format);
          result.push({
            value: currentTime,
            disabled: utils.compareTime(current, minTime.value || "-1:-1") <= 0 || utils.compareTime(current, maxTime.value || "100:100") >= 0
          });
          current = utils.nextTime(current, step.value);
        }
      }
      return result;
    });
    const blur = () => {
      var _a, _b;
      (_b = (_a = select.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);
    };
    const focus = () => {
      var _a, _b;
      (_b = (_a = select.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);
    };
    expose({
      blur,
      focus
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(index.ElSelect), {
        ref_key: "select",
        ref: select,
        "model-value": vue.unref(value),
        disabled: vue.unref(_disabled),
        clearable: _ctx.clearable,
        "clear-icon": _ctx.clearIcon,
        size: _ctx.size,
        effect: _ctx.effect,
        placeholder: _ctx.placeholder,
        "default-first-option": "",
        filterable: _ctx.editable,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = (event) => _ctx.$emit("update:modelValue", event)),
        onChange: _cache[1] || (_cache[1] = (event) => _ctx.$emit("change", event)),
        onBlur: _cache[2] || (_cache[2] = (event) => _ctx.$emit("blur", event)),
        onFocus: _cache[3] || (_cache[3] = (event) => _ctx.$emit("focus", event))
      }, {
        prefix: vue.withCtx(() => [
          _ctx.prefixIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
            key: 0,
            class: vue.normalizeClass(vue.unref(nsInput).e("prefix-icon"))
          }, {
            default: vue.withCtx(() => [
              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.prefixIcon)))
            ]),
            _: 1
          }, 8, ["class"])) : vue.createCommentVNode("v-if", true)
        ]),
        default: vue.withCtx(() => [
          (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(items), (item) => {
            return vue.openBlock(), vue.createBlock(vue.unref(ElOption), {
              key: item.value,
              label: item.value,
              value: item.value,
              disabled: item.disabled
            }, null, 8, ["label", "value", "disabled"]);
          }), 128))
        ]),
        _: 1
      }, 8, ["model-value", "disabled", "clearable", "clear-icon", "size", "effect", "placeholder", "filterable"]);
    };
  }
});
var TimeSelect = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue"]]);

exports["default"] = TimeSelect;
//# sourceMappingURL=time-select2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/utils.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/time-select/src/utils.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const parseTime = (time) => {
  const values = (time || "").split(":");
  if (values.length >= 2) {
    let hours = Number.parseInt(values[0], 10);
    const minutes = Number.parseInt(values[1], 10);
    const timeUpper = time.toUpperCase();
    if (timeUpper.includes("AM") && hours === 12) {
      hours = 0;
    } else if (timeUpper.includes("PM") && hours !== 12) {
      hours += 12;
    }
    return {
      hours,
      minutes
    };
  }
  return null;
};
const compareTime = (time1, time2) => {
  const value1 = parseTime(time1);
  if (!value1)
    return -1;
  const value2 = parseTime(time2);
  if (!value2)
    return -1;
  const minutes1 = value1.minutes + value1.hours * 60;
  const minutes2 = value2.minutes + value2.hours * 60;
  if (minutes1 === minutes2) {
    return 0;
  }
  return minutes1 > minutes2 ? 1 : -1;
};
const padTime = (time) => {
  return `${time}`.padStart(2, "0");
};
const formatTime = (time) => {
  return `${padTime(time.hours)}:${padTime(time.minutes)}`;
};
const nextTime = (time, step) => {
  const timeValue = parseTime(time);
  if (!timeValue)
    return "";
  const stepValue = parseTime(step);
  if (!stepValue)
    return "";
  const next = {
    hours: timeValue.hours,
    minutes: timeValue.minutes
  };
  next.minutes += stepValue.minutes;
  next.hours += stepValue.hours;
  next.hours += Math.floor(next.minutes / 60);
  next.minutes = next.minutes % 60;
  return formatTime(next);
};

exports.compareTime = compareTime;
exports.formatTime = formatTime;
exports.nextTime = nextTime;
exports.padTime = padTime;
exports.parseTime = parseTime;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var timeline = __webpack_require__(/*! ./src/timeline.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline.js");
var timelineItem$1 = __webpack_require__(/*! ./src/timeline-item2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item2.js");
var timelineItem = __webpack_require__(/*! ./src/timeline-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTimeline = install.withInstall(timeline["default"], {
  TimelineItem: timelineItem$1["default"]
});
const ElTimelineItem = install.withNoopInstall(timelineItem$1["default"]);

exports.timelineItemProps = timelineItem.timelineItemProps;
exports.ElTimeline = ElTimeline;
exports.ElTimelineItem = ElTimelineItem;
exports["default"] = ElTimeline;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");

const timelineItemProps = runtime.buildProps({
  timestamp: {
    type: String,
    default: ""
  },
  hideTimestamp: {
    type: Boolean,
    default: false
  },
  center: {
    type: Boolean,
    default: false
  },
  placement: {
    type: String,
    values: ["top", "bottom"],
    default: "bottom"
  },
  type: {
    type: String,
    values: ["primary", "success", "warning", "danger", "info"],
    default: ""
  },
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: ["normal", "large"],
    default: "normal"
  },
  icon: {
    type: icon.iconPropType
  },
  hollow: {
    type: Boolean,
    default: false
  }
});

exports.timelineItemProps = timelineItemProps;
//# sourceMappingURL=timeline-item.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item2.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item2.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var timelineItem = __webpack_require__(/*! ./timeline-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline-item.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const __default__ = vue.defineComponent({
  name: "ElTimelineItem"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: timelineItem.timelineItemProps,
  setup(__props) {
    const props = __props;
    const ns = index.useNamespace("timeline-item");
    const defaultNodeKls = vue.computed(() => [
      ns.e("node"),
      ns.em("node", props.size || ""),
      ns.em("node", props.type || ""),
      ns.is("hollow", props.hollow)
    ]);
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("li", {
        class: vue.normalizeClass([vue.unref(ns).b(), { [vue.unref(ns).e("center")]: _ctx.center }])
      }, [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(ns).e("tail"))
        }, null, 2),
        !_ctx.$slots.dot ? (vue.openBlock(), vue.createElementBlock("div", {
          key: 0,
          class: vue.normalizeClass(vue.unref(defaultNodeKls)),
          style: vue.normalizeStyle({
            backgroundColor: _ctx.color
          })
        }, [
          _ctx.icon ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
            key: 0,
            class: vue.normalizeClass(vue.unref(ns).e("icon"))
          }, {
            default: vue.withCtx(() => [
              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.icon)))
            ]),
            _: 1
          }, 8, ["class"])) : vue.createCommentVNode("v-if", true)
        ], 6)) : vue.createCommentVNode("v-if", true),
        _ctx.$slots.dot ? (vue.openBlock(), vue.createElementBlock("div", {
          key: 1,
          class: vue.normalizeClass(vue.unref(ns).e("dot"))
        }, [
          vue.renderSlot(_ctx.$slots, "dot")
        ], 2)) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(ns).e("wrapper"))
        }, [
          !_ctx.hideTimestamp && _ctx.placement === "top" ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 0,
            class: vue.normalizeClass([vue.unref(ns).e("timestamp"), vue.unref(ns).is("top")])
          }, vue.toDisplayString(_ctx.timestamp), 3)) : vue.createCommentVNode("v-if", true),
          vue.createElementVNode("div", {
            class: vue.normalizeClass(vue.unref(ns).e("content"))
          }, [
            vue.renderSlot(_ctx.$slots, "default")
          ], 2),
          !_ctx.hideTimestamp && _ctx.placement === "bottom" ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 1,
            class: vue.normalizeClass([vue.unref(ns).e("timestamp"), vue.unref(ns).is("bottom")])
          }, vue.toDisplayString(_ctx.timestamp), 3)) : vue.createCommentVNode("v-if", true)
        ], 2)
      ], 2);
    };
  }
});
var TimelineItem = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/timeline/src/timeline-item.vue"]]);

exports["default"] = TimelineItem;
//# sourceMappingURL=timeline-item2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/timeline/src/timeline.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const Timeline = vue.defineComponent({
  name: "ElTimeline",
  setup(_, { slots }) {
    const ns = index.useNamespace("timeline");
    vue.provide("timeline", slots);
    return () => {
      return vue.h("ul", { class: [ns.b()] }, [vue.renderSlot(slots, "default")]);
    };
  }
});

exports["default"] = Timeline;
//# sourceMappingURL=timeline.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/index.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/index.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tooltip$1 = __webpack_require__(/*! ./src/tooltip2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip2.js");
var arrow = __webpack_require__(/*! ./src/arrow.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js");
var content = __webpack_require__(/*! ./src/content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js");
var root = __webpack_require__(/*! ./src/root.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js");
var tooltip = __webpack_require__(/*! ./src/tooltip.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip.js");
var trigger = __webpack_require__(/*! ./src/trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTooltipV2 = install.withInstall(tooltip$1["default"]);

exports.tooltipV2ArrowProps = arrow.tooltipV2ArrowProps;
exports.tooltipV2ArrowSpecialProps = arrow.tooltipV2ArrowSpecialProps;
exports.tooltipV2ContentProps = content.tooltipV2ContentProps;
exports.tooltipV2RootProps = root.tooltipV2RootProps;
exports.tooltipV2Props = tooltip.tooltipV2Props;
exports.tooltipV2TriggerProps = trigger.tooltipV2TriggerProps;
exports.TOOLTIP_V2_OPEN = constants.TOOLTIP_V2_OPEN;
exports.tooltipV2ContentKey = constants.tooltipV2ContentKey;
exports.tooltipV2RootKey = constants.tooltipV2RootKey;
exports.ElTooltipV2 = ElTooltipV2;
exports["default"] = ElTooltipV2;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/common.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tooltipV2ArrowProps = runtime.buildProps({
  width: {
    type: Number,
    default: 10
  },
  height: {
    type: Number,
    default: 10
  },
  style: {
    type: runtime.definePropType(Object),
    default: null
  }
});
const tooltipV2ArrowSpecialProps = runtime.buildProps({
  side: {
    type: runtime.definePropType(String),
    values: common.tooltipV2Sides,
    required: true
  }
});

exports.tooltipV2ArrowProps = tooltipV2ArrowProps;
exports.tooltipV2ArrowSpecialProps = tooltipV2ArrowSpecialProps;
//# sourceMappingURL=arrow.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow2.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow2.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js");
var arrow = __webpack_require__(/*! ./arrow.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipV2Arrow"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: {
    ...arrow.tooltipV2ArrowProps,
    ...arrow.tooltipV2ArrowSpecialProps
  },
  setup(__props) {
    const props = __props;
    const { ns } = vue.inject(constants.tooltipV2RootKey);
    const { arrowRef } = vue.inject(constants.tooltipV2ContentKey);
    const arrowStyle = vue.computed(() => {
      const { style, width, height } = props;
      const namespace = ns.namespace.value;
      return {
        [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,
        [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,
        [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,
        [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,
        ...style || {}
      };
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("span", {
        ref_key: "arrowRef",
        ref: arrowRef,
        style: vue.normalizeStyle(vue.unref(arrowStyle)),
        class: vue.normalizeClass(vue.unref(ns).e("arrow"))
      }, null, 6);
    };
  }
});
var TooltipV2Arrow = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue"]]);

exports["default"] = TooltipV2Arrow;
//# sourceMappingURL=arrow2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/common.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/common.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tooltipV2CommonProps = runtime.buildProps({
  nowrap: Boolean
});
var TooltipV2Sides = /* @__PURE__ */ ((TooltipV2Sides2) => {
  TooltipV2Sides2["top"] = "top";
  TooltipV2Sides2["bottom"] = "bottom";
  TooltipV2Sides2["left"] = "left";
  TooltipV2Sides2["right"] = "right";
  return TooltipV2Sides2;
})(TooltipV2Sides || {});
const tooltipV2Sides = Object.values(TooltipV2Sides);
const tooltipV2OppositeSide = {
  ["top" /* top */]: "bottom" /* bottom */,
  ["bottom" /* bottom */]: "top" /* top */,
  ["left" /* left */]: "right" /* right */,
  ["right" /* right */]: "left" /* left */
};
const tooltipV2ArrowBorders = {
  ["top" /* top */]: ["left" /* left */, "top" /* top */],
  ["bottom" /* bottom */]: ["bottom" /* bottom */, "right" /* right */],
  ["left" /* left */]: ["bottom" /* bottom */, "left" /* left */],
  ["right" /* right */]: ["top" /* top */, "right" /* right */]
};

exports.TooltipV2Sides = TooltipV2Sides;
exports.tooltipV2ArrowBorders = tooltipV2ArrowBorders;
exports.tooltipV2CommonProps = tooltipV2CommonProps;
exports.tooltipV2OppositeSide = tooltipV2OppositeSide;
exports.tooltipV2Sides = tooltipV2Sides;
//# sourceMappingURL=common.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const tooltipV2RootKey = Symbol("tooltipV2");
const tooltipV2ContentKey = Symbol("tooltipV2Content");
const TOOLTIP_V2_OPEN = "tooltip_v2.open";

exports.TOOLTIP_V2_OPEN = TOOLTIP_V2_OPEN;
exports.tooltipV2ContentKey = tooltipV2ContentKey;
exports.tooltipV2RootKey = tooltipV2RootKey;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tooltipV2Strategies = ["absolute", "fixed"];
const tooltipV2Placements = [
  "top-start",
  "top-end",
  "top",
  "bottom-start",
  "bottom-end",
  "bottom",
  "left-start",
  "left-end",
  "left",
  "right-start",
  "right-end",
  "right"
];
const tooltipV2ContentProps = runtime.buildProps({
  ariaLabel: String,
  arrowPadding: {
    type: runtime.definePropType(Number),
    default: 5
  },
  effect: {
    type: String,
    default: ""
  },
  contentClass: String,
  placement: {
    type: runtime.definePropType(String),
    values: tooltipV2Placements,
    default: "bottom"
  },
  reference: {
    type: runtime.definePropType(Object),
    default: null
  },
  offset: {
    type: Number,
    default: 8
  },
  strategy: {
    type: runtime.definePropType(String),
    values: tooltipV2Strategies,
    default: "absolute"
  },
  showArrow: {
    type: Boolean,
    default: false
  }
});

exports.tooltipV2ContentProps = tooltipV2ContentProps;
//# sourceMappingURL=content.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content2.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content2.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var dom = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/.pnpm/@floating-ui+dom@1.5.1/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../visual-hidden/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js");
var content = __webpack_require__(/*! ./content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/common.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-floating/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-floating/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-z-index/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-z-index/index.js");
var index$2 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var visualHidden = __webpack_require__(/*! ../../visual-hidden/src/visual-hidden2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden2.js");

const _hoisted_1 = ["data-side"];
const __default__ = vue.defineComponent({
  name: "ElTooltipV2Content"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: { ...content.tooltipV2ContentProps, ...common.tooltipV2CommonProps },
  setup(__props) {
    const props = __props;
    const { triggerRef, contentId } = vue.inject(constants.tooltipV2RootKey);
    const placement = vue.ref(props.placement);
    const strategy = vue.ref(props.strategy);
    const arrowRef = vue.ref(null);
    const { referenceRef, contentRef, middlewareData, x, y, update } = index.useFloating({
      placement,
      strategy,
      middleware: vue.computed(() => {
        const middleware = [dom.offset(props.offset)];
        if (props.showArrow) {
          middleware.push(index.arrowMiddleware({
            arrowRef
          }));
        }
        return middleware;
      })
    });
    const zIndex = index$1.useZIndex().nextZIndex();
    const ns = index$2.useNamespace("tooltip-v2");
    const side = vue.computed(() => {
      return placement.value.split("-")[0];
    });
    const contentStyle = vue.computed(() => {
      return {
        position: vue.unref(strategy),
        top: `${vue.unref(y) || 0}px`,
        left: `${vue.unref(x) || 0}px`,
        zIndex
      };
    });
    const arrowStyle = vue.computed(() => {
      if (!props.showArrow)
        return {};
      const { arrow } = vue.unref(middlewareData);
      return {
        [`--${ns.namespace.value}-tooltip-v2-arrow-x`]: `${arrow == null ? void 0 : arrow.x}px` || "",
        [`--${ns.namespace.value}-tooltip-v2-arrow-y`]: `${arrow == null ? void 0 : arrow.y}px` || ""
      };
    });
    const contentClass = vue.computed(() => [
      ns.e("content"),
      ns.is("dark", props.effect === "dark"),
      ns.is(vue.unref(strategy)),
      props.contentClass
    ]);
    vue.watch(arrowRef, () => update());
    vue.watch(() => props.placement, (val) => placement.value = val);
    vue.onMounted(() => {
      vue.watch(() => props.reference || triggerRef.value, (el) => {
        referenceRef.value = el || void 0;
      }, {
        immediate: true
      });
    });
    vue.provide(constants.tooltipV2ContentKey, { arrowRef });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        ref_key: "contentRef",
        ref: contentRef,
        style: vue.normalizeStyle(vue.unref(contentStyle)),
        "data-tooltip-v2-root": ""
      }, [
        !_ctx.nowrap ? (vue.openBlock(), vue.createElementBlock("div", {
          key: 0,
          "data-side": vue.unref(side),
          class: vue.normalizeClass(vue.unref(contentClass))
        }, [
          vue.renderSlot(_ctx.$slots, "default", {
            contentStyle: vue.unref(contentStyle),
            contentClass: vue.unref(contentClass)
          }),
          vue.createVNode(vue.unref(visualHidden["default"]), {
            id: vue.unref(contentId),
            role: "tooltip"
          }, {
            default: vue.withCtx(() => [
              _ctx.ariaLabel ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 0 }, [
                vue.createTextVNode(vue.toDisplayString(_ctx.ariaLabel), 1)
              ], 64)) : vue.renderSlot(_ctx.$slots, "default", { key: 1 })
            ]),
            _: 3
          }, 8, ["id"]),
          vue.renderSlot(_ctx.$slots, "arrow", {
            style: vue.normalizeStyle(vue.unref(arrowStyle)),
            side: vue.unref(side)
          })
        ], 10, _hoisted_1)) : vue.createCommentVNode("v-if", true)
      ], 4);
    };
  }
});
var TooltipV2Content = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/content.vue"]]);

exports["default"] = TooltipV2Content;
//# sourceMappingURL=content2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/forward-ref.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/forward-ref.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var refs = __webpack_require__(/*! ../../../utils/vue/refs.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/refs.js");
var vnode = __webpack_require__(/*! ../../../utils/vue/vnode.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/vnode.js");

const forwardRefProps = runtime.buildProps({
  setRef: {
    type: runtime.definePropType(Function),
    required: true
  },
  onlyChild: Boolean
});
var ForwardRef = vue.defineComponent({
  props: forwardRefProps,
  setup(props, {
    slots
  }) {
    const fragmentRef = vue.ref();
    const setRef = refs.composeRefs(fragmentRef, (el) => {
      if (el) {
        props.setRef(el.nextElementSibling);
      } else {
        props.setRef(null);
      }
    });
    return () => {
      var _a;
      const [firstChild] = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];
      const child = props.onlyChild ? vnode.ensureOnlyChild(firstChild.children) : firstChild.children;
      return vue.createVNode(vue.Fragment, {
        "ref": setRef
      }, [child]);
    };
  }
});

exports["default"] = ForwardRef;
exports.forwardRefProps = forwardRefProps;
//# sourceMappingURL=forward-ref.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tooltipV2RootProps = runtime.buildProps({
  delayDuration: {
    type: Number,
    default: 300
  },
  defaultOpen: Boolean,
  open: {
    type: Boolean,
    default: void 0
  },
  onOpenChange: {
    type: runtime.definePropType(Function)
  },
  "onUpdate:open": {
    type: runtime.definePropType(Function)
  }
});

exports.tooltipV2RootProps = tooltipV2RootProps;
//# sourceMappingURL=root.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root2.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js");
var root = __webpack_require__(/*! ./root.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-id/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-id/index.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipV2Root"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: root.tooltipV2RootProps,
  setup(__props, { expose }) {
    const props = __props;
    const _open = vue.ref(props.defaultOpen);
    const triggerRef = vue.ref(null);
    const open = vue.computed({
      get: () => types.isPropAbsent(props.open) ? _open.value : props.open,
      set: (open2) => {
        var _a;
        _open.value = open2;
        (_a = props["onUpdate:open"]) == null ? void 0 : _a.call(props, open2);
      }
    });
    const isOpenDelayed = vue.computed(() => types.isNumber(props.delayDuration) && props.delayDuration > 0);
    const { start: onDelayedOpen, stop: clearTimer } = core.useTimeoutFn(() => {
      open.value = true;
    }, vue.computed(() => props.delayDuration), {
      immediate: false
    });
    const ns = index.useNamespace("tooltip-v2");
    const contentId = index$1.useId();
    const onNormalOpen = () => {
      clearTimer();
      open.value = true;
    };
    const onDelayOpen = () => {
      vue.unref(isOpenDelayed) ? onDelayedOpen() : onNormalOpen();
    };
    const onOpen = onNormalOpen;
    const onClose = () => {
      clearTimer();
      open.value = false;
    };
    const onChange = (open2) => {
      var _a;
      if (open2) {
        document.dispatchEvent(new CustomEvent(constants.TOOLTIP_V2_OPEN));
        onOpen();
      }
      (_a = props.onOpenChange) == null ? void 0 : _a.call(props, open2);
    };
    vue.watch(open, onChange);
    vue.onMounted(() => {
      document.addEventListener(constants.TOOLTIP_V2_OPEN, onClose);
    });
    vue.onBeforeUnmount(() => {
      clearTimer();
      document.removeEventListener(constants.TOOLTIP_V2_OPEN, onClose);
    });
    vue.provide(constants.tooltipV2RootKey, {
      contentId,
      triggerRef,
      ns,
      onClose,
      onDelayOpen,
      onOpen
    });
    expose({
      onOpen,
      onClose
    });
    return (_ctx, _cache) => {
      return vue.renderSlot(_ctx.$slots, "default", { open: vue.unref(open) });
    };
  }
});
var TooltipV2Root = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/root.vue"]]);

exports["default"] = TooltipV2Root;
//# sourceMappingURL=root2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var root = __webpack_require__(/*! ./root.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js");
var trigger = __webpack_require__(/*! ./trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js");
var arrow = __webpack_require__(/*! ./arrow.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js");
var content = __webpack_require__(/*! ./content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const tooltipV2Props = runtime.buildProps({
  ...root.tooltipV2RootProps,
  ...arrow.tooltipV2ArrowProps,
  ...trigger.tooltipV2TriggerProps,
  ...content.tooltipV2ContentProps,
  alwaysOn: Boolean,
  fullTransition: Boolean,
  transitionProps: {
    type: runtime.definePropType(Object),
    default: null
  },
  teleported: Boolean,
  to: {
    type: runtime.definePropType(String),
    default: "body"
  }
});

exports.tooltipV2Props = tooltipV2Props;
//# sourceMappingURL=tooltip.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip2.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip2.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var arrow = __webpack_require__(/*! ./arrow.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow.js");
var content = __webpack_require__(/*! ./content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content.js");
var root = __webpack_require__(/*! ./root.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root.js");
var tooltip = __webpack_require__(/*! ./tooltip.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/tooltip.js");
var trigger = __webpack_require__(/*! ./trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js");
var root$1 = __webpack_require__(/*! ./root2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/root2.js");
var arrow$1 = __webpack_require__(/*! ./arrow2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/arrow2.js");
var content$1 = __webpack_require__(/*! ./content2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/content2.js");
var trigger$1 = __webpack_require__(/*! ./trigger2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger2.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipV2"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: tooltip.tooltipV2Props,
  setup(__props) {
    const props = __props;
    const refedProps = vue.toRefs(props);
    const arrowProps = vue.reactive(lodashUnified.pick(refedProps, Object.keys(arrow.tooltipV2ArrowProps)));
    const contentProps = vue.reactive(lodashUnified.pick(refedProps, Object.keys(content.tooltipV2ContentProps)));
    const rootProps = vue.reactive(lodashUnified.pick(refedProps, Object.keys(root.tooltipV2RootProps)));
    const triggerProps = vue.reactive(lodashUnified.pick(refedProps, Object.keys(trigger.tooltipV2TriggerProps)));
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(root$1["default"], vue.normalizeProps(vue.guardReactiveProps(rootProps)), {
        default: vue.withCtx(({ open }) => [
          vue.createVNode(trigger$1["default"], vue.mergeProps(triggerProps, { nowrap: "" }), {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "trigger")
            ]),
            _: 3
          }, 16),
          (vue.openBlock(), vue.createBlock(vue.Teleport, {
            to: _ctx.to,
            disabled: !_ctx.teleported
          }, [
            _ctx.fullTransition ? (vue.openBlock(), vue.createBlock(vue.Transition, vue.normalizeProps(vue.mergeProps({ key: 0 }, _ctx.transitionProps)), {
              default: vue.withCtx(() => [
                _ctx.alwaysOn || open ? (vue.openBlock(), vue.createBlock(content$1["default"], vue.normalizeProps(vue.mergeProps({ key: 0 }, contentProps)), {
                  arrow: vue.withCtx(({ style, side }) => [
                    _ctx.showArrow ? (vue.openBlock(), vue.createBlock(arrow$1["default"], vue.mergeProps({ key: 0 }, arrowProps, {
                      style,
                      side
                    }), null, 16, ["style", "side"])) : vue.createCommentVNode("v-if", true)
                  ]),
                  default: vue.withCtx(() => [
                    vue.renderSlot(_ctx.$slots, "default")
                  ]),
                  _: 3
                }, 16)) : vue.createCommentVNode("v-if", true)
              ]),
              _: 2
            }, 1040)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
              _ctx.alwaysOn || open ? (vue.openBlock(), vue.createBlock(content$1["default"], vue.normalizeProps(vue.mergeProps({ key: 0 }, contentProps)), {
                arrow: vue.withCtx(({ style, side }) => [
                  _ctx.showArrow ? (vue.openBlock(), vue.createBlock(arrow$1["default"], vue.mergeProps({ key: 0 }, arrowProps, {
                    style,
                    side
                  }), null, 16, ["style", "side"])) : vue.createCommentVNode("v-if", true)
                ]),
                default: vue.withCtx(() => [
                  vue.renderSlot(_ctx.$slots, "default")
                ]),
                _: 3
              }, 16)) : vue.createCommentVNode("v-if", true)
            ], 64))
          ], 8, ["to", "disabled"]))
        ]),
        _: 3
      }, 16);
    };
  }
});
var TooltipV2 = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/tooltip.vue"]]);

exports["default"] = TooltipV2;
//# sourceMappingURL=tooltip2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const EventHandler = {
  type: runtime.definePropType(Function)
};
const tooltipV2TriggerProps = runtime.buildProps({
  onBlur: EventHandler,
  onClick: EventHandler,
  onFocus: EventHandler,
  onMouseDown: EventHandler,
  onMouseEnter: EventHandler,
  onMouseLeave: EventHandler
});

exports.tooltipV2TriggerProps = tooltipV2TriggerProps;
//# sourceMappingURL=trigger.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger2.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger2.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/constants.js");
var forwardRef = __webpack_require__(/*! ./forward-ref.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/forward-ref.js");
var trigger = __webpack_require__(/*! ./trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/trigger.js");
var common = __webpack_require__(/*! ./common.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip-v2/src/common.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var event = __webpack_require__(/*! ../../../utils/dom/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/event.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipV2Trigger"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: {
    ...common.tooltipV2CommonProps,
    ...trigger.tooltipV2TriggerProps
  },
  setup(__props) {
    const props = __props;
    const { onClose, onOpen, onDelayOpen, triggerRef, contentId } = vue.inject(constants.tooltipV2RootKey);
    let isMousedown = false;
    const setTriggerRef = (el) => {
      triggerRef.value = el;
    };
    const onMouseup = () => {
      isMousedown = false;
    };
    const onMouseenter = event.composeEventHandlers(props.onMouseEnter, onDelayOpen);
    const onMouseleave = event.composeEventHandlers(props.onMouseLeave, onClose);
    const onMousedown = event.composeEventHandlers(props.onMouseDown, () => {
      onClose();
      isMousedown = true;
      document.addEventListener("mouseup", onMouseup, { once: true });
    });
    const onFocus = event.composeEventHandlers(props.onFocus, () => {
      if (!isMousedown)
        onOpen();
    });
    const onBlur = event.composeEventHandlers(props.onBlur, onClose);
    const onClick = event.composeEventHandlers(props.onClick, (e) => {
      if (e.detail === 0)
        onClose();
    });
    const events = {
      blur: onBlur,
      click: onClick,
      focus: onFocus,
      mousedown: onMousedown,
      mouseenter: onMouseenter,
      mouseleave: onMouseleave
    };
    const setEvents = (el, events2, type) => {
      if (el) {
        Object.entries(events2).forEach(([name, handler]) => {
          el[type](name, handler);
        });
      }
    };
    vue.watch(triggerRef, (triggerEl, previousTriggerEl) => {
      setEvents(triggerEl, events, "addEventListener");
      setEvents(previousTriggerEl, events, "removeEventListener");
      if (triggerEl) {
        triggerEl.setAttribute("aria-describedby", contentId.value);
      }
    });
    vue.onBeforeUnmount(() => {
      setEvents(triggerRef.value, events, "removeEventListener");
      document.removeEventListener("mouseup", onMouseup);
    });
    return (_ctx, _cache) => {
      return _ctx.nowrap ? (vue.openBlock(), vue.createBlock(vue.unref(forwardRef["default"]), {
        key: 0,
        "set-ref": setTriggerRef,
        "only-child": ""
      }, {
        default: vue.withCtx(() => [
          vue.renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      })) : (vue.openBlock(), vue.createElementBlock("button", vue.mergeProps({
        key: 1,
        ref_key: "triggerRef",
        ref: triggerRef
      }, _ctx.$attrs), [
        vue.renderSlot(_ctx.$slots, "default")
      ], 16));
    };
  }
});
var TooltipV2Trigger = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/trigger.vue"]]);

exports["default"] = TooltipV2Trigger;
//# sourceMappingURL=trigger2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tooltip$1 = __webpack_require__(/*! ./src/tooltip2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip2.js");
var tooltip = __webpack_require__(/*! ./src/tooltip.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip.js");
var trigger = __webpack_require__(/*! ./src/trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger.js");
var content = __webpack_require__(/*! ./src/content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTooltip = install.withInstall(tooltip$1["default"]);

exports.tooltipEmits = tooltip.tooltipEmits;
exports.useTooltipModelToggle = tooltip.useTooltipModelToggle;
exports.useTooltipModelToggleEmits = tooltip.useTooltipModelToggleEmits;
exports.useTooltipModelToggleProps = tooltip.useTooltipModelToggleProps;
exports.useTooltipProps = tooltip.useTooltipProps;
exports.useTooltipTriggerProps = trigger.useTooltipTriggerProps;
exports.useTooltipContentProps = content.useTooltipContentProps;
exports.TOOLTIP_INJECTION_KEY = constants.TOOLTIP_INJECTION_KEY;
exports.ElTooltip = ElTooltip;
exports["default"] = ElTooltip;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const TOOLTIP_INJECTION_KEY = Symbol("elTooltip");

exports.TOOLTIP_INJECTION_KEY = TOOLTIP_INJECTION_KEY;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var index = __webpack_require__(/*! ../../../hooks/use-delayed-toggle/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-delayed-toggle/index.js");
var content = __webpack_require__(/*! ../../popper/src/content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/content.js");

const useTooltipContentProps = runtime.buildProps({
  ...index.useDelayedToggleProps,
  ...content.popperContentProps,
  appendTo: {
    type: runtime.definePropType([String, Object])
  },
  content: {
    type: String,
    default: ""
  },
  rawContent: {
    type: Boolean,
    default: false
  },
  persistent: Boolean,
  ariaLabel: String,
  visible: {
    type: runtime.definePropType(Boolean),
    default: null
  },
  transition: String,
  teleported: {
    type: Boolean,
    default: true
  },
  disabled: Boolean
});

exports.useTooltipContentProps = useTooltipContentProps;
//# sourceMappingURL=content.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content2.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js");
var content = __webpack_require__(/*! ./content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-popper-container/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-popper-container/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var event = __webpack_require__(/*! ../../../utils/dom/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/event.js");
var content$1 = __webpack_require__(/*! ../../popper/src/content2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/content2.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipContent",
  inheritAttrs: false
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: content.useTooltipContentProps,
  setup(__props, { expose }) {
    const props = __props;
    const { selector } = index.usePopperContainerId();
    const ns = index$1.useNamespace("tooltip");
    const contentRef = vue.ref(null);
    const destroyed = vue.ref(false);
    const {
      controlled,
      id,
      open,
      trigger,
      onClose,
      onOpen,
      onShow,
      onHide,
      onBeforeShow,
      onBeforeHide
    } = vue.inject(constants.TOOLTIP_INJECTION_KEY, void 0);
    const transitionClass = vue.computed(() => {
      return props.transition || `${ns.namespace.value}-fade-in-linear`;
    });
    const persistentRef = vue.computed(() => {
      if (false) {}
      return props.persistent;
    });
    vue.onBeforeUnmount(() => {
      destroyed.value = true;
    });
    const shouldRender = vue.computed(() => {
      return vue.unref(persistentRef) ? true : vue.unref(open);
    });
    const shouldShow = vue.computed(() => {
      return props.disabled ? false : vue.unref(open);
    });
    const appendTo = vue.computed(() => {
      return props.appendTo || selector.value;
    });
    const contentStyle = vue.computed(() => {
      var _a;
      return (_a = props.style) != null ? _a : {};
    });
    const ariaHidden = vue.computed(() => !vue.unref(open));
    const onTransitionLeave = () => {
      onHide();
    };
    const stopWhenControlled = () => {
      if (vue.unref(controlled))
        return true;
    };
    const onContentEnter = event.composeEventHandlers(stopWhenControlled, () => {
      if (props.enterable && vue.unref(trigger) === "hover") {
        onOpen();
      }
    });
    const onContentLeave = event.composeEventHandlers(stopWhenControlled, () => {
      if (vue.unref(trigger) === "hover") {
        onClose();
      }
    });
    const onBeforeEnter = () => {
      var _a, _b;
      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);
      onBeforeShow == null ? void 0 : onBeforeShow();
    };
    const onBeforeLeave = () => {
      onBeforeHide == null ? void 0 : onBeforeHide();
    };
    const onAfterShow = () => {
      onShow();
      stopHandle = core.onClickOutside(vue.computed(() => {
        var _a;
        return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;
      }), () => {
        if (vue.unref(controlled))
          return;
        const $trigger = vue.unref(trigger);
        if ($trigger !== "hover") {
          onClose();
        }
      });
    };
    const onBlur = () => {
      if (!props.virtualTriggering) {
        onClose();
      }
    };
    let stopHandle;
    vue.watch(() => vue.unref(open), (val) => {
      if (!val) {
        stopHandle == null ? void 0 : stopHandle();
      }
    }, {
      flush: "post"
    });
    vue.watch(() => props.content, () => {
      var _a, _b;
      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);
    });
    expose({
      contentRef
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.Teleport, {
        disabled: !_ctx.teleported,
        to: vue.unref(appendTo)
      }, [
        vue.createVNode(vue.Transition, {
          name: vue.unref(transitionClass),
          onAfterLeave: onTransitionLeave,
          onBeforeEnter,
          onAfterEnter: onAfterShow,
          onBeforeLeave
        }, {
          default: vue.withCtx(() => [
            vue.unref(shouldRender) ? vue.withDirectives((vue.openBlock(), vue.createBlock(vue.unref(content$1["default"]), vue.mergeProps({
              key: 0,
              id: vue.unref(id),
              ref_key: "contentRef",
              ref: contentRef
            }, _ctx.$attrs, {
              "aria-label": _ctx.ariaLabel,
              "aria-hidden": vue.unref(ariaHidden),
              "boundaries-padding": _ctx.boundariesPadding,
              "fallback-placements": _ctx.fallbackPlacements,
              "gpu-acceleration": _ctx.gpuAcceleration,
              offset: _ctx.offset,
              placement: _ctx.placement,
              "popper-options": _ctx.popperOptions,
              strategy: _ctx.strategy,
              effect: _ctx.effect,
              enterable: _ctx.enterable,
              pure: _ctx.pure,
              "popper-class": _ctx.popperClass,
              "popper-style": [_ctx.popperStyle, vue.unref(contentStyle)],
              "reference-el": _ctx.referenceEl,
              "trigger-target-el": _ctx.triggerTargetEl,
              visible: vue.unref(shouldShow),
              "z-index": _ctx.zIndex,
              onMouseenter: vue.unref(onContentEnter),
              onMouseleave: vue.unref(onContentLeave),
              onBlur,
              onClose: vue.unref(onClose)
            }), {
              default: vue.withCtx(() => [
                !destroyed.value ? vue.renderSlot(_ctx.$slots, "default", { key: 0 }) : vue.createCommentVNode("v-if", true)
              ]),
              _: 3
            }, 16, ["id", "aria-label", "aria-hidden", "boundaries-padding", "fallback-placements", "gpu-acceleration", "offset", "placement", "popper-options", "strategy", "effect", "enterable", "pure", "popper-class", "popper-style", "reference-el", "trigger-target-el", "visible", "z-index", "onMouseenter", "onMouseleave", "onClose"])), [
              [vue.vShow, vue.unref(shouldShow)]
            ]) : vue.createCommentVNode("v-if", true)
          ]),
          _: 3
        }, 8, ["name"])
      ], 8, ["disabled", "to"]);
    };
  }
});
var ElTooltipContent = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue"]]);

exports["default"] = ElTooltipContent;
//# sourceMappingURL=content2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
var content = __webpack_require__(/*! ./content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content.js");
var trigger = __webpack_require__(/*! ./trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger.js");
var index = __webpack_require__(/*! ../../../hooks/use-model-toggle/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-model-toggle/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var popper = __webpack_require__(/*! ../../popper/src/popper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/popper.js");
var arrow = __webpack_require__(/*! ../../popper/src/arrow.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/arrow.js");

const {
  useModelToggleProps: useTooltipModelToggleProps,
  useModelToggleEmits: useTooltipModelToggleEmits,
  useModelToggle: useTooltipModelToggle
} = index.createModelToggleComposable("visible");
const useTooltipProps = runtime.buildProps({
  ...popper.popperProps,
  ...useTooltipModelToggleProps,
  ...content.useTooltipContentProps,
  ...trigger.useTooltipTriggerProps,
  ...arrow.popperArrowProps,
  showArrow: {
    type: Boolean,
    default: true
  }
});
const tooltipEmits = [
  ...useTooltipModelToggleEmits,
  "before-show",
  "before-hide",
  "show",
  "hide",
  "open",
  "close"
];

exports.tooltipEmits = tooltipEmits;
exports.useTooltipModelToggle = useTooltipModelToggle;
exports.useTooltipModelToggleEmits = useTooltipModelToggleEmits;
exports.useTooltipModelToggleProps = useTooltipModelToggleProps;
exports.useTooltipProps = useTooltipProps;
//# sourceMappingURL=tooltip.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip2.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$3 = __webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js");
var tooltip = __webpack_require__(/*! ./tooltip.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/tooltip.js");
var trigger = __webpack_require__(/*! ./trigger2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger2.js");
var content = __webpack_require__(/*! ./content2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/content2.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-popper-container/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-popper-container/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-id/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-id/index.js");
var index$2 = __webpack_require__(/*! ../../../hooks/use-delayed-toggle/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-delayed-toggle/index.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var arrow = __webpack_require__(/*! ../../popper/src/arrow2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/arrow2.js");

const _hoisted_1 = ["innerHTML"];
const _hoisted_2 = { key: 1 };
const __default__ = vue.defineComponent({
  name: "ElTooltip"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: tooltip.useTooltipProps,
  emits: tooltip.tooltipEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    index.usePopperContainer();
    const id = index$1.useId();
    const popperRef = vue.ref();
    const contentRef = vue.ref();
    const updatePopper = () => {
      var _a;
      const popperComponent = vue.unref(popperRef);
      if (popperComponent) {
        (_a = popperComponent.popperInstanceRef) == null ? void 0 : _a.update();
      }
    };
    const open = vue.ref(false);
    const toggleReason = vue.ref();
    const { show, hide, hasUpdateHandler } = tooltip.useTooltipModelToggle({
      indicator: open,
      toggleReason
    });
    const { onOpen, onClose } = index$2.useDelayedToggle({
      showAfter: vue.toRef(props, "showAfter"),
      hideAfter: vue.toRef(props, "hideAfter"),
      autoClose: vue.toRef(props, "autoClose"),
      open: show,
      close: hide
    });
    const controlled = vue.computed(() => types.isBoolean(props.visible) && !hasUpdateHandler.value);
    vue.provide(constants.TOOLTIP_INJECTION_KEY, {
      controlled,
      id,
      open: vue.readonly(open),
      trigger: vue.toRef(props, "trigger"),
      onOpen: (event) => {
        onOpen(event);
      },
      onClose: (event) => {
        onClose(event);
      },
      onToggle: (event) => {
        if (vue.unref(open)) {
          onClose(event);
        } else {
          onOpen(event);
        }
      },
      onShow: () => {
        emit("show", toggleReason.value);
      },
      onHide: () => {
        emit("hide", toggleReason.value);
      },
      onBeforeShow: () => {
        emit("before-show", toggleReason.value);
      },
      onBeforeHide: () => {
        emit("before-hide", toggleReason.value);
      },
      updatePopper
    });
    vue.watch(() => props.disabled, (disabled) => {
      if (disabled && open.value) {
        open.value = false;
      }
    });
    const isFocusInsideContent = (event) => {
      var _a, _b;
      const popperContent = (_b = (_a = contentRef.value) == null ? void 0 : _a.contentRef) == null ? void 0 : _b.popperContentRef;
      const activeElement = (event == null ? void 0 : event.relatedTarget) || document.activeElement;
      return popperContent && popperContent.contains(activeElement);
    };
    vue.onDeactivated(() => open.value && hide());
    expose({
      popperRef,
      contentRef,
      isFocusInsideContent,
      updatePopper,
      onOpen,
      onClose,
      hide
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(index$3.ElPopper), {
        ref_key: "popperRef",
        ref: popperRef,
        role: _ctx.role
      }, {
        default: vue.withCtx(() => [
          vue.createVNode(trigger["default"], {
            disabled: _ctx.disabled,
            trigger: _ctx.trigger,
            "trigger-keys": _ctx.triggerKeys,
            "virtual-ref": _ctx.virtualRef,
            "virtual-triggering": _ctx.virtualTriggering
          }, {
            default: vue.withCtx(() => [
              _ctx.$slots.default ? vue.renderSlot(_ctx.$slots, "default", { key: 0 }) : vue.createCommentVNode("v-if", true)
            ]),
            _: 3
          }, 8, ["disabled", "trigger", "trigger-keys", "virtual-ref", "virtual-triggering"]),
          vue.createVNode(content["default"], {
            ref_key: "contentRef",
            ref: contentRef,
            "aria-label": _ctx.ariaLabel,
            "boundaries-padding": _ctx.boundariesPadding,
            content: _ctx.content,
            disabled: _ctx.disabled,
            effect: _ctx.effect,
            enterable: _ctx.enterable,
            "fallback-placements": _ctx.fallbackPlacements,
            "hide-after": _ctx.hideAfter,
            "gpu-acceleration": _ctx.gpuAcceleration,
            offset: _ctx.offset,
            persistent: _ctx.persistent,
            "popper-class": _ctx.popperClass,
            "popper-style": _ctx.popperStyle,
            placement: _ctx.placement,
            "popper-options": _ctx.popperOptions,
            pure: _ctx.pure,
            "raw-content": _ctx.rawContent,
            "reference-el": _ctx.referenceEl,
            "trigger-target-el": _ctx.triggerTargetEl,
            "show-after": _ctx.showAfter,
            strategy: _ctx.strategy,
            teleported: _ctx.teleported,
            transition: _ctx.transition,
            "virtual-triggering": _ctx.virtualTriggering,
            "z-index": _ctx.zIndex,
            "append-to": _ctx.appendTo
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "content", {}, () => [
                _ctx.rawContent ? (vue.openBlock(), vue.createElementBlock("span", {
                  key: 0,
                  innerHTML: _ctx.content
                }, null, 8, _hoisted_1)) : (vue.openBlock(), vue.createElementBlock("span", _hoisted_2, vue.toDisplayString(_ctx.content), 1))
              ]),
              _ctx.showArrow ? (vue.openBlock(), vue.createBlock(vue.unref(arrow["default"]), {
                key: 0,
                "arrow-offset": _ctx.arrowOffset
              }, null, 8, ["arrow-offset"])) : vue.createCommentVNode("v-if", true)
            ]),
            _: 3
          }, 8, ["aria-label", "boundaries-padding", "content", "disabled", "effect", "enterable", "fallback-placements", "hide-after", "gpu-acceleration", "offset", "persistent", "popper-class", "popper-style", "placement", "popper-options", "pure", "raw-content", "reference-el", "trigger-target-el", "show-after", "strategy", "teleported", "transition", "virtual-triggering", "z-index", "append-to"])
        ]),
        _: 3
      }, 8, ["role"]);
    };
  }
});
var Tooltip = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/tooltip.vue"]]);

exports["default"] = Tooltip;
//# sourceMappingURL=tooltip2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var trigger = __webpack_require__(/*! ../../popper/src/trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/trigger.js");
var aria = __webpack_require__(/*! ../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

const useTooltipTriggerProps = runtime.buildProps({
  ...trigger.popperTriggerProps,
  disabled: Boolean,
  trigger: {
    type: runtime.definePropType([String, Array]),
    default: "hover"
  },
  triggerKeys: {
    type: runtime.definePropType(Array),
    default: () => [aria.EVENT_CODE.enter, aria.EVENT_CODE.space]
  }
});

exports.useTooltipTriggerProps = useTooltipTriggerProps;
//# sourceMappingURL=trigger.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger2.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../popper/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/constants.js");
var trigger = __webpack_require__(/*! ./trigger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/trigger.js");
var utils = __webpack_require__(/*! ./utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/utils.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var event = __webpack_require__(/*! ../../../utils/dom/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/event.js");
var trigger$1 = __webpack_require__(/*! ../../popper/src/trigger2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/popper/src/trigger2.js");

const __default__ = vue.defineComponent({
  name: "ElTooltipTrigger"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: trigger.useTooltipTriggerProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = index.useNamespace("tooltip");
    const { controlled, id, open, onOpen, onClose, onToggle } = vue.inject(constants.TOOLTIP_INJECTION_KEY, void 0);
    const triggerRef = vue.ref(null);
    const stopWhenControlledOrDisabled = () => {
      if (vue.unref(controlled) || props.disabled) {
        return true;
      }
    };
    const trigger = vue.toRef(props, "trigger");
    const onMouseenter = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "hover", onOpen));
    const onMouseleave = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "hover", onClose));
    const onClick = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "click", (e) => {
      if (e.button === 0) {
        onToggle(e);
      }
    }));
    const onFocus = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "focus", onOpen));
    const onBlur = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "focus", onClose));
    const onContextMenu = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, "contextmenu", (e) => {
      e.preventDefault();
      onToggle(e);
    }));
    const onKeydown = event.composeEventHandlers(stopWhenControlledOrDisabled, (e) => {
      const { code } = e;
      if (props.triggerKeys.includes(code)) {
        e.preventDefault();
        onToggle(e);
      }
    });
    expose({
      triggerRef
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(trigger$1["default"]), {
        id: vue.unref(id),
        "virtual-ref": _ctx.virtualRef,
        open: vue.unref(open),
        "virtual-triggering": _ctx.virtualTriggering,
        class: vue.normalizeClass(vue.unref(ns).e("trigger")),
        onBlur: vue.unref(onBlur),
        onClick: vue.unref(onClick),
        onContextmenu: vue.unref(onContextMenu),
        onFocus: vue.unref(onFocus),
        onMouseenter: vue.unref(onMouseenter),
        onMouseleave: vue.unref(onMouseleave),
        onKeydown: vue.unref(onKeydown)
      }, {
        default: vue.withCtx(() => [
          vue.renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "virtual-ref", "open", "virtual-triggering", "class", "onBlur", "onClick", "onContextmenu", "onFocus", "onMouseenter", "onMouseleave", "onKeydown"]);
    };
  }
});
var ElTooltipTrigger = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/trigger.vue"]]);

exports["default"] = ElTooltipTrigger;
//# sourceMappingURL=trigger2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/utils.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tooltip/src/utils.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const isTriggerType = (trigger, type) => {
  if (shared.isArray(trigger)) {
    return trigger.includes(type);
  }
  return trigger === type;
};
const whenTrigger = (trigger, type, handler) => {
  return (e) => {
    isTriggerType(vue.unref(trigger), type) && handler(e);
  };
};

exports.isTriggerType = isTriggerType;
exports.whenTrigger = whenTrigger;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var transfer$1 = __webpack_require__(/*! ./src/transfer2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer2.js");
var transfer = __webpack_require__(/*! ./src/transfer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTransfer = install.withInstall(transfer$1["default"]);

exports.LEFT_CHECK_CHANGE_EVENT = transfer.LEFT_CHECK_CHANGE_EVENT;
exports.RIGHT_CHECK_CHANGE_EVENT = transfer.RIGHT_CHECK_CHANGE_EVENT;
exports.transferCheckedChangeFn = transfer.transferCheckedChangeFn;
exports.transferEmits = transfer.transferEmits;
exports.transferProps = transfer.transferProps;
exports.ElTransfer = ElTransfer;
exports["default"] = ElTransfer;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/index.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/index.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var useCheck = __webpack_require__(/*! ./use-check.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-check.js");
var useCheckedChange = __webpack_require__(/*! ./use-checked-change.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-checked-change.js");
var useComputedData = __webpack_require__(/*! ./use-computed-data.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-computed-data.js");
var useMove = __webpack_require__(/*! ./use-move.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-move.js");
var usePropsAlias = __webpack_require__(/*! ./use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");



exports.useCheck = useCheck.useCheck;
exports.useCheckedChange = useCheckedChange.useCheckedChange;
exports.useComputedData = useComputedData.useComputedData;
exports.useMove = useMove.useMove;
exports.usePropsAlias = usePropsAlias.usePropsAlias;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-check.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-check.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var transferPanel = __webpack_require__(/*! ../transfer-panel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel.js");
var usePropsAlias = __webpack_require__(/*! ./use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const useCheck = (props, panelState, emit) => {
  const propsAlias = usePropsAlias.usePropsAlias(props);
  const filteredData = vue.computed(() => {
    return props.data.filter((item) => {
      if (shared.isFunction(props.filterMethod)) {
        return props.filterMethod(panelState.query, item);
      } else {
        const label = String(item[propsAlias.value.label] || item[propsAlias.value.key]);
        return label.toLowerCase().includes(panelState.query.toLowerCase());
      }
    });
  });
  const checkableData = vue.computed(() => filteredData.value.filter((item) => !item[propsAlias.value.disabled]));
  const checkedSummary = vue.computed(() => {
    const checkedLength = panelState.checked.length;
    const dataLength = props.data.length;
    const { noChecked, hasChecked } = props.format;
    if (noChecked && hasChecked) {
      return checkedLength > 0 ? hasChecked.replace(/\${checked}/g, checkedLength.toString()).replace(/\${total}/g, dataLength.toString()) : noChecked.replace(/\${total}/g, dataLength.toString());
    } else {
      return `${checkedLength}/${dataLength}`;
    }
  });
  const isIndeterminate = vue.computed(() => {
    const checkedLength = panelState.checked.length;
    return checkedLength > 0 && checkedLength < checkableData.value.length;
  });
  const updateAllChecked = () => {
    const checkableDataKeys = checkableData.value.map((item) => item[propsAlias.value.key]);
    panelState.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every((item) => panelState.checked.includes(item));
  };
  const handleAllCheckedChange = (value) => {
    panelState.checked = value ? checkableData.value.map((item) => item[propsAlias.value.key]) : [];
  };
  vue.watch(() => panelState.checked, (val, oldVal) => {
    updateAllChecked();
    if (panelState.checkChangeByUser) {
      const movedKeys = val.concat(oldVal).filter((v) => !val.includes(v) || !oldVal.includes(v));
      emit(transferPanel.CHECKED_CHANGE_EVENT, val, movedKeys);
    } else {
      emit(transferPanel.CHECKED_CHANGE_EVENT, val);
      panelState.checkChangeByUser = true;
    }
  });
  vue.watch(checkableData, () => {
    updateAllChecked();
  });
  vue.watch(() => props.data, () => {
    const checked = [];
    const filteredDataKeys = filteredData.value.map((item) => item[propsAlias.value.key]);
    panelState.checked.forEach((item) => {
      if (filteredDataKeys.includes(item)) {
        checked.push(item);
      }
    });
    panelState.checkChangeByUser = false;
    panelState.checked = checked;
  });
  vue.watch(() => props.defaultChecked, (val, oldVal) => {
    if (oldVal && val.length === oldVal.length && val.every((item) => oldVal.includes(item)))
      return;
    const checked = [];
    const checkableDataKeys = checkableData.value.map((item) => item[propsAlias.value.key]);
    val.forEach((item) => {
      if (checkableDataKeys.includes(item)) {
        checked.push(item);
      }
    });
    panelState.checkChangeByUser = false;
    panelState.checked = checked;
  }, {
    immediate: true
  });
  return {
    filteredData,
    checkableData,
    checkedSummary,
    isIndeterminate,
    updateAllChecked,
    handleAllCheckedChange
  };
};

exports.useCheck = useCheck;
//# sourceMappingURL=use-check.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-checked-change.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-checked-change.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var transfer = __webpack_require__(/*! ../transfer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js");

const useCheckedChange = (checkedState, emit) => {
  const onSourceCheckedChange = (val, movedKeys) => {
    checkedState.leftChecked = val;
    if (!movedKeys)
      return;
    emit(transfer.LEFT_CHECK_CHANGE_EVENT, val, movedKeys);
  };
  const onTargetCheckedChange = (val, movedKeys) => {
    checkedState.rightChecked = val;
    if (!movedKeys)
      return;
    emit(transfer.RIGHT_CHECK_CHANGE_EVENT, val, movedKeys);
  };
  return {
    onSourceCheckedChange,
    onTargetCheckedChange
  };
};

exports.useCheckedChange = useCheckedChange;
//# sourceMappingURL=use-checked-change.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-computed-data.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-computed-data.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var usePropsAlias = __webpack_require__(/*! ./use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");

const useComputedData = (props) => {
  const propsAlias = usePropsAlias.usePropsAlias(props);
  const dataObj = vue.computed(() => props.data.reduce((o, cur) => (o[cur[propsAlias.value.key]] = cur) && o, {}));
  const sourceData = vue.computed(() => props.data.filter((item) => !props.modelValue.includes(item[propsAlias.value.key])));
  const targetData = vue.computed(() => {
    if (props.targetOrder === "original") {
      return props.data.filter((item) => props.modelValue.includes(item[propsAlias.value.key]));
    } else {
      return props.modelValue.reduce((arr, cur) => {
        const val = dataObj.value[cur];
        if (val) {
          arr.push(val);
        }
        return arr;
      }, []);
    }
  });
  return {
    sourceData,
    targetData
  };
};

exports.useComputedData = useComputedData;
//# sourceMappingURL=use-computed-data.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-move.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-move.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var usePropsAlias = __webpack_require__(/*! ./use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");
var event = __webpack_require__(/*! ../../../../constants/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js");

const useMove = (props, checkedState, emit) => {
  const propsAlias = usePropsAlias.usePropsAlias(props);
  const _emit = (value, direction, movedKeys) => {
    emit(event.UPDATE_MODEL_EVENT, value);
    emit(event.CHANGE_EVENT, value, direction, movedKeys);
  };
  const addToLeft = () => {
    const currentValue = props.modelValue.slice();
    checkedState.rightChecked.forEach((item) => {
      const index = currentValue.indexOf(item);
      if (index > -1) {
        currentValue.splice(index, 1);
      }
    });
    _emit(currentValue, "left", checkedState.rightChecked);
  };
  const addToRight = () => {
    let currentValue = props.modelValue.slice();
    const itemsToBeMoved = props.data.filter((item) => {
      const itemKey = item[propsAlias.value.key];
      return checkedState.leftChecked.includes(itemKey) && !props.modelValue.includes(itemKey);
    }).map((item) => item[propsAlias.value.key]);
    currentValue = props.targetOrder === "unshift" ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);
    if (props.targetOrder === "original") {
      currentValue = props.data.filter((item) => currentValue.includes(item[propsAlias.value.key])).map((item) => item[propsAlias.value.key]);
    }
    _emit(currentValue, "right", checkedState.leftChecked);
  };
  return {
    addToLeft,
    addToRight
  };
};

exports.useMove = useMove;
//# sourceMappingURL=use-move.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

const usePropsAlias = (props) => {
  const initProps = {
    label: "label",
    key: "key",
    disabled: "disabled"
  };
  return vue.computed(() => ({
    ...initProps,
    ...props.props
  }));
};

exports.usePropsAlias = usePropsAlias;
//# sourceMappingURL=use-props-alias.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var transfer = __webpack_require__(/*! ./transfer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const CHECKED_CHANGE_EVENT = "checked-change";
const transferPanelProps = runtime.buildProps({
  data: transfer.transferProps.data,
  optionRender: {
    type: runtime.definePropType(Function)
  },
  placeholder: String,
  title: String,
  filterable: Boolean,
  format: transfer.transferProps.format,
  filterMethod: transfer.transferProps.filterMethod,
  defaultChecked: transfer.transferProps.leftDefaultChecked,
  props: transfer.transferProps.props
});
const transferPanelEmits = {
  [CHECKED_CHANGE_EVENT]: transfer.transferCheckedChangeFn
};

exports.CHECKED_CHANGE_EVENT = CHECKED_CHANGE_EVENT;
exports.transferPanelEmits = transferPanelEmits;
exports.transferPanelProps = transferPanelProps;
//# sourceMappingURL=transfer-panel.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel2.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel2.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$2 = __webpack_require__(/*! ../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
var index$3 = __webpack_require__(/*! ../../input/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/input/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var transferPanel = __webpack_require__(/*! ./transfer-panel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel.js");
__webpack_require__(/*! ./composables/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/index.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var usePropsAlias = __webpack_require__(/*! ./composables/use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");
var useCheck = __webpack_require__(/*! ./composables/use-check.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-check.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

const __default__ = vue.defineComponent({
  name: "ElTransferPanel"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: transferPanel.transferPanelProps,
  emits: transferPanel.transferPanelEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = vue.useSlots();
    const OptionContent = ({ option }) => option;
    const { t } = index.useLocale();
    const ns = index$1.useNamespace("transfer");
    const panelState = vue.reactive({
      checked: [],
      allChecked: false,
      query: "",
      checkChangeByUser: true
    });
    const propsAlias = usePropsAlias.usePropsAlias(props);
    const {
      filteredData,
      checkedSummary,
      isIndeterminate,
      handleAllCheckedChange
    } = useCheck.useCheck(props, panelState, emit);
    const hasNoMatch = vue.computed(() => !types.isEmpty(panelState.query) && types.isEmpty(filteredData.value));
    const hasFooter = vue.computed(() => !types.isEmpty(slots.default()[0].children));
    const { checked, allChecked, query } = vue.toRefs(panelState);
    expose({
      query
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass(vue.unref(ns).b("panel"))
      }, [
        vue.createElementVNode("p", {
          class: vue.normalizeClass(vue.unref(ns).be("panel", "header"))
        }, [
          vue.createVNode(vue.unref(index$2.ElCheckbox), {
            modelValue: vue.unref(allChecked),
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => vue.isRef(allChecked) ? allChecked.value = $event : null),
            indeterminate: vue.unref(isIndeterminate),
            "validate-event": false,
            onChange: vue.unref(handleAllCheckedChange)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString(_ctx.title) + " ", 1),
              vue.createElementVNode("span", null, vue.toDisplayString(vue.unref(checkedSummary)), 1)
            ]),
            _: 1
          }, 8, ["modelValue", "indeterminate", "onChange"])
        ], 2),
        vue.createElementVNode("div", {
          class: vue.normalizeClass([vue.unref(ns).be("panel", "body"), vue.unref(ns).is("with-footer", vue.unref(hasFooter))])
        }, [
          _ctx.filterable ? (vue.openBlock(), vue.createBlock(vue.unref(index$3.ElInput), {
            key: 0,
            modelValue: vue.unref(query),
            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => vue.isRef(query) ? query.value = $event : null),
            class: vue.normalizeClass(vue.unref(ns).be("panel", "filter")),
            size: "default",
            placeholder: _ctx.placeholder,
            "prefix-icon": vue.unref(iconsVue.Search),
            clearable: "",
            "validate-event": false
          }, null, 8, ["modelValue", "class", "placeholder", "prefix-icon"])) : vue.createCommentVNode("v-if", true),
          vue.withDirectives(vue.createVNode(vue.unref(index$2.ElCheckboxGroup), {
            modelValue: vue.unref(checked),
            "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => vue.isRef(checked) ? checked.value = $event : null),
            "validate-event": false,
            class: vue.normalizeClass([vue.unref(ns).is("filterable", _ctx.filterable), vue.unref(ns).be("panel", "list")])
          }, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(filteredData), (item) => {
                return vue.openBlock(), vue.createBlock(vue.unref(index$2.ElCheckbox), {
                  key: item[vue.unref(propsAlias).key],
                  class: vue.normalizeClass(vue.unref(ns).be("panel", "item")),
                  label: item[vue.unref(propsAlias).key],
                  disabled: item[vue.unref(propsAlias).disabled],
                  "validate-event": false
                }, {
                  default: vue.withCtx(() => {
                    var _a;
                    return [
                      vue.createVNode(OptionContent, {
                        option: (_a = _ctx.optionRender) == null ? void 0 : _a.call(_ctx, item)
                      }, null, 8, ["option"])
                    ];
                  }),
                  _: 2
                }, 1032, ["class", "label", "disabled"]);
              }), 128))
            ]),
            _: 1
          }, 8, ["modelValue", "class"]), [
            [vue.vShow, !vue.unref(hasNoMatch) && !vue.unref(types.isEmpty)(_ctx.data)]
          ]),
          vue.withDirectives(vue.createElementVNode("p", {
            class: vue.normalizeClass(vue.unref(ns).be("panel", "empty"))
          }, vue.toDisplayString(vue.unref(hasNoMatch) ? vue.unref(t)("el.transfer.noMatch") : vue.unref(t)("el.transfer.noData")), 3), [
            [vue.vShow, vue.unref(hasNoMatch) || vue.unref(types.isEmpty)(_ctx.data)]
          ])
        ], 2),
        vue.unref(hasFooter) ? (vue.openBlock(), vue.createElementBlock("p", {
          key: 0,
          class: vue.normalizeClass(vue.unref(ns).be("panel", "footer"))
        }, [
          vue.renderSlot(_ctx.$slots, "default")
        ], 2)) : vue.createCommentVNode("v-if", true)
      ], 2);
    };
  }
});
var TransferPanel = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer-panel.vue"]]);

exports["default"] = TransferPanel;
//# sourceMappingURL=transfer-panel2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var event = __webpack_require__(/*! ../../../constants/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js");

const LEFT_CHECK_CHANGE_EVENT = "left-check-change";
const RIGHT_CHECK_CHANGE_EVENT = "right-check-change";
const transferProps = runtime.buildProps({
  data: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  titles: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  buttonTexts: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  filterPlaceholder: String,
  filterMethod: {
    type: runtime.definePropType(Function)
  },
  leftDefaultChecked: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  rightDefaultChecked: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  renderContent: {
    type: runtime.definePropType(Function)
  },
  modelValue: {
    type: runtime.definePropType(Array),
    default: () => []
  },
  format: {
    type: runtime.definePropType(Object),
    default: () => ({})
  },
  filterable: Boolean,
  props: {
    type: runtime.definePropType(Object),
    default: () => typescript.mutable({
      label: "label",
      key: "key",
      disabled: "disabled"
    })
  },
  targetOrder: {
    type: String,
    values: ["original", "push", "unshift"],
    default: "original"
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
const transferCheckedChangeFn = (value, movedKeys) => [value, movedKeys].every(shared.isArray) || shared.isArray(value) && lodashUnified.isNil(movedKeys);
const transferEmits = {
  [event.CHANGE_EVENT]: (value, direction, movedKeys) => [value, movedKeys].every(shared.isArray) && ["left", "right"].includes(direction),
  [event.UPDATE_MODEL_EVENT]: (value) => shared.isArray(value),
  [LEFT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,
  [RIGHT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn
};

exports.LEFT_CHECK_CHANGE_EVENT = LEFT_CHECK_CHANGE_EVENT;
exports.RIGHT_CHECK_CHANGE_EVENT = RIGHT_CHECK_CHANGE_EVENT;
exports.transferCheckedChangeFn = transferCheckedChangeFn;
exports.transferEmits = transferEmits;
exports.transferProps = transferProps;
//# sourceMappingURL=transfer.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer2.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer2.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$2 = __webpack_require__(/*! ../../button/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/button/index.js");
var index$3 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var transfer = __webpack_require__(/*! ./transfer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer.js");
__webpack_require__(/*! ./composables/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/index.js");
var transferPanel = __webpack_require__(/*! ./transfer-panel2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/transfer-panel2.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormItem = __webpack_require__(/*! ../../form/src/hooks/use-form-item.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-item.js");
var usePropsAlias = __webpack_require__(/*! ./composables/use-props-alias.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-props-alias.js");
var useComputedData = __webpack_require__(/*! ./composables/use-computed-data.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-computed-data.js");
var useCheckedChange = __webpack_require__(/*! ./composables/use-checked-change.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-checked-change.js");
var useMove = __webpack_require__(/*! ./composables/use-move.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/transfer/src/composables/use-move.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var types = __webpack_require__(/*! ../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");

const _hoisted_1 = { key: 0 };
const _hoisted_2 = { key: 0 };
const __default__ = vue.defineComponent({
  name: "ElTransfer"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: transfer.transferProps,
  emits: transfer.transferEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = vue.useSlots();
    const { t } = index.useLocale();
    const ns = index$1.useNamespace("transfer");
    const { formItem } = useFormItem.useFormItem();
    const checkedState = vue.reactive({
      leftChecked: [],
      rightChecked: []
    });
    const propsAlias = usePropsAlias.usePropsAlias(props);
    const { sourceData, targetData } = useComputedData.useComputedData(props);
    const { onSourceCheckedChange, onTargetCheckedChange } = useCheckedChange.useCheckedChange(checkedState, emit);
    const { addToLeft, addToRight } = useMove.useMove(props, checkedState, emit);
    const leftPanel = vue.ref();
    const rightPanel = vue.ref();
    const clearQuery = (which) => {
      switch (which) {
        case "left":
          leftPanel.value.query = "";
          break;
        case "right":
          rightPanel.value.query = "";
          break;
      }
    };
    const hasButtonTexts = vue.computed(() => props.buttonTexts.length === 2);
    const leftPanelTitle = vue.computed(() => props.titles[0] || t("el.transfer.titles.0"));
    const rightPanelTitle = vue.computed(() => props.titles[1] || t("el.transfer.titles.1"));
    const panelFilterPlaceholder = vue.computed(() => props.filterPlaceholder || t("el.transfer.filterPlaceholder"));
    vue.watch(() => props.modelValue, () => {
      var _a;
      if (props.validateEvent) {
        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, "change").catch((err) => error.debugWarn(err));
      }
    });
    const optionRender = vue.computed(() => (option) => {
      if (props.renderContent)
        return props.renderContent(vue.h, option);
      if (slots.default)
        return slots.default({ option });
      return vue.h("span", option[propsAlias.value.label] || option[propsAlias.value.key]);
    });
    expose({
      clearQuery,
      leftPanel,
      rightPanel
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass(vue.unref(ns).b())
      }, [
        vue.createVNode(transferPanel["default"], {
          ref_key: "leftPanel",
          ref: leftPanel,
          data: vue.unref(sourceData),
          "option-render": vue.unref(optionRender),
          placeholder: vue.unref(panelFilterPlaceholder),
          title: vue.unref(leftPanelTitle),
          filterable: _ctx.filterable,
          format: _ctx.format,
          "filter-method": _ctx.filterMethod,
          "default-checked": _ctx.leftDefaultChecked,
          props: props.props,
          onCheckedChange: vue.unref(onSourceCheckedChange)
        }, {
          default: vue.withCtx(() => [
            vue.renderSlot(_ctx.$slots, "left-footer")
          ]),
          _: 3
        }, 8, ["data", "option-render", "placeholder", "title", "filterable", "format", "filter-method", "default-checked", "props", "onCheckedChange"]),
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(ns).e("buttons"))
        }, [
          vue.createVNode(vue.unref(index$2.ElButton), {
            type: "primary",
            class: vue.normalizeClass([vue.unref(ns).e("button"), vue.unref(ns).is("with-texts", vue.unref(hasButtonTexts))]),
            disabled: vue.unref(types.isEmpty)(checkedState.rightChecked),
            onClick: vue.unref(addToLeft)
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(vue.unref(index$3.ElIcon), null, {
                default: vue.withCtx(() => [
                  vue.createVNode(vue.unref(iconsVue.ArrowLeft))
                ]),
                _: 1
              }),
              !vue.unref(types.isUndefined)(_ctx.buttonTexts[0]) ? (vue.openBlock(), vue.createElementBlock("span", _hoisted_1, vue.toDisplayString(_ctx.buttonTexts[0]), 1)) : vue.createCommentVNode("v-if", true)
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"]),
          vue.createVNode(vue.unref(index$2.ElButton), {
            type: "primary",
            class: vue.normalizeClass([vue.unref(ns).e("button"), vue.unref(ns).is("with-texts", vue.unref(hasButtonTexts))]),
            disabled: vue.unref(types.isEmpty)(checkedState.leftChecked),
            onClick: vue.unref(addToRight)
          }, {
            default: vue.withCtx(() => [
              !vue.unref(types.isUndefined)(_ctx.buttonTexts[1]) ? (vue.openBlock(), vue.createElementBlock("span", _hoisted_2, vue.toDisplayString(_ctx.buttonTexts[1]), 1)) : vue.createCommentVNode("v-if", true),
              vue.createVNode(vue.unref(index$3.ElIcon), null, {
                default: vue.withCtx(() => [
                  vue.createVNode(vue.unref(iconsVue.ArrowRight))
                ]),
                _: 1
              })
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ], 2),
        vue.createVNode(transferPanel["default"], {
          ref_key: "rightPanel",
          ref: rightPanel,
          data: vue.unref(targetData),
          "option-render": vue.unref(optionRender),
          placeholder: vue.unref(panelFilterPlaceholder),
          filterable: _ctx.filterable,
          format: _ctx.format,
          "filter-method": _ctx.filterMethod,
          title: vue.unref(rightPanelTitle),
          "default-checked": _ctx.rightDefaultChecked,
          props: props.props,
          onCheckedChange: vue.unref(onTargetCheckedChange)
        }, {
          default: vue.withCtx(() => [
            vue.renderSlot(_ctx.$slots, "right-footer")
          ]),
          _: 3
        }, 8, ["data", "option-render", "placeholder", "filterable", "format", "filter-method", "title", "default-checked", "props", "onCheckedChange"])
      ], 2);
    };
  }
});
var Transfer = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer.vue"]]);

exports["default"] = Transfer;
//# sourceMappingURL=transfer2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var treeSelect = __webpack_require__(/*! ./src/tree-select.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select.js");

treeSelect["default"].install = (app) => {
  app.component(treeSelect["default"].name, treeSelect["default"]);
};
const _TreeSelect = treeSelect["default"];
const ElTreeSelect = _TreeSelect;

exports.ElTreeSelect = ElTreeSelect;
exports["default"] = _TreeSelect;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/cache-options.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/cache-options.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../select/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/index.js");
var token = __webpack_require__(/*! ../../select/src/token.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/src/token.js");

var CacheOptions = vue.defineComponent({
  props: {
    data: {
      type: Array,
      default: () => []
    }
  },
  setup(props) {
    const select = vue.inject(token.selectKey);
    vue.watch(() => props.data, () => {
      var _a;
      props.data.forEach((item) => {
        if (!select.cachedOptions.has(item.value)) {
          select.cachedOptions.set(item.value, item);
        }
      });
      const inputs = ((_a = select.selectWrapper) == null ? void 0 : _a.querySelectorAll("input")) || [];
      if (!Array.from(inputs).includes(document.activeElement)) {
        select.setSelected();
      }
    }, { flush: "post", immediate: true });
    return () => void 0;
  }
});

exports["default"] = CacheOptions;
//# sourceMappingURL=cache-options.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/select.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/select.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var index$1 = __webpack_require__(/*! ../../select/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const useSelect = (props, { attrs }, {
  tree,
  key
}) => {
  const ns = index.useNamespace("tree-select");
  const result = {
    ...lodashUnified.pick(vue.toRefs(props), Object.keys(index$1.ElSelect.props)),
    ...attrs,
    valueKey: key,
    popperClass: vue.computed(() => {
      const classes = [ns.e("popper")];
      if (props.popperClass)
        classes.push(props.popperClass);
      return classes.join(" ");
    }),
    filterMethod: (keyword = "") => {
      if (props.filterMethod)
        props.filterMethod(keyword);
      vue.nextTick(() => {
        var _a;
        (_a = tree.value) == null ? void 0 : _a.filter(keyword);
      });
    },
    onVisibleChange: (visible) => {
      var _a;
      (_a = attrs.onVisibleChange) == null ? void 0 : _a.call(attrs, visible);
      if (props.filterable && visible) {
        result.filterMethod();
      }
    }
  };
  return result;
};

exports.useSelect = useSelect;
//# sourceMappingURL=select.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select-option.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select-option.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index = __webpack_require__(/*! ../../select/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/index.js");

const component = vue.defineComponent({
  extends: index.ElOption,
  setup(props, ctx) {
    const result = index.ElOption.setup(props, ctx);
    delete result.selectOptionClick;
    const vm = vue.getCurrentInstance().proxy;
    vue.nextTick(() => {
      if (!result.select.cachedOptions.get(vm.value)) {
        result.select.onOptionCreate(vm);
      }
    });
    return result;
  },
  methods: {
    selectOptionClick() {
      this.$el.parentElement.click();
    }
  }
});

exports["default"] = component;
//# sourceMappingURL=tree-select-option.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var index = __webpack_require__(/*! ../../select/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/select/index.js");
var index$1 = __webpack_require__(/*! ../../tree/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/index.js");
var select = __webpack_require__(/*! ./select.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/select.js");
var tree = __webpack_require__(/*! ./tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree.js");
var cacheOptions = __webpack_require__(/*! ./cache-options.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/cache-options.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");

const _sfc_main = vue.defineComponent({
  name: "ElTreeSelect",
  inheritAttrs: false,
  props: {
    ...index.ElSelect.props,
    ...index$1["default"].props,
    cacheData: {
      type: Array,
      default: () => []
    }
  },
  setup(props, context) {
    const { slots, expose } = context;
    const select$1 = vue.ref();
    const tree$1 = vue.ref();
    const key = vue.computed(() => props.nodeKey || props.valueKey || "value");
    const selectProps = select.useSelect(props, context, { select: select$1, tree: tree$1, key });
    const { cacheOptions: cacheOptions$1, ...treeProps } = tree.useTree(props, context, {
      select: select$1,
      tree: tree$1,
      key
    });
    const methods = vue.reactive({});
    expose(methods);
    vue.onMounted(() => {
      Object.assign(methods, {
        ...lodashUnified.pick(tree$1.value, [
          "filter",
          "updateKeyChildren",
          "getCheckedNodes",
          "setCheckedNodes",
          "getCheckedKeys",
          "setCheckedKeys",
          "setChecked",
          "getHalfCheckedNodes",
          "getHalfCheckedKeys",
          "getCurrentKey",
          "getCurrentNode",
          "setCurrentKey",
          "setCurrentNode",
          "getNode",
          "remove",
          "append",
          "insertBefore",
          "insertAfter"
        ]),
        ...lodashUnified.pick(select$1.value, ["focus", "blur"])
      });
    });
    return () => vue.h(index.ElSelect, vue.reactive({
      ...selectProps,
      ref: (ref2) => select$1.value = ref2
    }), {
      ...slots,
      default: () => [
        vue.h(cacheOptions["default"], { data: cacheOptions$1.value }),
        vue.h(index$1["default"], vue.reactive({
          ...treeProps,
          ref: (ref2) => tree$1.value = ref2
        }))
      ]
    });
  }
});
var TreeSelect = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-select/src/tree-select.vue"]]);

exports["default"] = TreeSelect;
//# sourceMappingURL=tree-select.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var index = __webpack_require__(/*! ../../tree/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/index.js");
var treeSelectOption = __webpack_require__(/*! ./tree-select-option.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/tree-select-option.js");
var utils = __webpack_require__(/*! ./utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/utils.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var event = __webpack_require__(/*! ../../../constants/event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js");

const useTree = (props, { attrs, slots, emit }, {
  select,
  tree,
  key
}) => {
  vue.watch(() => props.modelValue, () => {
    if (props.showCheckbox) {
      vue.nextTick(() => {
        const treeInstance = tree.value;
        if (treeInstance && !lodashUnified.isEqual(treeInstance.getCheckedKeys(), utils.toValidArray(props.modelValue))) {
          treeInstance.setCheckedKeys(utils.toValidArray(props.modelValue));
        }
      });
    }
  }, {
    immediate: true,
    deep: true
  });
  const propsMap = vue.computed(() => ({
    value: key.value,
    label: "label",
    children: "children",
    disabled: "disabled",
    isLeaf: "isLeaf",
    ...props.props
  }));
  const getNodeValByProp = (prop, data) => {
    var _a;
    const propVal = propsMap.value[prop];
    if (shared.isFunction(propVal)) {
      return propVal(data, (_a = tree.value) == null ? void 0 : _a.getNode(getNodeValByProp("value", data)));
    } else {
      return data[propVal];
    }
  };
  const defaultExpandedParentKeys = utils.toValidArray(props.modelValue).map((value) => {
    return utils.treeFind(props.data || [], (data) => getNodeValByProp("value", data) === value, (data) => getNodeValByProp("children", data), (data, index, array, parent) => parent && getNodeValByProp("value", parent));
  }).filter((item) => utils.isValidValue(item));
  const cacheOptions = vue.computed(() => {
    if (!props.renderAfterExpand && !props.lazy)
      return [];
    const options = [];
    utils.treeEach(props.data.concat(props.cacheData), (node) => {
      const value = getNodeValByProp("value", node);
      options.push({
        value,
        currentLabel: getNodeValByProp("label", node),
        isDisabled: getNodeValByProp("disabled", node)
      });
    }, (data) => getNodeValByProp("children", data));
    return options;
  });
  const cacheOptionsMap = vue.computed(() => {
    return cacheOptions.value.reduce((prev, next) => ({ ...prev, [next.value]: next }), {});
  });
  return {
    ...lodashUnified.pick(vue.toRefs(props), Object.keys(index["default"].props)),
    ...attrs,
    nodeKey: key,
    expandOnClickNode: vue.computed(() => {
      return !props.checkStrictly && props.expandOnClickNode;
    }),
    defaultExpandedKeys: vue.computed(() => {
      return props.defaultExpandedKeys ? props.defaultExpandedKeys.concat(defaultExpandedParentKeys) : defaultExpandedParentKeys;
    }),
    renderContent: (h, { node, data, store }) => {
      return h(treeSelectOption["default"], {
        value: getNodeValByProp("value", data),
        label: getNodeValByProp("label", data),
        disabled: getNodeValByProp("disabled", data)
      }, props.renderContent ? () => props.renderContent(h, { node, data, store }) : slots.default ? () => slots.default({ node, data, store }) : void 0);
    },
    filterNodeMethod: (value, data, node) => {
      var _a;
      if (props.filterNodeMethod)
        return props.filterNodeMethod(value, data, node);
      if (!value)
        return true;
      return (_a = getNodeValByProp("label", data)) == null ? void 0 : _a.includes(value);
    },
    onNodeClick: (data, node, e) => {
      var _a, _b, _c;
      (_a = attrs.onNodeClick) == null ? void 0 : _a.call(attrs, data, node, e);
      if (props.showCheckbox && props.checkOnClickNode)
        return;
      if (!props.showCheckbox && (props.checkStrictly || node.isLeaf)) {
        if (!getNodeValByProp("disabled", data)) {
          const option = (_b = select.value) == null ? void 0 : _b.options.get(getNodeValByProp("value", data));
          (_c = select.value) == null ? void 0 : _c.handleOptionSelect(option);
        }
      } else if (props.expandOnClickNode) {
        e.proxy.handleExpandIconClick();
      }
    },
    onCheck: (data, params) => {
      if (!props.showCheckbox)
        return;
      const dataValue = getNodeValByProp("value", data);
      const uncachedCheckedKeys = params.checkedKeys;
      const cachedKeys = props.multiple ? utils.toValidArray(props.modelValue).filter((item) => item in cacheOptionsMap.value && !tree.value.getNode(item) && !uncachedCheckedKeys.includes(item)) : [];
      const checkedKeys = uncachedCheckedKeys.concat(cachedKeys);
      if (props.checkStrictly) {
        emit(event.UPDATE_MODEL_EVENT, props.multiple ? checkedKeys : checkedKeys.includes(dataValue) ? dataValue : void 0);
      } else {
        if (props.multiple) {
          emit(event.UPDATE_MODEL_EVENT, tree.value.getCheckedKeys(true));
        } else {
          const firstLeaf = utils.treeFind([data], (data2) => !utils.isValidArray(getNodeValByProp("children", data2)) && !getNodeValByProp("disabled", data2), (data2) => getNodeValByProp("children", data2));
          const firstLeafKey = firstLeaf ? getNodeValByProp("value", firstLeaf) : void 0;
          const hasCheckedChild = utils.isValidValue(props.modelValue) && !!utils.treeFind([data], (data2) => getNodeValByProp("value", data2) === props.modelValue, (data2) => getNodeValByProp("children", data2));
          emit(event.UPDATE_MODEL_EVENT, firstLeafKey === props.modelValue || hasCheckedChild ? void 0 : firstLeafKey);
        }
      }
      vue.nextTick(() => {
        var _a;
        const checkedKeys2 = utils.toValidArray(props.modelValue);
        tree.value.setCheckedKeys(checkedKeys2);
        (_a = attrs.onCheck) == null ? void 0 : _a.call(attrs, data, {
          checkedKeys: tree.value.getCheckedKeys(),
          checkedNodes: tree.value.getCheckedNodes(),
          halfCheckedKeys: tree.value.getHalfCheckedKeys(),
          halfCheckedNodes: tree.value.getHalfCheckedNodes()
        });
      });
    },
    cacheOptions
  };
};

exports.useTree = useTree;
//# sourceMappingURL=tree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/utils.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-select/src/utils.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

function isValidValue(val) {
  return val || val === 0;
}
function isValidArray(val) {
  return Array.isArray(val) && val.length;
}
function toValidArray(val) {
  return Array.isArray(val) ? val : isValidValue(val) ? [val] : [];
}
function treeFind(treeData, findCallback, getChildren, resultCallback, parent) {
  for (let i = 0; i < treeData.length; i++) {
    const data = treeData[i];
    if (findCallback(data, i, treeData, parent)) {
      return resultCallback ? resultCallback(data, i, treeData, parent) : data;
    } else {
      const children = getChildren(data);
      if (isValidArray(children)) {
        const find = treeFind(children, findCallback, getChildren, resultCallback, data);
        if (find)
          return find;
      }
    }
  }
}
function treeEach(treeData, callback, getChildren, parent) {
  for (let i = 0; i < treeData.length; i++) {
    const data = treeData[i];
    callback(data, i, treeData, parent);
    const children = getChildren(data);
    if (isValidArray(children)) {
      treeEach(children, callback, getChildren, data);
    }
  }
}

exports.isValidArray = isValidArray;
exports.isValidValue = isValidValue;
exports.toValidArray = toValidArray;
exports.treeEach = treeEach;
exports.treeFind = treeFind;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var tree = __webpack_require__(/*! ./src/tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElTreeV2 = install.withInstall(tree["default"]);

exports.ElTreeV2 = ElTreeV2;
exports["default"] = ElTreeV2;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useCheck.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useCheck.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var virtualTree = __webpack_require__(/*! ../virtual-tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js");

function useCheck(props, tree) {
  const checkedKeys = vue.ref(/* @__PURE__ */ new Set());
  const indeterminateKeys = vue.ref(/* @__PURE__ */ new Set());
  const { emit } = vue.getCurrentInstance();
  vue.watch([() => tree.value, () => props.defaultCheckedKeys], () => {
    return vue.nextTick(() => {
      _setCheckedKeys(props.defaultCheckedKeys);
    });
  }, {
    immediate: true
  });
  const updateCheckedKeys = () => {
    if (!tree.value || !props.showCheckbox || props.checkStrictly) {
      return;
    }
    const { levelTreeNodeMap, maxLevel } = tree.value;
    const checkedKeySet = checkedKeys.value;
    const indeterminateKeySet = /* @__PURE__ */ new Set();
    for (let level = maxLevel - 1; level >= 1; --level) {
      const nodes = levelTreeNodeMap.get(level);
      if (!nodes)
        continue;
      nodes.forEach((node) => {
        const children = node.children;
        if (children) {
          let allChecked = true;
          let hasChecked = false;
          for (const childNode of children) {
            const key = childNode.key;
            if (checkedKeySet.has(key)) {
              hasChecked = true;
            } else if (indeterminateKeySet.has(key)) {
              allChecked = false;
              hasChecked = true;
              break;
            } else {
              allChecked = false;
            }
          }
          if (allChecked) {
            checkedKeySet.add(node.key);
          } else if (hasChecked) {
            indeterminateKeySet.add(node.key);
            checkedKeySet.delete(node.key);
          } else {
            checkedKeySet.delete(node.key);
            indeterminateKeySet.delete(node.key);
          }
        }
      });
    }
    indeterminateKeys.value = indeterminateKeySet;
  };
  const isChecked = (node) => checkedKeys.value.has(node.key);
  const isIndeterminate = (node) => indeterminateKeys.value.has(node.key);
  const toggleCheckbox = (node, isChecked2, nodeClick = true) => {
    const checkedKeySet = checkedKeys.value;
    const toggle = (node2, checked) => {
      checkedKeySet[checked ? virtualTree.SetOperationEnum.ADD : virtualTree.SetOperationEnum.DELETE](node2.key);
      const children = node2.children;
      if (!props.checkStrictly && children) {
        children.forEach((childNode) => {
          if (!childNode.disabled) {
            toggle(childNode, checked);
          }
        });
      }
    };
    toggle(node, isChecked2);
    updateCheckedKeys();
    if (nodeClick) {
      afterNodeCheck(node, isChecked2);
    }
  };
  const afterNodeCheck = (node, checked) => {
    const { checkedNodes, checkedKeys: checkedKeys2 } = getChecked();
    const { halfCheckedNodes, halfCheckedKeys } = getHalfChecked();
    emit(virtualTree.NODE_CHECK, node.data, {
      checkedKeys: checkedKeys2,
      checkedNodes,
      halfCheckedKeys,
      halfCheckedNodes
    });
    emit(virtualTree.NODE_CHECK_CHANGE, node.data, checked);
  };
  function getCheckedKeys(leafOnly = false) {
    return getChecked(leafOnly).checkedKeys;
  }
  function getCheckedNodes(leafOnly = false) {
    return getChecked(leafOnly).checkedNodes;
  }
  function getHalfCheckedKeys() {
    return getHalfChecked().halfCheckedKeys;
  }
  function getHalfCheckedNodes() {
    return getHalfChecked().halfCheckedNodes;
  }
  function getChecked(leafOnly = false) {
    const checkedNodes = [];
    const keys = [];
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const { treeNodeMap } = tree.value;
      checkedKeys.value.forEach((key) => {
        const node = treeNodeMap.get(key);
        if (node && (!leafOnly || leafOnly && node.isLeaf)) {
          keys.push(key);
          checkedNodes.push(node.data);
        }
      });
    }
    return {
      checkedKeys: keys,
      checkedNodes
    };
  }
  function getHalfChecked() {
    const halfCheckedNodes = [];
    const halfCheckedKeys = [];
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const { treeNodeMap } = tree.value;
      indeterminateKeys.value.forEach((key) => {
        const node = treeNodeMap.get(key);
        if (node) {
          halfCheckedKeys.push(key);
          halfCheckedNodes.push(node.data);
        }
      });
    }
    return {
      halfCheckedNodes,
      halfCheckedKeys
    };
  }
  function setCheckedKeys(keys) {
    checkedKeys.value.clear();
    indeterminateKeys.value.clear();
    _setCheckedKeys(keys);
  }
  function setChecked(key, isChecked2) {
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const node = tree.value.treeNodeMap.get(key);
      if (node) {
        toggleCheckbox(node, isChecked2, false);
      }
    }
  }
  function _setCheckedKeys(keys) {
    if (tree == null ? void 0 : tree.value) {
      const { treeNodeMap } = tree.value;
      if (props.showCheckbox && treeNodeMap && keys) {
        for (const key of keys) {
          const node = treeNodeMap.get(key);
          if (node && !isChecked(node)) {
            toggleCheckbox(node, true, false);
          }
        }
      }
    }
  }
  return {
    updateCheckedKeys,
    toggleCheckbox,
    isChecked,
    isIndeterminate,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys
  };
}

exports.useCheck = useCheck;
//# sourceMappingURL=useCheck.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useFilter.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useFilter.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function useFilter(props, tree) {
  const hiddenNodeKeySet = vue.ref(/* @__PURE__ */ new Set([]));
  const hiddenExpandIconKeySet = vue.ref(/* @__PURE__ */ new Set([]));
  const filterable = vue.computed(() => {
    return shared.isFunction(props.filterMethod);
  });
  function doFilter(query) {
    var _a;
    if (!filterable.value) {
      return;
    }
    const expandKeySet = /* @__PURE__ */ new Set();
    const hiddenExpandIconKeys = hiddenExpandIconKeySet.value;
    const hiddenKeys = hiddenNodeKeySet.value;
    const family = [];
    const nodes = ((_a = tree.value) == null ? void 0 : _a.treeNodes) || [];
    const filter = props.filterMethod;
    hiddenKeys.clear();
    function traverse(nodes2) {
      nodes2.forEach((node) => {
        family.push(node);
        if (filter == null ? void 0 : filter(query, node.data)) {
          family.forEach((member) => {
            expandKeySet.add(member.key);
          });
        } else if (node.isLeaf) {
          hiddenKeys.add(node.key);
        }
        const children = node.children;
        if (children) {
          traverse(children);
        }
        if (!node.isLeaf) {
          if (!expandKeySet.has(node.key)) {
            hiddenKeys.add(node.key);
          } else if (children) {
            let allHidden = true;
            for (const childNode of children) {
              if (!hiddenKeys.has(childNode.key)) {
                allHidden = false;
                break;
              }
            }
            if (allHidden) {
              hiddenExpandIconKeys.add(node.key);
            } else {
              hiddenExpandIconKeys.delete(node.key);
            }
          }
        }
        family.pop();
      });
    }
    traverse(nodes);
    return expandKeySet;
  }
  function isForceHiddenExpandIcon(node) {
    return hiddenExpandIconKeySet.value.has(node.key);
  }
  return {
    hiddenExpandIconKeySet,
    hiddenNodeKeySet,
    doFilter,
    isForceHiddenExpandIcon
  };
}

exports.useFilter = useFilter;
//# sourceMappingURL=useFilter.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useTree.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useTree.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var virtualTree = __webpack_require__(/*! ../virtual-tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js");
var useCheck = __webpack_require__(/*! ./useCheck.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useCheck.js");
var useFilter = __webpack_require__(/*! ./useFilter.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useFilter.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

function useTree(props, emit) {
  const expandedKeySet = vue.ref(new Set(props.defaultExpandedKeys));
  const currentKey = vue.ref();
  const tree = vue.shallowRef();
  vue.watch(() => props.currentNodeKey, (key) => {
    currentKey.value = key;
  }, {
    immediate: true
  });
  vue.watch(() => props.data, (data) => {
    setData(data);
  }, {
    immediate: true
  });
  const {
    isIndeterminate,
    isChecked,
    toggleCheckbox,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys
  } = useCheck.useCheck(props, tree);
  const { doFilter, hiddenNodeKeySet, isForceHiddenExpandIcon } = useFilter.useFilter(props, tree);
  const valueKey = vue.computed(() => {
    var _a;
    return ((_a = props.props) == null ? void 0 : _a.value) || virtualTree.TreeOptionsEnum.KEY;
  });
  const childrenKey = vue.computed(() => {
    var _a;
    return ((_a = props.props) == null ? void 0 : _a.children) || virtualTree.TreeOptionsEnum.CHILDREN;
  });
  const disabledKey = vue.computed(() => {
    var _a;
    return ((_a = props.props) == null ? void 0 : _a.disabled) || virtualTree.TreeOptionsEnum.DISABLED;
  });
  const labelKey = vue.computed(() => {
    var _a;
    return ((_a = props.props) == null ? void 0 : _a.label) || virtualTree.TreeOptionsEnum.LABEL;
  });
  const flattenTree = vue.computed(() => {
    const expandedKeys = expandedKeySet.value;
    const hiddenKeys = hiddenNodeKeySet.value;
    const flattenNodes = [];
    const nodes = tree.value && tree.value.treeNodes || [];
    function traverse() {
      const stack = [];
      for (let i = nodes.length - 1; i >= 0; --i) {
        stack.push(nodes[i]);
      }
      while (stack.length) {
        const node = stack.pop();
        if (!node)
          continue;
        if (!hiddenKeys.has(node.key)) {
          flattenNodes.push(node);
        }
        if (expandedKeys.has(node.key)) {
          const children = node.children;
          if (children) {
            const length = children.length;
            for (let i = length - 1; i >= 0; --i) {
              stack.push(children[i]);
            }
          }
        }
      }
    }
    traverse();
    return flattenNodes;
  });
  const isNotEmpty = vue.computed(() => {
    return flattenTree.value.length > 0;
  });
  function createTree(data) {
    const treeNodeMap = /* @__PURE__ */ new Map();
    const levelTreeNodeMap = /* @__PURE__ */ new Map();
    let maxLevel = 1;
    function traverse(nodes, level = 1, parent = void 0) {
      var _a;
      const siblings = [];
      for (const rawNode of nodes) {
        const value = getKey(rawNode);
        const node = {
          level,
          key: value,
          data: rawNode
        };
        node.label = getLabel(rawNode);
        node.parent = parent;
        const children = getChildren(rawNode);
        node.disabled = getDisabled(rawNode);
        node.isLeaf = !children || children.length === 0;
        if (children && children.length) {
          node.children = traverse(children, level + 1, node);
        }
        siblings.push(node);
        treeNodeMap.set(value, node);
        if (!levelTreeNodeMap.has(level)) {
          levelTreeNodeMap.set(level, []);
        }
        (_a = levelTreeNodeMap.get(level)) == null ? void 0 : _a.push(node);
      }
      if (level > maxLevel) {
        maxLevel = level;
      }
      return siblings;
    }
    const treeNodes = traverse(data);
    return {
      treeNodeMap,
      levelTreeNodeMap,
      maxLevel,
      treeNodes
    };
  }
  function filter(query) {
    const keys = doFilter(query);
    if (keys) {
      expandedKeySet.value = keys;
    }
  }
  function getChildren(node) {
    return node[childrenKey.value];
  }
  function getKey(node) {
    if (!node) {
      return "";
    }
    return node[valueKey.value];
  }
  function getDisabled(node) {
    return node[disabledKey.value];
  }
  function getLabel(node) {
    return node[labelKey.value];
  }
  function toggleExpand(node) {
    const expandedKeys = expandedKeySet.value;
    if (expandedKeys.has(node.key)) {
      collapseNode(node);
    } else {
      expandNode(node);
    }
  }
  function setExpandedKeys(keys) {
    expandedKeySet.value = new Set(keys);
  }
  function handleNodeClick(node, e) {
    emit(virtualTree.NODE_CLICK, node.data, node, e);
    handleCurrentChange(node);
    if (props.expandOnClickNode) {
      toggleExpand(node);
    }
    if (props.showCheckbox && props.checkOnClickNode && !node.disabled) {
      toggleCheckbox(node, !isChecked(node), true);
    }
  }
  function handleCurrentChange(node) {
    if (!isCurrent(node)) {
      currentKey.value = node.key;
      emit(virtualTree.CURRENT_CHANGE, node.data, node);
    }
  }
  function handleNodeCheck(node, checked) {
    toggleCheckbox(node, checked);
  }
  function expandNode(node) {
    const keySet = expandedKeySet.value;
    if (tree.value && props.accordion) {
      const { treeNodeMap } = tree.value;
      keySet.forEach((key) => {
        const treeNode = treeNodeMap.get(key);
        if (node && node.level === (treeNode == null ? void 0 : treeNode.level)) {
          keySet.delete(key);
        }
      });
    }
    keySet.add(node.key);
    emit(virtualTree.NODE_EXPAND, node.data, node);
  }
  function collapseNode(node) {
    expandedKeySet.value.delete(node.key);
    emit(virtualTree.NODE_COLLAPSE, node.data, node);
  }
  function isExpanded(node) {
    return expandedKeySet.value.has(node.key);
  }
  function isDisabled(node) {
    return !!node.disabled;
  }
  function isCurrent(node) {
    const current = currentKey.value;
    return current !== void 0 && current === node.key;
  }
  function getCurrentNode() {
    var _a, _b;
    if (!currentKey.value)
      return void 0;
    return (_b = (_a = tree.value) == null ? void 0 : _a.treeNodeMap.get(currentKey.value)) == null ? void 0 : _b.data;
  }
  function getCurrentKey() {
    return currentKey.value;
  }
  function setCurrentKey(key) {
    currentKey.value = key;
  }
  function setData(data) {
    vue.nextTick(() => tree.value = createTree(data));
  }
  function getNode(data) {
    var _a;
    const key = shared.isObject(data) ? getKey(data) : data;
    return (_a = tree.value) == null ? void 0 : _a.treeNodeMap.get(key);
  }
  return {
    tree,
    flattenTree,
    isNotEmpty,
    getKey,
    getChildren,
    toggleExpand,
    toggleCheckbox,
    isExpanded,
    isChecked,
    isIndeterminate,
    isDisabled,
    isCurrent,
    isForceHiddenExpandIcon,
    handleNodeClick,
    handleNodeCheck,
    getCurrentNode,
    getCurrentKey,
    setCurrentKey,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys,
    filter,
    setData,
    getNode,
    expandNode,
    collapseNode,
    setExpandedKeys
  };
}

exports.useTree = useTree;
//# sourceMappingURL=useTree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node-content.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node-content.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var virtualTree = __webpack_require__(/*! ./virtual-tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

var ElNodeContent = vue.defineComponent({
  name: "ElTreeNodeContent",
  props: virtualTree.treeNodeContentProps,
  setup(props) {
    const tree = vue.inject(virtualTree.ROOT_TREE_INJECTION_KEY);
    const ns = index.useNamespace("tree");
    return () => {
      const node = props.node;
      const { data } = node;
      return (tree == null ? void 0 : tree.ctx.slots.default) ? tree.ctx.slots.default({ node, data }) : vue.h("span", { class: ns.be("node", "label") }, [node == null ? void 0 : node.label]);
    };
  }
});

exports["default"] = ElNodeContent;
//# sourceMappingURL=tree-node-content.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$1 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
var index$2 = __webpack_require__(/*! ../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var treeNodeContent = __webpack_require__(/*! ./tree-node-content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node-content.js");
var virtualTree = __webpack_require__(/*! ./virtual-tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const _hoisted_1 = ["aria-expanded", "aria-disabled", "aria-checked", "data-key", "onClick"];
const __default__ = vue.defineComponent({
  name: "ElTreeNode"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: virtualTree.treeNodeProps,
  emits: virtualTree.treeNodeEmits,
  setup(__props, { emit }) {
    const props = __props;
    const tree = vue.inject(virtualTree.ROOT_TREE_INJECTION_KEY);
    const ns = index.useNamespace("tree");
    const indent = vue.computed(() => {
      var _a;
      return (_a = tree == null ? void 0 : tree.props.indent) != null ? _a : 16;
    });
    const icon = vue.computed(() => {
      var _a;
      return (_a = tree == null ? void 0 : tree.props.icon) != null ? _a : iconsVue.CaretRight;
    });
    const handleClick = (e) => {
      emit("click", props.node, e);
    };
    const handleExpandIconClick = () => {
      emit("toggle", props.node);
    };
    const handleCheckChange = (value) => {
      emit("check", props.node, value);
    };
    const handleContextMenu = (event) => {
      var _a, _b, _c, _d;
      if ((_c = (_b = (_a = tree == null ? void 0 : tree.instance) == null ? void 0 : _a.vnode) == null ? void 0 : _b.props) == null ? void 0 : _c["onNodeContextmenu"]) {
        event.stopPropagation();
        event.preventDefault();
      }
      tree == null ? void 0 : tree.ctx.emit(virtualTree.NODE_CONTEXTMENU, event, (_d = props.node) == null ? void 0 : _d.data, props.node);
    };
    return (_ctx, _cache) => {
      var _a, _b, _c;
      return vue.openBlock(), vue.createElementBlock("div", {
        ref: "node$",
        class: vue.normalizeClass([
          vue.unref(ns).b("node"),
          vue.unref(ns).is("expanded", _ctx.expanded),
          vue.unref(ns).is("current", _ctx.current),
          vue.unref(ns).is("focusable", !_ctx.disabled),
          vue.unref(ns).is("checked", !_ctx.disabled && _ctx.checked)
        ]),
        role: "treeitem",
        tabindex: "-1",
        "aria-expanded": _ctx.expanded,
        "aria-disabled": _ctx.disabled,
        "aria-checked": _ctx.checked,
        "data-key": (_a = _ctx.node) == null ? void 0 : _a.key,
        onClick: vue.withModifiers(handleClick, ["stop"]),
        onContextmenu: handleContextMenu
      }, [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(vue.unref(ns).be("node", "content")),
          style: vue.normalizeStyle({
            paddingLeft: `${(_ctx.node.level - 1) * vue.unref(indent)}px`,
            height: _ctx.itemSize + "px"
          })
        }, [
          vue.unref(icon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {
            key: 0,
            class: vue.normalizeClass([
              vue.unref(ns).is("leaf", !!((_b = _ctx.node) == null ? void 0 : _b.isLeaf)),
              vue.unref(ns).is("hidden", _ctx.hiddenExpandIcon),
              {
                expanded: !((_c = _ctx.node) == null ? void 0 : _c.isLeaf) && _ctx.expanded
              },
              vue.unref(ns).be("node", "expand-icon")
            ]),
            onClick: vue.withModifiers(handleExpandIconClick, ["stop"])
          }, {
            default: vue.withCtx(() => [
              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(icon))))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true),
          _ctx.showCheckbox ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElCheckbox), {
            key: 1,
            "model-value": _ctx.checked,
            indeterminate: _ctx.indeterminate,
            disabled: _ctx.disabled,
            onChange: handleCheckChange,
            onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
            }, ["stop"]))
          }, null, 8, ["model-value", "indeterminate", "disabled"])) : vue.createCommentVNode("v-if", true),
          vue.createVNode(vue.unref(treeNodeContent["default"]), { node: _ctx.node }, null, 8, ["node"])
        ], 6)
      ], 42, _hoisted_1);
    };
  }
});
var ElTreeNode = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree-node.vue"]]);

exports["default"] = ElTreeNode;
//# sourceMappingURL=tree-node.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
__webpack_require__(/*! ../../virtual-list/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js");
var useTree = __webpack_require__(/*! ./composables/useTree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/composables/useTree.js");
var treeNode = __webpack_require__(/*! ./tree-node.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/tree-node.js");
var virtualTree = __webpack_require__(/*! ./virtual-tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var constants = __webpack_require__(/*! ../../form/src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/constants.js");
var index = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var fixedSizeList = __webpack_require__(/*! ../../virtual-list/src/components/fixed-size-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-list.js");

const __default__ = vue.defineComponent({
  name: "ElTreeV2"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: virtualTree.treeProps,
  emits: virtualTree.treeEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = vue.useSlots();
    const treeNodeSize = vue.computed(() => props.itemSize);
    vue.provide(virtualTree.ROOT_TREE_INJECTION_KEY, {
      ctx: {
        emit,
        slots
      },
      props,
      instance: vue.getCurrentInstance()
    });
    vue.provide(constants.formItemContextKey, void 0);
    const { t } = index.useLocale();
    const ns = index$1.useNamespace("tree");
    const {
      flattenTree,
      isNotEmpty,
      toggleExpand,
      isExpanded,
      isIndeterminate,
      isChecked,
      isDisabled,
      isCurrent,
      isForceHiddenExpandIcon,
      handleNodeClick,
      handleNodeCheck,
      toggleCheckbox,
      getCurrentNode,
      getCurrentKey,
      setCurrentKey,
      getCheckedKeys,
      getCheckedNodes,
      getHalfCheckedKeys,
      getHalfCheckedNodes,
      setChecked,
      setCheckedKeys,
      filter,
      setData,
      getNode,
      expandNode,
      collapseNode,
      setExpandedKeys
    } = useTree.useTree(props, emit);
    expose({
      toggleCheckbox,
      getCurrentNode,
      getCurrentKey,
      setCurrentKey,
      getCheckedKeys,
      getCheckedNodes,
      getHalfCheckedKeys,
      getHalfCheckedNodes,
      setChecked,
      setCheckedKeys,
      filter,
      setData,
      getNode,
      expandNode,
      collapseNode,
      setExpandedKeys
    });
    return (_ctx, _cache) => {
      var _a;
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass([vue.unref(ns).b(), { [vue.unref(ns).m("highlight-current")]: _ctx.highlightCurrent }]),
        role: "tree"
      }, [
        vue.unref(isNotEmpty) ? (vue.openBlock(), vue.createBlock(vue.unref(fixedSizeList["default"]), {
          key: 0,
          "class-name": vue.unref(ns).b("virtual-list"),
          data: vue.unref(flattenTree),
          total: vue.unref(flattenTree).length,
          height: _ctx.height,
          "item-size": vue.unref(treeNodeSize),
          "perf-mode": _ctx.perfMode
        }, {
          default: vue.withCtx(({ data, index, style }) => [
            (vue.openBlock(), vue.createBlock(treeNode["default"], {
              key: data[index].key,
              style: vue.normalizeStyle(style),
              node: data[index],
              expanded: vue.unref(isExpanded)(data[index]),
              "show-checkbox": _ctx.showCheckbox,
              checked: vue.unref(isChecked)(data[index]),
              indeterminate: vue.unref(isIndeterminate)(data[index]),
              "item-size": vue.unref(treeNodeSize),
              disabled: vue.unref(isDisabled)(data[index]),
              current: vue.unref(isCurrent)(data[index]),
              "hidden-expand-icon": vue.unref(isForceHiddenExpandIcon)(data[index]),
              onClick: vue.unref(handleNodeClick),
              onToggle: vue.unref(toggleExpand),
              onCheck: vue.unref(handleNodeCheck)
            }, null, 8, ["style", "node", "expanded", "show-checkbox", "checked", "indeterminate", "item-size", "disabled", "current", "hidden-expand-icon", "onClick", "onToggle", "onCheck"]))
          ]),
          _: 1
        }, 8, ["class-name", "data", "total", "height", "item-size", "perf-mode"])) : (vue.openBlock(), vue.createElementBlock("div", {
          key: 1,
          class: vue.normalizeClass(vue.unref(ns).e("empty-block"))
        }, [
          vue.createElementVNode("span", {
            class: vue.normalizeClass(vue.unref(ns).e("empty-text"))
          }, vue.toDisplayString((_a = _ctx.emptyText) != null ? _a : vue.unref(t)("el.tree.emptyText")), 3)
        ], 2))
      ], 2);
    };
  }
});
var TreeV2 = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree.vue"]]);

exports["default"] = TreeV2;
//# sourceMappingURL=tree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree-v2/src/virtual-tree.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");

const ROOT_TREE_INJECTION_KEY = Symbol();
const EMPTY_NODE = {
  key: -1,
  level: -1,
  data: {}
};
var TreeOptionsEnum = /* @__PURE__ */ ((TreeOptionsEnum2) => {
  TreeOptionsEnum2["KEY"] = "id";
  TreeOptionsEnum2["LABEL"] = "label";
  TreeOptionsEnum2["CHILDREN"] = "children";
  TreeOptionsEnum2["DISABLED"] = "disabled";
  return TreeOptionsEnum2;
})(TreeOptionsEnum || {});
var SetOperationEnum = /* @__PURE__ */ ((SetOperationEnum2) => {
  SetOperationEnum2["ADD"] = "add";
  SetOperationEnum2["DELETE"] = "delete";
  return SetOperationEnum2;
})(SetOperationEnum || {});
const itemSize = {
  type: Number,
  default: 26
};
const treeProps = runtime.buildProps({
  data: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  emptyText: {
    type: String
  },
  height: {
    type: Number,
    default: 200
  },
  props: {
    type: runtime.definePropType(Object),
    default: () => typescript.mutable({
      children: "children" /* CHILDREN */,
      label: "label" /* LABEL */,
      disabled: "disabled" /* DISABLED */,
      value: "id" /* KEY */
    })
  },
  highlightCurrent: {
    type: Boolean,
    default: false
  },
  showCheckbox: {
    type: Boolean,
    default: false
  },
  defaultCheckedKeys: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  checkStrictly: {
    type: Boolean,
    default: false
  },
  defaultExpandedKeys: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  indent: {
    type: Number,
    default: 16
  },
  itemSize,
  icon: {
    type: icon.iconPropType
  },
  expandOnClickNode: {
    type: Boolean,
    default: true
  },
  checkOnClickNode: {
    type: Boolean,
    default: false
  },
  currentNodeKey: {
    type: runtime.definePropType([String, Number])
  },
  accordion: {
    type: Boolean,
    default: false
  },
  filterMethod: {
    type: runtime.definePropType(Function)
  },
  perfMode: {
    type: Boolean,
    default: true
  }
});
const treeNodeProps = runtime.buildProps({
  node: {
    type: runtime.definePropType(Object),
    default: () => typescript.mutable(EMPTY_NODE)
  },
  expanded: {
    type: Boolean,
    default: false
  },
  checked: {
    type: Boolean,
    default: false
  },
  indeterminate: {
    type: Boolean,
    default: false
  },
  showCheckbox: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  current: {
    type: Boolean,
    default: false
  },
  hiddenExpandIcon: {
    type: Boolean,
    default: false
  },
  itemSize
});
const treeNodeContentProps = runtime.buildProps({
  node: {
    type: runtime.definePropType(Object),
    required: true
  }
});
const NODE_CLICK = "node-click";
const NODE_EXPAND = "node-expand";
const NODE_COLLAPSE = "node-collapse";
const CURRENT_CHANGE = "current-change";
const NODE_CHECK = "check";
const NODE_CHECK_CHANGE = "check-change";
const NODE_CONTEXTMENU = "node-contextmenu";
const treeEmits = {
  [NODE_CLICK]: (data, node, e) => data && node && e,
  [NODE_EXPAND]: (data, node) => data && node,
  [NODE_COLLAPSE]: (data, node) => data && node,
  [CURRENT_CHANGE]: (data, node) => data && node,
  [NODE_CHECK]: (data, checkedInfo) => data && checkedInfo,
  [NODE_CHECK_CHANGE]: (data, checked) => data && typeof checked === "boolean",
  [NODE_CONTEXTMENU]: (event, data, node) => event && data && node
};
const treeNodeEmits = {
  click: (node, e) => !!(node && e),
  toggle: (node) => !!node,
  check: (node, checked) => node && typeof checked === "boolean"
};

exports.CURRENT_CHANGE = CURRENT_CHANGE;
exports.NODE_CHECK = NODE_CHECK;
exports.NODE_CHECK_CHANGE = NODE_CHECK_CHANGE;
exports.NODE_CLICK = NODE_CLICK;
exports.NODE_COLLAPSE = NODE_COLLAPSE;
exports.NODE_CONTEXTMENU = NODE_CONTEXTMENU;
exports.NODE_EXPAND = NODE_EXPAND;
exports.ROOT_TREE_INJECTION_KEY = ROOT_TREE_INJECTION_KEY;
exports.SetOperationEnum = SetOperationEnum;
exports.TreeOptionsEnum = TreeOptionsEnum;
exports.treeEmits = treeEmits;
exports.treeNodeContentProps = treeNodeContentProps;
exports.treeNodeEmits = treeNodeEmits;
exports.treeNodeProps = treeNodeProps;
exports.treeProps = treeProps;
//# sourceMappingURL=virtual-tree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/index.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var tree = __webpack_require__(/*! ./src/tree.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree.js");

tree["default"].install = (app) => {
  app.component(tree["default"].name, tree["default"]);
};
const _Tree = tree["default"];
const ElTree = _Tree;

exports.ElTree = ElTree;
exports["default"] = _Tree;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/node.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/node.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var util = __webpack_require__(/*! ./util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const getChildState = (node) => {
  let all = true;
  let none = true;
  let allWithoutDisable = true;
  for (let i = 0, j = node.length; i < j; i++) {
    const n = node[i];
    if (n.checked !== true || n.indeterminate) {
      all = false;
      if (!n.disabled) {
        allWithoutDisable = false;
      }
    }
    if (n.checked !== false || n.indeterminate) {
      none = false;
    }
  }
  return { all, none, allWithoutDisable, half: !all && !none };
};
const reInitChecked = function(node) {
  if (node.childNodes.length === 0 || node.loading)
    return;
  const { all, none, half } = getChildState(node.childNodes);
  if (all) {
    node.checked = true;
    node.indeterminate = false;
  } else if (half) {
    node.checked = false;
    node.indeterminate = true;
  } else if (none) {
    node.checked = false;
    node.indeterminate = false;
  }
  const parent = node.parent;
  if (!parent || parent.level === 0)
    return;
  if (!node.store.checkStrictly) {
    reInitChecked(parent);
  }
};
const getPropertyFromData = function(node, prop) {
  const props = node.store.props;
  const data = node.data || {};
  const config = props[prop];
  if (typeof config === "function") {
    return config(data, node);
  } else if (typeof config === "string") {
    return data[config];
  } else if (typeof config === "undefined") {
    const dataProp = data[prop];
    return dataProp === void 0 ? "" : dataProp;
  }
};
let nodeIdSeed = 0;
class Node {
  constructor(options) {
    this.id = nodeIdSeed++;
    this.text = null;
    this.checked = false;
    this.indeterminate = false;
    this.data = null;
    this.expanded = false;
    this.parent = null;
    this.visible = true;
    this.isCurrent = false;
    this.canFocus = false;
    for (const name in options) {
      if (shared.hasOwn(options, name)) {
        this[name] = options[name];
      }
    }
    this.level = 0;
    this.loaded = false;
    this.childNodes = [];
    this.loading = false;
    if (this.parent) {
      this.level = this.parent.level + 1;
    }
  }
  initialize() {
    const store = this.store;
    if (!store) {
      throw new Error("[Node]store is required!");
    }
    store.registerNode(this);
    const props = store.props;
    if (props && typeof props.isLeaf !== "undefined") {
      const isLeaf = getPropertyFromData(this, "isLeaf");
      if (typeof isLeaf === "boolean") {
        this.isLeafByUser = isLeaf;
      }
    }
    if (store.lazy !== true && this.data) {
      this.setData(this.data);
      if (store.defaultExpandAll) {
        this.expanded = true;
        this.canFocus = true;
      }
    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {
      this.expand();
    }
    if (!Array.isArray(this.data)) {
      util.markNodeData(this, this.data);
    }
    if (!this.data)
      return;
    const defaultExpandedKeys = store.defaultExpandedKeys;
    const key = store.key;
    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {
      this.expand(null, store.autoExpandParent);
    }
    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {
      store.currentNode = this;
      store.currentNode.isCurrent = true;
    }
    if (store.lazy) {
      store._initDefaultCheckedNode(this);
    }
    this.updateLeafState();
    if (this.parent && (this.level === 1 || this.parent.expanded === true))
      this.canFocus = true;
  }
  setData(data) {
    if (!Array.isArray(data)) {
      util.markNodeData(this, data);
    }
    this.data = data;
    this.childNodes = [];
    let children;
    if (this.level === 0 && Array.isArray(this.data)) {
      children = this.data;
    } else {
      children = getPropertyFromData(this, "children") || [];
    }
    for (let i = 0, j = children.length; i < j; i++) {
      this.insertChild({ data: children[i] });
    }
  }
  get label() {
    return getPropertyFromData(this, "label");
  }
  get key() {
    const nodeKey = this.store.key;
    if (this.data)
      return this.data[nodeKey];
    return null;
  }
  get disabled() {
    return getPropertyFromData(this, "disabled");
  }
  get nextSibling() {
    const parent = this.parent;
    if (parent) {
      const index = parent.childNodes.indexOf(this);
      if (index > -1) {
        return parent.childNodes[index + 1];
      }
    }
    return null;
  }
  get previousSibling() {
    const parent = this.parent;
    if (parent) {
      const index = parent.childNodes.indexOf(this);
      if (index > -1) {
        return index > 0 ? parent.childNodes[index - 1] : null;
      }
    }
    return null;
  }
  contains(target, deep = true) {
    return (this.childNodes || []).some((child) => child === target || deep && child.contains(target));
  }
  remove() {
    const parent = this.parent;
    if (parent) {
      parent.removeChild(this);
    }
  }
  insertChild(child, index, batch) {
    if (!child)
      throw new Error("InsertChild error: child is required.");
    if (!(child instanceof Node)) {
      if (!batch) {
        const children = this.getChildren(true);
        if (!children.includes(child.data)) {
          if (typeof index === "undefined" || index < 0) {
            children.push(child.data);
          } else {
            children.splice(index, 0, child.data);
          }
        }
      }
      Object.assign(child, {
        parent: this,
        store: this.store
      });
      child = vue.reactive(new Node(child));
      if (child instanceof Node) {
        child.initialize();
      }
    }
    ;
    child.level = this.level + 1;
    if (typeof index === "undefined" || index < 0) {
      this.childNodes.push(child);
    } else {
      this.childNodes.splice(index, 0, child);
    }
    this.updateLeafState();
  }
  insertBefore(child, ref) {
    let index;
    if (ref) {
      index = this.childNodes.indexOf(ref);
    }
    this.insertChild(child, index);
  }
  insertAfter(child, ref) {
    let index;
    if (ref) {
      index = this.childNodes.indexOf(ref);
      if (index !== -1)
        index += 1;
    }
    this.insertChild(child, index);
  }
  removeChild(child) {
    const children = this.getChildren() || [];
    const dataIndex = children.indexOf(child.data);
    if (dataIndex > -1) {
      children.splice(dataIndex, 1);
    }
    const index = this.childNodes.indexOf(child);
    if (index > -1) {
      this.store && this.store.deregisterNode(child);
      child.parent = null;
      this.childNodes.splice(index, 1);
    }
    this.updateLeafState();
  }
  removeChildByData(data) {
    let targetNode = null;
    for (let i = 0; i < this.childNodes.length; i++) {
      if (this.childNodes[i].data === data) {
        targetNode = this.childNodes[i];
        break;
      }
    }
    if (targetNode) {
      this.removeChild(targetNode);
    }
  }
  expand(callback, expandParent) {
    const done = () => {
      if (expandParent) {
        let parent = this.parent;
        while (parent.level > 0) {
          parent.expanded = true;
          parent = parent.parent;
        }
      }
      this.expanded = true;
      if (callback)
        callback();
      this.childNodes.forEach((item) => {
        item.canFocus = true;
      });
    };
    if (this.shouldLoadData()) {
      this.loadData((data) => {
        if (Array.isArray(data)) {
          if (this.checked) {
            this.setChecked(true, true);
          } else if (!this.store.checkStrictly) {
            reInitChecked(this);
          }
          done();
        }
      });
    } else {
      done();
    }
  }
  doCreateChildren(array, defaultProps = {}) {
    array.forEach((item) => {
      this.insertChild(Object.assign({ data: item }, defaultProps), void 0, true);
    });
  }
  collapse() {
    this.expanded = false;
    this.childNodes.forEach((item) => {
      item.canFocus = false;
    });
  }
  shouldLoadData() {
    return this.store.lazy === true && this.store.load && !this.loaded;
  }
  updateLeafState() {
    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== "undefined") {
      this.isLeaf = this.isLeafByUser;
      return;
    }
    const childNodes = this.childNodes;
    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {
      this.isLeaf = !childNodes || childNodes.length === 0;
      return;
    }
    this.isLeaf = false;
  }
  setChecked(value, deep, recursion, passValue) {
    this.indeterminate = value === "half";
    this.checked = value === true;
    if (this.store.checkStrictly)
      return;
    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {
      const { all, allWithoutDisable } = getChildState(this.childNodes);
      if (!this.isLeaf && !all && allWithoutDisable) {
        this.checked = false;
        value = false;
      }
      const handleDescendants = () => {
        if (deep) {
          const childNodes = this.childNodes;
          for (let i = 0, j = childNodes.length; i < j; i++) {
            const child = childNodes[i];
            passValue = passValue || value !== false;
            const isCheck = child.disabled ? child.checked : passValue;
            child.setChecked(isCheck, deep, true, passValue);
          }
          const { half, all: all2 } = getChildState(childNodes);
          if (!all2) {
            this.checked = all2;
            this.indeterminate = half;
          }
        }
      };
      if (this.shouldLoadData()) {
        this.loadData(() => {
          handleDescendants();
          reInitChecked(this);
        }, {
          checked: value !== false
        });
        return;
      } else {
        handleDescendants();
      }
    }
    const parent = this.parent;
    if (!parent || parent.level === 0)
      return;
    if (!recursion) {
      reInitChecked(parent);
    }
  }
  getChildren(forceInit = false) {
    if (this.level === 0)
      return this.data;
    const data = this.data;
    if (!data)
      return null;
    const props = this.store.props;
    let children = "children";
    if (props) {
      children = props.children || "children";
    }
    if (data[children] === void 0) {
      data[children] = null;
    }
    if (forceInit && !data[children]) {
      data[children] = [];
    }
    return data[children];
  }
  updateChildren() {
    const newData = this.getChildren() || [];
    const oldData = this.childNodes.map((node) => node.data);
    const newDataMap = {};
    const newNodes = [];
    newData.forEach((item, index) => {
      const key = item[util.NODE_KEY];
      const isNodeExists = !!key && oldData.findIndex((data) => data[util.NODE_KEY] === key) >= 0;
      if (isNodeExists) {
        newDataMap[key] = { index, data: item };
      } else {
        newNodes.push({ index, data: item });
      }
    });
    if (!this.store.lazy) {
      oldData.forEach((item) => {
        if (!newDataMap[item[util.NODE_KEY]])
          this.removeChildByData(item);
      });
    }
    newNodes.forEach(({ index, data }) => {
      this.insertChild({ data }, index);
    });
    this.updateLeafState();
  }
  loadData(callback, defaultProps = {}) {
    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {
      this.loading = true;
      const resolve = (children) => {
        this.childNodes = [];
        this.doCreateChildren(children, defaultProps);
        this.loaded = true;
        this.loading = false;
        this.updateLeafState();
        if (callback) {
          callback.call(this, children);
        }
      };
      this.store.load(this, resolve);
    } else {
      if (callback) {
        callback.call(this);
      }
    }
  }
}

exports["default"] = Node;
exports.getChildState = getChildState;
//# sourceMappingURL=node.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/tree-store.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/tree-store.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var node = __webpack_require__(/*! ./node.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/node.js");
var util = __webpack_require__(/*! ./util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

class TreeStore {
  constructor(options) {
    this.currentNode = null;
    this.currentNodeKey = null;
    for (const option in options) {
      if (shared.hasOwn(options, option)) {
        this[option] = options[option];
      }
    }
    this.nodesMap = {};
  }
  initialize() {
    this.root = new node["default"]({
      data: this.data,
      store: this
    });
    this.root.initialize();
    if (this.lazy && this.load) {
      const loadFn = this.load;
      loadFn(this.root, (data) => {
        this.root.doCreateChildren(data);
        this._initDefaultCheckedNodes();
      });
    } else {
      this._initDefaultCheckedNodes();
    }
  }
  filter(value) {
    const filterNodeMethod = this.filterNodeMethod;
    const lazy = this.lazy;
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        child.visible = filterNodeMethod.call(child, value, child.data, child);
        traverse(child);
      });
      if (!node.visible && childNodes.length) {
        let allHidden = true;
        allHidden = !childNodes.some((child) => child.visible);
        if (node.root) {
          ;
          node.root.visible = allHidden === false;
        } else {
          ;
          node.visible = allHidden === false;
        }
      }
      if (!value)
        return;
      if (node.visible && !node.isLeaf && !lazy)
        node.expand();
    };
    traverse(this);
  }
  setData(newVal) {
    const instanceChanged = newVal !== this.root.data;
    if (instanceChanged) {
      this.root.setData(newVal);
      this._initDefaultCheckedNodes();
    } else {
      this.root.updateChildren();
    }
  }
  getNode(data) {
    if (data instanceof node["default"])
      return data;
    const key = shared.isObject(data) ? util.getNodeKey(this.key, data) : data;
    return this.nodesMap[key] || null;
  }
  insertBefore(data, refData) {
    const refNode = this.getNode(refData);
    refNode.parent.insertBefore({ data }, refNode);
  }
  insertAfter(data, refData) {
    const refNode = this.getNode(refData);
    refNode.parent.insertAfter({ data }, refNode);
  }
  remove(data) {
    const node = this.getNode(data);
    if (node && node.parent) {
      if (node === this.currentNode) {
        this.currentNode = null;
      }
      node.parent.removeChild(node);
    }
  }
  append(data, parentData) {
    const parentNode = parentData ? this.getNode(parentData) : this.root;
    if (parentNode) {
      parentNode.insertChild({ data });
    }
  }
  _initDefaultCheckedNodes() {
    const defaultCheckedKeys = this.defaultCheckedKeys || [];
    const nodesMap = this.nodesMap;
    defaultCheckedKeys.forEach((checkedKey) => {
      const node = nodesMap[checkedKey];
      if (node) {
        node.setChecked(true, !this.checkStrictly);
      }
    });
  }
  _initDefaultCheckedNode(node) {
    const defaultCheckedKeys = this.defaultCheckedKeys || [];
    if (defaultCheckedKeys.includes(node.key)) {
      node.setChecked(true, !this.checkStrictly);
    }
  }
  setDefaultCheckedKey(newVal) {
    if (newVal !== this.defaultCheckedKeys) {
      this.defaultCheckedKeys = newVal;
      this._initDefaultCheckedNodes();
    }
  }
  registerNode(node) {
    const key = this.key;
    if (!node || !node.data)
      return;
    if (!key) {
      this.nodesMap[node.id] = node;
    } else {
      const nodeKey = node.key;
      if (nodeKey !== void 0)
        this.nodesMap[node.key] = node;
    }
  }
  deregisterNode(node) {
    const key = this.key;
    if (!key || !node || !node.data)
      return;
    node.childNodes.forEach((child) => {
      this.deregisterNode(child);
    });
    delete this.nodesMap[node.key];
  }
  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {
    const checkedNodes = [];
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {
          checkedNodes.push(child.data);
        }
        traverse(child);
      });
    };
    traverse(this);
    return checkedNodes;
  }
  getCheckedKeys(leafOnly = false) {
    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key]);
  }
  getHalfCheckedNodes() {
    const nodes = [];
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        if (child.indeterminate) {
          nodes.push(child.data);
        }
        traverse(child);
      });
    };
    traverse(this);
    return nodes;
  }
  getHalfCheckedKeys() {
    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key]);
  }
  _getAllNodes() {
    const allNodes = [];
    const nodesMap = this.nodesMap;
    for (const nodeKey in nodesMap) {
      if (shared.hasOwn(nodesMap, nodeKey)) {
        allNodes.push(nodesMap[nodeKey]);
      }
    }
    return allNodes;
  }
  updateChildren(key, data) {
    const node = this.nodesMap[key];
    if (!node)
      return;
    const childNodes = node.childNodes;
    for (let i = childNodes.length - 1; i >= 0; i--) {
      const child = childNodes[i];
      this.remove(child.data);
    }
    for (let i = 0, j = data.length; i < j; i++) {
      const child = data[i];
      this.append(child, node.data);
    }
  }
  _setCheckedKeys(key, leafOnly = false, checkedKeys) {
    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level);
    const cache = /* @__PURE__ */ Object.create(null);
    const keys = Object.keys(checkedKeys);
    allNodes.forEach((node) => node.setChecked(false, false));
    for (let i = 0, j = allNodes.length; i < j; i++) {
      const node = allNodes[i];
      const nodeKey = node.data[key].toString();
      const checked = keys.includes(nodeKey);
      if (!checked) {
        if (node.checked && !cache[nodeKey]) {
          node.setChecked(false, false);
        }
        continue;
      }
      let parent = node.parent;
      while (parent && parent.level > 0) {
        cache[parent.data[key]] = true;
        parent = parent.parent;
      }
      if (node.isLeaf || this.checkStrictly) {
        node.setChecked(true, false);
        continue;
      }
      node.setChecked(true, true);
      if (leafOnly) {
        node.setChecked(false, false);
        const traverse = function(node2) {
          const childNodes = node2.childNodes;
          childNodes.forEach((child) => {
            if (!child.isLeaf) {
              child.setChecked(false, false);
            }
            traverse(child);
          });
        };
        traverse(node);
      }
    }
  }
  setCheckedNodes(array, leafOnly = false) {
    const key = this.key;
    const checkedKeys = {};
    array.forEach((item) => {
      checkedKeys[(item || {})[key]] = true;
    });
    this._setCheckedKeys(key, leafOnly, checkedKeys);
  }
  setCheckedKeys(keys, leafOnly = false) {
    this.defaultCheckedKeys = keys;
    const key = this.key;
    const checkedKeys = {};
    keys.forEach((key2) => {
      checkedKeys[key2] = true;
    });
    this._setCheckedKeys(key, leafOnly, checkedKeys);
  }
  setDefaultExpandedKeys(keys) {
    keys = keys || [];
    this.defaultExpandedKeys = keys;
    keys.forEach((key) => {
      const node = this.getNode(key);
      if (node)
        node.expand(null, this.autoExpandParent);
    });
  }
  setChecked(data, checked, deep) {
    const node = this.getNode(data);
    if (node) {
      node.setChecked(!!checked, deep);
    }
  }
  getCurrentNode() {
    return this.currentNode;
  }
  setCurrentNode(currentNode) {
    const prevCurrentNode = this.currentNode;
    if (prevCurrentNode) {
      prevCurrentNode.isCurrent = false;
    }
    this.currentNode = currentNode;
    this.currentNode.isCurrent = true;
  }
  setUserCurrentNode(node, shouldAutoExpandParent = true) {
    const key = node[this.key];
    const currNode = this.nodesMap[key];
    this.setCurrentNode(currNode);
    if (shouldAutoExpandParent && this.currentNode.level > 1) {
      this.currentNode.parent.expand(null, true);
    }
  }
  setCurrentNodeKey(key, shouldAutoExpandParent = true) {
    if (key === null || key === void 0) {
      this.currentNode && (this.currentNode.isCurrent = false);
      this.currentNode = null;
      return;
    }
    const node = this.getNode(key);
    if (node) {
      this.setCurrentNode(node);
      if (shouldAutoExpandParent && this.currentNode.level > 1) {
        this.currentNode.parent.expand(null, true);
      }
    }
  }
}

exports["default"] = TreeStore;
//# sourceMappingURL=tree-store.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useDragNode.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useDragNode.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var style = __webpack_require__(/*! ../../../../utils/dom/style.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/style.js");

const dragEventsKey = Symbol("dragEvents");
function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {
  const ns = index.useNamespace("tree");
  const dragState = vue.ref({
    showDropIndicator: false,
    draggingNode: null,
    dropNode: null,
    allowDrop: true,
    dropType: null
  });
  const treeNodeDragStart = ({ event, treeNode }) => {
    if (typeof props.allowDrag === "function" && !props.allowDrag(treeNode.node)) {
      event.preventDefault();
      return false;
    }
    event.dataTransfer.effectAllowed = "move";
    try {
      event.dataTransfer.setData("text/plain", "");
    } catch (e) {
    }
    dragState.value.draggingNode = treeNode;
    ctx.emit("node-drag-start", treeNode.node, event);
  };
  const treeNodeDragOver = ({ event, treeNode }) => {
    const dropNode = treeNode;
    const oldDropNode = dragState.value.dropNode;
    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {
      style.removeClass(oldDropNode.$el, ns.is("drop-inner"));
    }
    const draggingNode = dragState.value.draggingNode;
    if (!draggingNode || !dropNode)
      return;
    let dropPrev = true;
    let dropInner = true;
    let dropNext = true;
    let userAllowDropInner = true;
    if (typeof props.allowDrop === "function") {
      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, "prev");
      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, "inner");
      dropNext = props.allowDrop(draggingNode.node, dropNode.node, "next");
    }
    event.dataTransfer.dropEffect = dropInner || dropPrev || dropNext ? "move" : "none";
    if ((dropPrev || dropInner || dropNext) && (oldDropNode == null ? void 0 : oldDropNode.node.id) !== dropNode.node.id) {
      if (oldDropNode) {
        ctx.emit("node-drag-leave", draggingNode.node, oldDropNode.node, event);
      }
      ctx.emit("node-drag-enter", draggingNode.node, dropNode.node, event);
    }
    if (dropPrev || dropInner || dropNext) {
      dragState.value.dropNode = dropNode;
    }
    if (dropNode.node.nextSibling === draggingNode.node) {
      dropNext = false;
    }
    if (dropNode.node.previousSibling === draggingNode.node) {
      dropPrev = false;
    }
    if (dropNode.node.contains(draggingNode.node, false)) {
      dropInner = false;
    }
    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {
      dropPrev = false;
      dropInner = false;
      dropNext = false;
    }
    const targetPosition = dropNode.$el.querySelector(`.${ns.be("node", "content")}`).getBoundingClientRect();
    const treePosition = el$.value.getBoundingClientRect();
    let dropType;
    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;
    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;
    let indicatorTop = -9999;
    const distance = event.clientY - targetPosition.top;
    if (distance < targetPosition.height * prevPercent) {
      dropType = "before";
    } else if (distance > targetPosition.height * nextPercent) {
      dropType = "after";
    } else if (dropInner) {
      dropType = "inner";
    } else {
      dropType = "none";
    }
    const iconPosition = dropNode.$el.querySelector(`.${ns.be("node", "expand-icon")}`).getBoundingClientRect();
    const dropIndicator = dropIndicator$.value;
    if (dropType === "before") {
      indicatorTop = iconPosition.top - treePosition.top;
    } else if (dropType === "after") {
      indicatorTop = iconPosition.bottom - treePosition.top;
    }
    dropIndicator.style.top = `${indicatorTop}px`;
    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`;
    if (dropType === "inner") {
      style.addClass(dropNode.$el, ns.is("drop-inner"));
    } else {
      style.removeClass(dropNode.$el, ns.is("drop-inner"));
    }
    dragState.value.showDropIndicator = dropType === "before" || dropType === "after";
    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;
    dragState.value.dropType = dropType;
    ctx.emit("node-drag-over", draggingNode.node, dropNode.node, event);
  };
  const treeNodeDragEnd = (event) => {
    const { draggingNode, dropType, dropNode } = dragState.value;
    event.preventDefault();
    event.dataTransfer.dropEffect = "move";
    if (draggingNode && dropNode) {
      const draggingNodeCopy = { data: draggingNode.node.data };
      if (dropType !== "none") {
        draggingNode.node.remove();
      }
      if (dropType === "before") {
        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);
      } else if (dropType === "after") {
        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);
      } else if (dropType === "inner") {
        dropNode.node.insertChild(draggingNodeCopy);
      }
      if (dropType !== "none") {
        store.value.registerNode(draggingNodeCopy);
      }
      style.removeClass(dropNode.$el, ns.is("drop-inner"));
      ctx.emit("node-drag-end", draggingNode.node, dropNode.node, dropType, event);
      if (dropType !== "none") {
        ctx.emit("node-drop", draggingNode.node, dropNode.node, dropType, event);
      }
    }
    if (draggingNode && !dropNode) {
      ctx.emit("node-drag-end", draggingNode.node, null, dropType, event);
    }
    dragState.value.showDropIndicator = false;
    dragState.value.draggingNode = null;
    dragState.value.dropNode = null;
    dragState.value.allowDrop = true;
  };
  vue.provide(dragEventsKey, {
    treeNodeDragStart,
    treeNodeDragOver,
    treeNodeDragEnd
  });
  return {
    dragState
  };
}

exports.dragEventsKey = dragEventsKey;
exports.useDragNodeHandler = useDragNodeHandler;
//# sourceMappingURL=useDragNode.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useKeydown.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useKeydown.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../../constants/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var aria = __webpack_require__(/*! ../../../../constants/aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");

function useKeydown({ el$ }, store) {
  const ns = index.useNamespace("tree");
  const treeItems = vue.shallowRef([]);
  const checkboxItems = vue.shallowRef([]);
  vue.onMounted(() => {
    initTabIndex();
  });
  vue.onUpdated(() => {
    treeItems.value = Array.from(el$.value.querySelectorAll("[role=treeitem]"));
    checkboxItems.value = Array.from(el$.value.querySelectorAll("input[type=checkbox]"));
  });
  vue.watch(checkboxItems, (val) => {
    val.forEach((checkbox) => {
      checkbox.setAttribute("tabindex", "-1");
    });
  });
  const handleKeydown = (ev) => {
    const currentItem = ev.target;
    if (!currentItem.className.includes(ns.b("node")))
      return;
    const code = ev.code;
    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is("focusable")}[role=treeitem]`));
    const currentIndex = treeItems.value.indexOf(currentItem);
    let nextIndex;
    if ([aria.EVENT_CODE.up, aria.EVENT_CODE.down].includes(code)) {
      ev.preventDefault();
      if (code === aria.EVENT_CODE.up) {
        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;
        const startIndex = nextIndex;
        while (true) {
          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)
            break;
          nextIndex--;
          if (nextIndex === startIndex) {
            nextIndex = -1;
            break;
          }
          if (nextIndex < 0) {
            nextIndex = treeItems.value.length - 1;
          }
        }
      } else {
        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;
        const startIndex = nextIndex;
        while (true) {
          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)
            break;
          nextIndex++;
          if (nextIndex === startIndex) {
            nextIndex = -1;
            break;
          }
          if (nextIndex >= treeItems.value.length) {
            nextIndex = 0;
          }
        }
      }
      nextIndex !== -1 && treeItems.value[nextIndex].focus();
    }
    if ([aria.EVENT_CODE.left, aria.EVENT_CODE.right].includes(code)) {
      ev.preventDefault();
      currentItem.click();
    }
    const hasInput = currentItem.querySelector('[type="checkbox"]');
    if ([aria.EVENT_CODE.enter, aria.EVENT_CODE.space].includes(code) && hasInput) {
      ev.preventDefault();
      hasInput.click();
    }
  };
  core.useEventListener(el$, "keydown", handleKeydown);
  const initTabIndex = () => {
    var _a;
    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is("focusable")}[role=treeitem]`));
    checkboxItems.value = Array.from(el$.value.querySelectorAll("input[type=checkbox]"));
    const checkedItem = el$.value.querySelectorAll(`.${ns.is("checked")}[role=treeitem]`);
    if (checkedItem.length) {
      checkedItem[0].setAttribute("tabindex", "0");
      return;
    }
    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute("tabindex", "0");
  };
}

exports.useKeydown = useKeydown;
//# sourceMappingURL=useKeydown.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useNodeExpandEventBroadcast.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useNodeExpandEventBroadcast.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");

function useNodeExpandEventBroadcast(props) {
  const parentNodeMap = vue.inject("TreeNodeMap", null);
  const currentNodeMap = {
    treeNodeExpand: (node) => {
      if (props.node !== node) {
        props.node.collapse();
      }
    },
    children: []
  };
  if (parentNodeMap) {
    parentNodeMap.children.push(currentNodeMap);
  }
  vue.provide("TreeNodeMap", currentNodeMap);
  return {
    broadcastExpanded: (node) => {
      if (!props.accordion)
        return;
      for (const childNode of currentNodeMap.children) {
        childNode.treeNodeExpand(node);
      }
    }
  };
}

exports.useNodeExpandEventBroadcast = useNodeExpandEventBroadcast;
//# sourceMappingURL=useNodeExpandEventBroadcast.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const NODE_KEY = "$treeNodeId";
const markNodeData = function(node, data) {
  if (!data || data[NODE_KEY])
    return;
  Object.defineProperty(data, NODE_KEY, {
    value: node.id,
    enumerable: false,
    configurable: false,
    writable: false
  });
};
const getNodeKey = function(key, data) {
  if (!key)
    return data[NODE_KEY];
  return data[key];
};
const handleCurrentChange = (store, emit, setCurrent) => {
  const preCurrentNode = store.value.currentNode;
  setCurrent();
  const currentNode = store.value.currentNode;
  if (preCurrentNode === currentNode)
    return;
  emit("current-change", currentNode ? currentNode.data : null, currentNode);
};

exports.NODE_KEY = NODE_KEY;
exports.getNodeKey = getNodeKey;
exports.handleCurrentChange = handleCurrentChange;
exports.markNodeData = markNodeData;
//# sourceMappingURL=util.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node-content.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node-content.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");

const _sfc_main = vue.defineComponent({
  name: "ElTreeNodeContent",
  props: {
    node: {
      type: Object,
      required: true
    },
    renderContent: Function
  },
  setup(props) {
    const ns = index.useNamespace("tree");
    const nodeInstance = vue.inject("NodeInstance");
    const tree = vue.inject("RootTree");
    return () => {
      const node = props.node;
      const { data, store } = node;
      return props.renderContent ? props.renderContent(vue.h, { _self: nodeInstance, node, data, store }) : tree.ctx.slots.default ? tree.ctx.slots.default({ node, data }) : vue.h("span", { class: ns.be("node", "label") }, [node.label]);
    };
  }
});
var NodeContent = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue"]]);

exports["default"] = NodeContent;
//# sourceMappingURL=tree-node-content.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var index = __webpack_require__(/*! ../../collapse-transition/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/collapse-transition/index.js");
var index$1 = __webpack_require__(/*! ../../checkbox/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/checkbox/index.js");
var index$2 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var treeNodeContent = __webpack_require__(/*! ./tree-node-content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node-content.js");
var util = __webpack_require__(/*! ./model/util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js");
var useNodeExpandEventBroadcast = __webpack_require__(/*! ./model/useNodeExpandEventBroadcast.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useNodeExpandEventBroadcast.js");
var useDragNode = __webpack_require__(/*! ./model/useDragNode.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useDragNode.js");
var node = __webpack_require__(/*! ./model/node.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/node.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index$3 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const _sfc_main = vue.defineComponent({
  name: "ElTreeNode",
  components: {
    ElCollapseTransition: index["default"],
    ElCheckbox: index$1.ElCheckbox,
    NodeContent: treeNodeContent["default"],
    ElIcon: index$2.ElIcon,
    Loading: iconsVue.Loading
  },
  props: {
    node: {
      type: node["default"],
      default: () => ({})
    },
    props: {
      type: Object,
      default: () => ({})
    },
    accordion: Boolean,
    renderContent: Function,
    renderAfterExpand: Boolean,
    showCheckbox: {
      type: Boolean,
      default: false
    }
  },
  emits: ["node-expand"],
  setup(props, ctx) {
    const ns = index$3.useNamespace("tree");
    const { broadcastExpanded } = useNodeExpandEventBroadcast.useNodeExpandEventBroadcast(props);
    const tree = vue.inject("RootTree");
    const expanded = vue.ref(false);
    const childNodeRendered = vue.ref(false);
    const oldChecked = vue.ref(null);
    const oldIndeterminate = vue.ref(null);
    const node$ = vue.ref(null);
    const dragEvents = vue.inject(useDragNode.dragEventsKey);
    const instance = vue.getCurrentInstance();
    vue.provide("NodeInstance", instance);
    if (!tree) {
      error.debugWarn("Tree", "Can not find node's tree.");
    }
    if (props.node.expanded) {
      expanded.value = true;
      childNodeRendered.value = true;
    }
    const childrenKey = tree.props.props["children"] || "children";
    vue.watch(() => {
      const children = props.node.data[childrenKey];
      return children && [...children];
    }, () => {
      props.node.updateChildren();
    });
    vue.watch(() => props.node.indeterminate, (val) => {
      handleSelectChange(props.node.checked, val);
    });
    vue.watch(() => props.node.checked, (val) => {
      handleSelectChange(val, props.node.indeterminate);
    });
    vue.watch(() => props.node.expanded, (val) => {
      vue.nextTick(() => expanded.value = val);
      if (val) {
        childNodeRendered.value = true;
      }
    });
    const getNodeKey = (node) => {
      return util.getNodeKey(tree.props.nodeKey, node.data);
    };
    const getNodeClass = (node) => {
      const nodeClassFunc = props.props.class;
      if (!nodeClassFunc) {
        return {};
      }
      let className;
      if (shared.isFunction(nodeClassFunc)) {
        const { data } = node;
        className = nodeClassFunc(data, node);
      } else {
        className = nodeClassFunc;
      }
      if (shared.isString(className)) {
        return { [className]: true };
      } else {
        return className;
      }
    };
    const handleSelectChange = (checked, indeterminate) => {
      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {
        tree.ctx.emit("check-change", props.node.data, checked, indeterminate);
      }
      oldChecked.value = checked;
      oldIndeterminate.value = indeterminate;
    };
    const handleClick = (e) => {
      util.handleCurrentChange(tree.store, tree.ctx.emit, () => tree.store.value.setCurrentNode(props.node));
      tree.currentNode.value = props.node;
      if (tree.props.expandOnClickNode) {
        handleExpandIconClick();
      }
      if (tree.props.checkOnClickNode && !props.node.disabled) {
        handleCheckChange(null, {
          target: { checked: !props.node.checked }
        });
      }
      tree.ctx.emit("node-click", props.node.data, props.node, instance, e);
    };
    const handleContextMenu = (event) => {
      if (tree.instance.vnode.props["onNodeContextmenu"]) {
        event.stopPropagation();
        event.preventDefault();
      }
      tree.ctx.emit("node-contextmenu", event, props.node.data, props.node, instance);
    };
    const handleExpandIconClick = () => {
      if (props.node.isLeaf)
        return;
      if (expanded.value) {
        tree.ctx.emit("node-collapse", props.node.data, props.node, instance);
        props.node.collapse();
      } else {
        props.node.expand();
        ctx.emit("node-expand", props.node.data, props.node, instance);
      }
    };
    const handleCheckChange = (value, ev) => {
      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);
      vue.nextTick(() => {
        const store = tree.store.value;
        tree.ctx.emit("check", props.node.data, {
          checkedNodes: store.getCheckedNodes(),
          checkedKeys: store.getCheckedKeys(),
          halfCheckedNodes: store.getHalfCheckedNodes(),
          halfCheckedKeys: store.getHalfCheckedKeys()
        });
      });
    };
    const handleChildNodeExpand = (nodeData, node, instance2) => {
      broadcastExpanded(node);
      tree.ctx.emit("node-expand", nodeData, node, instance2);
    };
    const handleDragStart = (event) => {
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragStart({ event, treeNode: props });
    };
    const handleDragOver = (event) => {
      event.preventDefault();
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragOver({
        event,
        treeNode: { $el: node$.value, node: props.node }
      });
    };
    const handleDrop = (event) => {
      event.preventDefault();
    };
    const handleDragEnd = (event) => {
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragEnd(event);
    };
    return {
      ns,
      node$,
      tree,
      expanded,
      childNodeRendered,
      oldChecked,
      oldIndeterminate,
      getNodeKey,
      getNodeClass,
      handleSelectChange,
      handleClick,
      handleContextMenu,
      handleExpandIconClick,
      handleCheckChange,
      handleChildNodeExpand,
      handleDragStart,
      handleDragOver,
      handleDrop,
      handleDragEnd,
      CaretRight: iconsVue.CaretRight
    };
  }
});
const _hoisted_1 = ["aria-expanded", "aria-disabled", "aria-checked", "draggable", "data-key"];
const _hoisted_2 = ["aria-expanded"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_icon = vue.resolveComponent("el-icon");
  const _component_el_checkbox = vue.resolveComponent("el-checkbox");
  const _component_loading = vue.resolveComponent("loading");
  const _component_node_content = vue.resolveComponent("node-content");
  const _component_el_tree_node = vue.resolveComponent("el-tree-node");
  const _component_el_collapse_transition = vue.resolveComponent("el-collapse-transition");
  return vue.withDirectives((vue.openBlock(), vue.createElementBlock("div", {
    ref: "node$",
    class: vue.normalizeClass([
      _ctx.ns.b("node"),
      _ctx.ns.is("expanded", _ctx.expanded),
      _ctx.ns.is("current", _ctx.node.isCurrent),
      _ctx.ns.is("hidden", !_ctx.node.visible),
      _ctx.ns.is("focusable", !_ctx.node.disabled),
      _ctx.ns.is("checked", !_ctx.node.disabled && _ctx.node.checked),
      _ctx.getNodeClass(_ctx.node)
    ]),
    role: "treeitem",
    tabindex: "-1",
    "aria-expanded": _ctx.expanded,
    "aria-disabled": _ctx.node.disabled,
    "aria-checked": _ctx.node.checked,
    draggable: _ctx.tree.props.draggable,
    "data-key": _ctx.getNodeKey(_ctx.node),
    onClick: _cache[1] || (_cache[1] = vue.withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), ["stop"])),
    onContextmenu: _cache[2] || (_cache[2] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),
    onDragstart: _cache[3] || (_cache[3] = vue.withModifiers((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), ["stop"])),
    onDragover: _cache[4] || (_cache[4] = vue.withModifiers((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), ["stop"])),
    onDragend: _cache[5] || (_cache[5] = vue.withModifiers((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), ["stop"])),
    onDrop: _cache[6] || (_cache[6] = vue.withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), ["stop"]))
  }, [
    vue.createElementVNode("div", {
      class: vue.normalizeClass(_ctx.ns.be("node", "content")),
      style: vue.normalizeStyle({ paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + "px" })
    }, [
      _ctx.tree.props.icon || _ctx.CaretRight ? (vue.openBlock(), vue.createBlock(_component_el_icon, {
        key: 0,
        class: vue.normalizeClass([
          _ctx.ns.be("node", "expand-icon"),
          _ctx.ns.is("leaf", _ctx.node.isLeaf),
          {
            expanded: !_ctx.node.isLeaf && _ctx.expanded
          }
        ]),
        onClick: vue.withModifiers(_ctx.handleExpandIconClick, ["stop"])
      }, {
        default: vue.withCtx(() => [
          (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))
        ]),
        _: 1
      }, 8, ["class", "onClick"])) : vue.createCommentVNode("v-if", true),
      _ctx.showCheckbox ? (vue.openBlock(), vue.createBlock(_component_el_checkbox, {
        key: 1,
        "model-value": _ctx.node.checked,
        indeterminate: _ctx.node.indeterminate,
        disabled: !!_ctx.node.disabled,
        onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
        }, ["stop"])),
        onChange: _ctx.handleCheckChange
      }, null, 8, ["model-value", "indeterminate", "disabled", "onChange"])) : vue.createCommentVNode("v-if", true),
      _ctx.node.loading ? (vue.openBlock(), vue.createBlock(_component_el_icon, {
        key: 2,
        class: vue.normalizeClass([_ctx.ns.be("node", "loading-icon"), _ctx.ns.is("loading")])
      }, {
        default: vue.withCtx(() => [
          vue.createVNode(_component_loading)
        ]),
        _: 1
      }, 8, ["class"])) : vue.createCommentVNode("v-if", true),
      vue.createVNode(_component_node_content, {
        node: _ctx.node,
        "render-content": _ctx.renderContent
      }, null, 8, ["node", "render-content"])
    ], 6),
    vue.createVNode(_component_el_collapse_transition, null, {
      default: vue.withCtx(() => [
        !_ctx.renderAfterExpand || _ctx.childNodeRendered ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("div", {
          key: 0,
          class: vue.normalizeClass(_ctx.ns.be("node", "children")),
          role: "group",
          "aria-expanded": _ctx.expanded
        }, [
          (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.node.childNodes, (child) => {
            return vue.openBlock(), vue.createBlock(_component_el_tree_node, {
              key: _ctx.getNodeKey(child),
              "render-content": _ctx.renderContent,
              "render-after-expand": _ctx.renderAfterExpand,
              "show-checkbox": _ctx.showCheckbox,
              node: child,
              accordion: _ctx.accordion,
              props: _ctx.props,
              onNodeExpand: _ctx.handleChildNodeExpand
            }, null, 8, ["render-content", "render-after-expand", "show-checkbox", "node", "accordion", "props", "onNodeExpand"]);
          }), 128))
        ], 10, _hoisted_2)), [
          [vue.vShow, _ctx.expanded]
        ]) : vue.createCommentVNode("v-if", true)
      ]),
      _: 1
    })
  ], 42, _hoisted_1)), [
    [vue.vShow, _ctx.node.visible]
  ]);
}
var ElTreeNode = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue"]]);

exports["default"] = ElTreeNode;
//# sourceMappingURL=tree-node.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var treeStore = __webpack_require__(/*! ./model/tree-store.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/tree-store.js");
var util = __webpack_require__(/*! ./model/util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/util.js");
var treeNode = __webpack_require__(/*! ./tree-node.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/tree-node.js");
var useNodeExpandEventBroadcast = __webpack_require__(/*! ./model/useNodeExpandEventBroadcast.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useNodeExpandEventBroadcast.js");
var useDragNode = __webpack_require__(/*! ./model/useDragNode.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useDragNode.js");
var useKeydown = __webpack_require__(/*! ./model/useKeydown.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/tree/src/model/useKeydown.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var icon = __webpack_require__(/*! ../../../utils/vue/icon.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/icon.js");
var index = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var constants = __webpack_require__(/*! ../../form/src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/constants.js");

const _sfc_main = vue.defineComponent({
  name: "ElTree",
  components: { ElTreeNode: treeNode["default"] },
  props: {
    data: {
      type: Array,
      default: () => []
    },
    emptyText: {
      type: String
    },
    renderAfterExpand: {
      type: Boolean,
      default: true
    },
    nodeKey: String,
    checkStrictly: Boolean,
    defaultExpandAll: Boolean,
    expandOnClickNode: {
      type: Boolean,
      default: true
    },
    checkOnClickNode: Boolean,
    checkDescendants: {
      type: Boolean,
      default: false
    },
    autoExpandParent: {
      type: Boolean,
      default: true
    },
    defaultCheckedKeys: Array,
    defaultExpandedKeys: Array,
    currentNodeKey: [String, Number],
    renderContent: Function,
    showCheckbox: {
      type: Boolean,
      default: false
    },
    draggable: {
      type: Boolean,
      default: false
    },
    allowDrag: Function,
    allowDrop: Function,
    props: {
      type: Object,
      default: () => ({
        children: "children",
        label: "label",
        disabled: "disabled"
      })
    },
    lazy: {
      type: Boolean,
      default: false
    },
    highlightCurrent: Boolean,
    load: Function,
    filterNodeMethod: Function,
    accordion: Boolean,
    indent: {
      type: Number,
      default: 18
    },
    icon: {
      type: icon.iconPropType
    }
  },
  emits: [
    "check-change",
    "current-change",
    "node-click",
    "node-contextmenu",
    "node-collapse",
    "node-expand",
    "check",
    "node-drag-start",
    "node-drag-end",
    "node-drop",
    "node-drag-leave",
    "node-drag-enter",
    "node-drag-over"
  ],
  setup(props, ctx) {
    const { t } = index.useLocale();
    const ns = index$1.useNamespace("tree");
    const store = vue.ref(new treeStore["default"]({
      key: props.nodeKey,
      data: props.data,
      lazy: props.lazy,
      props: props.props,
      load: props.load,
      currentNodeKey: props.currentNodeKey,
      checkStrictly: props.checkStrictly,
      checkDescendants: props.checkDescendants,
      defaultCheckedKeys: props.defaultCheckedKeys,
      defaultExpandedKeys: props.defaultExpandedKeys,
      autoExpandParent: props.autoExpandParent,
      defaultExpandAll: props.defaultExpandAll,
      filterNodeMethod: props.filterNodeMethod
    }));
    store.value.initialize();
    const root = vue.ref(store.value.root);
    const currentNode = vue.ref(null);
    const el$ = vue.ref(null);
    const dropIndicator$ = vue.ref(null);
    const { broadcastExpanded } = useNodeExpandEventBroadcast.useNodeExpandEventBroadcast(props);
    const { dragState } = useDragNode.useDragNodeHandler({
      props,
      ctx,
      el$,
      dropIndicator$,
      store
    });
    useKeydown.useKeydown({ el$ }, store);
    const isEmpty = vue.computed(() => {
      const { childNodes } = root.value;
      return !childNodes || childNodes.length === 0 || childNodes.every(({ visible }) => !visible);
    });
    vue.watch(() => props.currentNodeKey, (newVal) => {
      store.value.setCurrentNodeKey(newVal);
    });
    vue.watch(() => props.defaultCheckedKeys, (newVal) => {
      store.value.setDefaultCheckedKey(newVal);
    });
    vue.watch(() => props.defaultExpandedKeys, (newVal) => {
      store.value.setDefaultExpandedKeys(newVal);
    });
    vue.watch(() => props.data, (newVal) => {
      store.value.setData(newVal);
    }, { deep: true });
    vue.watch(() => props.checkStrictly, (newVal) => {
      store.value.checkStrictly = newVal;
    });
    const filter = (value) => {
      if (!props.filterNodeMethod)
        throw new Error("[Tree] filterNodeMethod is required when filter");
      store.value.filter(value);
    };
    const getNodeKey = (node) => {
      return util.getNodeKey(props.nodeKey, node.data);
    };
    const getNodePath = (data) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in getNodePath");
      const node = store.value.getNode(data);
      if (!node)
        return [];
      const path = [node.data];
      let parent = node.parent;
      while (parent && parent !== root.value) {
        path.push(parent.data);
        parent = parent.parent;
      }
      return path.reverse();
    };
    const getCheckedNodes = (leafOnly, includeHalfChecked) => {
      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);
    };
    const getCheckedKeys = (leafOnly) => {
      return store.value.getCheckedKeys(leafOnly);
    };
    const getCurrentNode = () => {
      const currentNode2 = store.value.getCurrentNode();
      return currentNode2 ? currentNode2.data : null;
    };
    const getCurrentKey = () => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in getCurrentKey");
      const currentNode2 = getCurrentNode();
      return currentNode2 ? currentNode2[props.nodeKey] : null;
    };
    const setCheckedNodes = (nodes, leafOnly) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedNodes");
      store.value.setCheckedNodes(nodes, leafOnly);
    };
    const setCheckedKeys = (keys, leafOnly) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedKeys");
      store.value.setCheckedKeys(keys, leafOnly);
    };
    const setChecked = (data, checked, deep) => {
      store.value.setChecked(data, checked, deep);
    };
    const getHalfCheckedNodes = () => {
      return store.value.getHalfCheckedNodes();
    };
    const getHalfCheckedKeys = () => {
      return store.value.getHalfCheckedKeys();
    };
    const setCurrentNode = (node, shouldAutoExpandParent = true) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentNode");
      util.handleCurrentChange(store, ctx.emit, () => store.value.setUserCurrentNode(node, shouldAutoExpandParent));
    };
    const setCurrentKey = (key, shouldAutoExpandParent = true) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentKey");
      util.handleCurrentChange(store, ctx.emit, () => store.value.setCurrentNodeKey(key, shouldAutoExpandParent));
    };
    const getNode = (data) => {
      return store.value.getNode(data);
    };
    const remove = (data) => {
      store.value.remove(data);
    };
    const append = (data, parentNode) => {
      store.value.append(data, parentNode);
    };
    const insertBefore = (data, refNode) => {
      store.value.insertBefore(data, refNode);
    };
    const insertAfter = (data, refNode) => {
      store.value.insertAfter(data, refNode);
    };
    const handleNodeExpand = (nodeData, node, instance) => {
      broadcastExpanded(node);
      ctx.emit("node-expand", nodeData, node, instance);
    };
    const updateKeyChildren = (key, data) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in updateKeyChild");
      store.value.updateChildren(key, data);
    };
    vue.provide("RootTree", {
      ctx,
      props,
      store,
      root,
      currentNode,
      instance: vue.getCurrentInstance()
    });
    vue.provide(constants.formItemContextKey, void 0);
    return {
      ns,
      store,
      root,
      currentNode,
      dragState,
      el$,
      dropIndicator$,
      isEmpty,
      filter,
      getNodeKey,
      getNodePath,
      getCheckedNodes,
      getCheckedKeys,
      getCurrentNode,
      getCurrentKey,
      setCheckedNodes,
      setCheckedKeys,
      setChecked,
      getHalfCheckedNodes,
      getHalfCheckedKeys,
      setCurrentNode,
      setCurrentKey,
      t,
      getNode,
      remove,
      append,
      insertBefore,
      insertAfter,
      handleNodeExpand,
      updateKeyChildren
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tree_node = vue.resolveComponent("el-tree-node");
  return vue.openBlock(), vue.createElementBlock("div", {
    ref: "el$",
    class: vue.normalizeClass([
      _ctx.ns.b(),
      _ctx.ns.is("dragging", !!_ctx.dragState.draggingNode),
      _ctx.ns.is("drop-not-allow", !_ctx.dragState.allowDrop),
      _ctx.ns.is("drop-inner", _ctx.dragState.dropType === "inner"),
      { [_ctx.ns.m("highlight-current")]: _ctx.highlightCurrent }
    ]),
    role: "tree"
  }, [
    (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.root.childNodes, (child) => {
      return vue.openBlock(), vue.createBlock(_component_el_tree_node, {
        key: _ctx.getNodeKey(child),
        node: child,
        props: _ctx.props,
        accordion: _ctx.accordion,
        "render-after-expand": _ctx.renderAfterExpand,
        "show-checkbox": _ctx.showCheckbox,
        "render-content": _ctx.renderContent,
        onNodeExpand: _ctx.handleNodeExpand
      }, null, 8, ["node", "props", "accordion", "render-after-expand", "show-checkbox", "render-content", "onNodeExpand"]);
    }), 128)),
    _ctx.isEmpty ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: vue.normalizeClass(_ctx.ns.e("empty-block"))
    }, [
      vue.renderSlot(_ctx.$slots, "empty", {}, () => {
        var _a;
        return [
          vue.createElementVNode("span", {
            class: vue.normalizeClass(_ctx.ns.e("empty-text"))
          }, vue.toDisplayString((_a = _ctx.emptyText) != null ? _a : _ctx.t("el.tree.emptyText")), 3)
        ];
      })
    ], 2)) : vue.createCommentVNode("v-if", true),
    vue.withDirectives(vue.createElementVNode("div", {
      ref: "dropIndicator$",
      class: vue.normalizeClass(_ctx.ns.e("drop-indicator"))
    }, null, 2), [
      [vue.vShow, _ctx.dragState.showDropIndicator]
    ])
  ], 2);
}
var Tree = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree.vue"]]);

exports["default"] = Tree;
//# sourceMappingURL=tree.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/index.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var upload$1 = __webpack_require__(/*! ./src/upload2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload2.js");
var upload = __webpack_require__(/*! ./src/upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var uploadContent = __webpack_require__(/*! ./src/upload-content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content.js");
var uploadList = __webpack_require__(/*! ./src/upload-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list.js");
var uploadDragger = __webpack_require__(/*! ./src/upload-dragger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger.js");
var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/constants.js");
var install = __webpack_require__(/*! ../../utils/vue/install.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/install.js");

const ElUpload = install.withInstall(upload$1["default"]);

exports.genFileId = upload.genFileId;
exports.uploadBaseProps = upload.uploadBaseProps;
exports.uploadListTypes = upload.uploadListTypes;
exports.uploadProps = upload.uploadProps;
exports.uploadContentProps = uploadContent.uploadContentProps;
exports.uploadListEmits = uploadList.uploadListEmits;
exports.uploadListProps = uploadList.uploadListProps;
exports.uploadDraggerEmits = uploadDragger.uploadDraggerEmits;
exports.uploadDraggerProps = uploadDragger.uploadDraggerProps;
exports.uploadContextKey = constants.uploadContextKey;
exports.ElUpload = ElUpload;
exports["default"] = ElUpload;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/ajax.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/ajax.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const SCOPE = "ElUpload";
class UploadAjaxError extends Error {
  constructor(message, status, method, url) {
    super(message);
    this.name = "UploadAjaxError";
    this.status = status;
    this.method = method;
    this.url = url;
  }
}
function getError(action, option, xhr) {
  let msg;
  if (xhr.response) {
    msg = `${xhr.response.error || xhr.response}`;
  } else if (xhr.responseText) {
    msg = `${xhr.responseText}`;
  } else {
    msg = `fail to ${option.method} ${action} ${xhr.status}`;
  }
  return new UploadAjaxError(msg, xhr.status, option.method, action);
}
function getBody(xhr) {
  const text = xhr.responseText || xhr.response;
  if (!text) {
    return text;
  }
  try {
    return JSON.parse(text);
  } catch (e) {
    return text;
  }
}
const ajaxUpload = (option) => {
  if (typeof XMLHttpRequest === "undefined")
    error.throwError(SCOPE, "XMLHttpRequest is undefined");
  const xhr = new XMLHttpRequest();
  const action = option.action;
  if (xhr.upload) {
    xhr.upload.addEventListener("progress", (evt) => {
      const progressEvt = evt;
      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;
      option.onProgress(progressEvt);
    });
  }
  const formData = new FormData();
  if (option.data) {
    for (const [key, value] of Object.entries(option.data)) {
      if (shared.isArray(value) && value.length)
        formData.append(key, ...value);
      else
        formData.append(key, value);
    }
  }
  formData.append(option.filename, option.file, option.file.name);
  xhr.addEventListener("error", () => {
    option.onError(getError(action, option, xhr));
  });
  xhr.addEventListener("load", () => {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(action, option, xhr));
    }
    option.onSuccess(getBody(xhr));
  });
  xhr.open(option.method, action, true);
  if (option.withCredentials && "withCredentials" in xhr) {
    xhr.withCredentials = true;
  }
  const headers = option.headers || {};
  if (headers instanceof Headers) {
    headers.forEach((value, key) => xhr.setRequestHeader(key, value));
  } else {
    for (const [key, value] of Object.entries(headers)) {
      if (lodashUnified.isNil(value))
        continue;
      xhr.setRequestHeader(key, String(value));
    }
  }
  xhr.send(formData);
  return xhr;
};

exports.UploadAjaxError = UploadAjaxError;
exports.ajaxUpload = ajaxUpload;
//# sourceMappingURL=ajax.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/constants.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/constants.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const uploadContextKey = Symbol("uploadContextKey");

exports.uploadContextKey = uploadContextKey;
//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var upload = __webpack_require__(/*! ./upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const uploadContentProps = runtime.buildProps({
  ...upload.uploadBaseProps,
  beforeUpload: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onRemove: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onStart: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onSuccess: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onProgress: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onError: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onExceed: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  }
});

exports.uploadContentProps = uploadContentProps;
//# sourceMappingURL=upload-content.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content2.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content2.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var uploadDragger = __webpack_require__(/*! ./upload-dragger2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger2.js");
var uploadContent = __webpack_require__(/*! ./upload-content.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content.js");
var upload = __webpack_require__(/*! ./upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");
var objects = __webpack_require__(/*! ../../../utils/objects.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/objects.js");

const _hoisted_1 = ["onKeydown"];
const _hoisted_2 = ["name", "multiple", "accept"];
const __default__ = vue.defineComponent({
  name: "ElUploadContent",
  inheritAttrs: false
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: uploadContent.uploadContentProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = index.useNamespace("upload");
    const disabled = useFormCommonProps.useFormDisabled();
    const requests = vue.shallowRef({});
    const inputRef = vue.shallowRef();
    const uploadFiles = (files) => {
      if (files.length === 0)
        return;
      const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props;
      if (limit && fileList.length + files.length > limit) {
        onExceed(files, fileList);
        return;
      }
      if (!multiple) {
        files = files.slice(0, 1);
      }
      for (const file of files) {
        const rawFile = file;
        rawFile.uid = upload.genFileId();
        onStart(rawFile);
        if (autoUpload)
          upload$1(rawFile);
      }
    };
    const upload$1 = async (rawFile) => {
      inputRef.value.value = "";
      if (!props.beforeUpload) {
        return doUpload(rawFile);
      }
      let hookResult;
      let beforeData = {};
      try {
        const originData = props.data;
        const beforeUploadPromise = props.beforeUpload(rawFile);
        beforeData = shared.isObject(props.data) ? lodashUnified.cloneDeep(props.data) : props.data;
        hookResult = await beforeUploadPromise;
        if (shared.isObject(props.data) && lodashUnified.isEqual(originData, beforeData)) {
          beforeData = lodashUnified.cloneDeep(props.data);
        }
      } catch (e) {
        hookResult = false;
      }
      if (hookResult === false) {
        props.onRemove(rawFile);
        return;
      }
      let file = rawFile;
      if (hookResult instanceof Blob) {
        if (hookResult instanceof File) {
          file = hookResult;
        } else {
          file = new File([hookResult], rawFile.name, {
            type: rawFile.type
          });
        }
      }
      doUpload(Object.assign(file, {
        uid: rawFile.uid
      }), beforeData);
    };
    const doUpload = (rawFile, beforeData) => {
      const {
        headers,
        data,
        method,
        withCredentials,
        name: filename,
        action,
        onProgress,
        onSuccess,
        onError,
        httpRequest
      } = props;
      const { uid } = rawFile;
      const options = {
        headers: headers || {},
        withCredentials,
        file: rawFile,
        data: beforeData != null ? beforeData : data,
        method,
        filename,
        action,
        onProgress: (evt) => {
          onProgress(evt, rawFile);
        },
        onSuccess: (res) => {
          onSuccess(res, rawFile);
          delete requests.value[uid];
        },
        onError: (err) => {
          onError(err, rawFile);
          delete requests.value[uid];
        }
      };
      const request = httpRequest(options);
      requests.value[uid] = request;
      if (request instanceof Promise) {
        request.then(options.onSuccess, options.onError);
      }
    };
    const handleChange = (e) => {
      const files = e.target.files;
      if (!files)
        return;
      uploadFiles(Array.from(files));
    };
    const handleClick = () => {
      if (!disabled.value) {
        inputRef.value.value = "";
        inputRef.value.click();
      }
    };
    const handleKeydown = () => {
      handleClick();
    };
    const abort = (file) => {
      const _reqs = objects.entriesOf(requests.value).filter(file ? ([uid]) => String(file.uid) === uid : () => true);
      _reqs.forEach(([uid, req]) => {
        if (req instanceof XMLHttpRequest)
          req.abort();
        delete requests.value[uid];
      });
    };
    expose({
      abort,
      upload: upload$1
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).m(_ctx.listType), vue.unref(ns).is("drag", _ctx.drag)]),
        tabindex: "0",
        onClick: handleClick,
        onKeydown: vue.withKeys(vue.withModifiers(handleKeydown, ["self"]), ["enter", "space"])
      }, [
        _ctx.drag ? (vue.openBlock(), vue.createBlock(uploadDragger["default"], {
          key: 0,
          disabled: vue.unref(disabled),
          onFile: uploadFiles
        }, {
          default: vue.withCtx(() => [
            vue.renderSlot(_ctx.$slots, "default")
          ]),
          _: 3
        }, 8, ["disabled"])) : vue.renderSlot(_ctx.$slots, "default", { key: 1 }),
        vue.createElementVNode("input", {
          ref_key: "inputRef",
          ref: inputRef,
          class: vue.normalizeClass(vue.unref(ns).e("input")),
          name: _ctx.name,
          multiple: _ctx.multiple,
          accept: _ctx.accept,
          type: "file",
          onChange: handleChange,
          onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
          }, ["stop"]))
        }, null, 42, _hoisted_2)
      ], 42, _hoisted_1);
    };
  }
});
var UploadContent = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue"]]);

exports["default"] = UploadContent;
//# sourceMappingURL=upload-content2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");

const uploadDraggerProps = runtime.buildProps({
  disabled: {
    type: Boolean,
    default: false
  }
});
const uploadDraggerEmits = {
  file: (file) => shared.isArray(file)
};

exports.uploadDraggerEmits = uploadDraggerEmits;
exports.uploadDraggerProps = uploadDraggerProps;
//# sourceMappingURL=upload-dragger.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger2.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger2.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/constants.js");
var uploadDragger = __webpack_require__(/*! ./upload-dragger.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-dragger.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

const _hoisted_1 = ["onDrop", "onDragover"];
const COMPONENT_NAME = "ElUploadDrag";
const __default__ = vue.defineComponent({
  name: COMPONENT_NAME
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: uploadDragger.uploadDraggerProps,
  emits: uploadDragger.uploadDraggerEmits,
  setup(__props, { emit }) {
    const uploaderContext = vue.inject(constants.uploadContextKey);
    if (!uploaderContext) {
      error.throwError(COMPONENT_NAME, "usage: <el-upload><el-upload-dragger /></el-upload>");
    }
    const ns = index.useNamespace("upload");
    const dragover = vue.ref(false);
    const disabled = useFormCommonProps.useFormDisabled();
    const onDrop = (e) => {
      if (disabled.value)
        return;
      dragover.value = false;
      e.stopPropagation();
      const files = Array.from(e.dataTransfer.files);
      const accept = uploaderContext.accept.value;
      if (!accept) {
        emit("file", files);
        return;
      }
      const filesFiltered = files.filter((file) => {
        const { type, name } = file;
        const extension = name.includes(".") ? `.${name.split(".").pop()}` : "";
        const baseType = type.replace(/\/.*$/, "");
        return accept.split(",").map((type2) => type2.trim()).filter((type2) => type2).some((acceptedType) => {
          if (acceptedType.startsWith(".")) {
            return extension === acceptedType;
          }
          if (/\/\*$/.test(acceptedType)) {
            return baseType === acceptedType.replace(/\/\*$/, "");
          }
          if (/^[^/]+\/[^/]+$/.test(acceptedType)) {
            return type === acceptedType;
          }
          return false;
        });
      });
      emit("file", filesFiltered);
    };
    const onDragover = () => {
      if (!disabled.value)
        dragover.value = true;
    };
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", {
        class: vue.normalizeClass([vue.unref(ns).b("dragger"), vue.unref(ns).is("dragover", dragover.value)]),
        onDrop: vue.withModifiers(onDrop, ["prevent"]),
        onDragover: vue.withModifiers(onDragover, ["prevent"]),
        onDragleave: _cache[0] || (_cache[0] = vue.withModifiers(($event) => dragover.value = false, ["prevent"]))
      }, [
        vue.renderSlot(_ctx.$slots, "default")
      ], 42, _hoisted_1);
    };
  }
});
var UploadDragger = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-dragger.vue"]]);

exports["default"] = UploadDragger;
//# sourceMappingURL=upload-dragger2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var upload = __webpack_require__(/*! ./upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");

const uploadListProps = runtime.buildProps({
  files: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  disabled: {
    type: Boolean,
    default: false
  },
  handlePreview: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  listType: {
    type: String,
    values: upload.uploadListTypes,
    default: "text"
  }
});
const uploadListEmits = {
  remove: (file) => !!file
};

exports.uploadListEmits = uploadListEmits;
exports.uploadListProps = uploadListProps;
//# sourceMappingURL=upload-list.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list2.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list2.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var index$2 = __webpack_require__(/*! ../../icon/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/icon/index.js");
var iconsVue = __webpack_require__(/*! @element-plus/icons-vue */ "./node_modules/.pnpm/@element-plus+icons-vue@2.1.0_vue@3.3.4/node_modules/@element-plus/icons-vue/dist/index.cjs");
__webpack_require__(/*! ../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var index$3 = __webpack_require__(/*! ../../progress/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/progress/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var uploadList = __webpack_require__(/*! ./upload-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var index = __webpack_require__(/*! ../../../hooks/use-locale/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-locale/index.js");
var index$1 = __webpack_require__(/*! ../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

const _hoisted_1 = ["onKeydown"];
const _hoisted_2 = ["src"];
const _hoisted_3 = ["onClick"];
const _hoisted_4 = ["title"];
const _hoisted_5 = ["onClick"];
const _hoisted_6 = ["onClick"];
const __default__ = vue.defineComponent({
  name: "ElUploadList"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: uploadList.uploadListProps,
  emits: uploadList.uploadListEmits,
  setup(__props, { emit }) {
    const { t } = index.useLocale();
    const nsUpload = index$1.useNamespace("upload");
    const nsIcon = index$1.useNamespace("icon");
    const nsList = index$1.useNamespace("list");
    const disabled = useFormCommonProps.useFormDisabled();
    const focusing = vue.ref(false);
    const handleRemove = (file) => {
      emit("remove", file);
    };
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.TransitionGroup, {
        tag: "ul",
        class: vue.normalizeClass([
          vue.unref(nsUpload).b("list"),
          vue.unref(nsUpload).bm("list", _ctx.listType),
          vue.unref(nsUpload).is("disabled", vue.unref(disabled))
        ]),
        name: vue.unref(nsList).b()
      }, {
        default: vue.withCtx(() => [
          (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.files, (file) => {
            return vue.openBlock(), vue.createElementBlock("li", {
              key: file.uid || file.name,
              class: vue.normalizeClass([
                vue.unref(nsUpload).be("list", "item"),
                vue.unref(nsUpload).is(file.status),
                { focusing: focusing.value }
              ]),
              tabindex: "0",
              onKeydown: vue.withKeys(($event) => !vue.unref(disabled) && handleRemove(file), ["delete"]),
              onFocus: _cache[0] || (_cache[0] = ($event) => focusing.value = true),
              onBlur: _cache[1] || (_cache[1] = ($event) => focusing.value = false),
              onClick: _cache[2] || (_cache[2] = ($event) => focusing.value = false)
            }, [
              vue.renderSlot(_ctx.$slots, "default", { file }, () => [
                _ctx.listType === "picture" || file.status !== "uploading" && _ctx.listType === "picture-card" ? (vue.openBlock(), vue.createElementBlock("img", {
                  key: 0,
                  class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-thumbnail")),
                  src: file.url,
                  alt: ""
                }, null, 10, _hoisted_2)) : vue.createCommentVNode("v-if", true),
                file.status === "uploading" || _ctx.listType !== "picture-card" ? (vue.openBlock(), vue.createElementBlock("div", {
                  key: 1,
                  class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-info"))
                }, [
                  vue.createElementVNode("a", {
                    class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-name")),
                    onClick: vue.withModifiers(($event) => _ctx.handlePreview(file), ["prevent"])
                  }, [
                    vue.createVNode(vue.unref(index$2.ElIcon), {
                      class: vue.normalizeClass(vue.unref(nsIcon).m("document"))
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode(vue.unref(iconsVue.Document))
                      ]),
                      _: 1
                    }, 8, ["class"]),
                    vue.createElementVNode("span", {
                      class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-file-name")),
                      title: file.name
                    }, vue.toDisplayString(file.name), 11, _hoisted_4)
                  ], 10, _hoisted_3),
                  file.status === "uploading" ? (vue.openBlock(), vue.createBlock(vue.unref(index$3.ElProgress), {
                    key: 0,
                    type: _ctx.listType === "picture-card" ? "circle" : "line",
                    "stroke-width": _ctx.listType === "picture-card" ? 6 : 2,
                    percentage: Number(file.percentage),
                    style: vue.normalizeStyle(_ctx.listType === "picture-card" ? "" : "margin-top: 0.5rem")
                  }, null, 8, ["type", "stroke-width", "percentage", "style"])) : vue.createCommentVNode("v-if", true)
                ], 2)) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode("label", {
                  class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-status-label"))
                }, [
                  _ctx.listType === "text" ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
                    key: 0,
                    class: vue.normalizeClass([vue.unref(nsIcon).m("upload-success"), vue.unref(nsIcon).m("circle-check")])
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(vue.unref(iconsVue.CircleCheck))
                    ]),
                    _: 1
                  }, 8, ["class"])) : ["picture-card", "picture"].includes(_ctx.listType) ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
                    key: 1,
                    class: vue.normalizeClass([vue.unref(nsIcon).m("upload-success"), vue.unref(nsIcon).m("check")])
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(vue.unref(iconsVue.Check))
                    ]),
                    _: 1
                  }, 8, ["class"])) : vue.createCommentVNode("v-if", true)
                ], 2),
                !vue.unref(disabled) ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {
                  key: 2,
                  class: vue.normalizeClass(vue.unref(nsIcon).m("close")),
                  onClick: ($event) => handleRemove(file)
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(vue.unref(iconsVue.Close))
                  ]),
                  _: 2
                }, 1032, ["class", "onClick"])) : vue.createCommentVNode("v-if", true),
                vue.createCommentVNode(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"),
                vue.createCommentVNode(" This is a bug which needs to be fixed "),
                vue.createCommentVNode(" TODO: Fix the incorrect navigation interaction "),
                !vue.unref(disabled) ? (vue.openBlock(), vue.createElementBlock("i", {
                  key: 3,
                  class: vue.normalizeClass(vue.unref(nsIcon).m("close-tip"))
                }, vue.toDisplayString(vue.unref(t)("el.upload.deleteTip")), 3)) : vue.createCommentVNode("v-if", true),
                _ctx.listType === "picture-card" ? (vue.openBlock(), vue.createElementBlock("span", {
                  key: 4,
                  class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-actions"))
                }, [
                  vue.createElementVNode("span", {
                    class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-preview")),
                    onClick: ($event) => _ctx.handlePreview(file)
                  }, [
                    vue.createVNode(vue.unref(index$2.ElIcon), {
                      class: vue.normalizeClass(vue.unref(nsIcon).m("zoom-in"))
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode(vue.unref(iconsVue.ZoomIn))
                      ]),
                      _: 1
                    }, 8, ["class"])
                  ], 10, _hoisted_5),
                  !vue.unref(disabled) ? (vue.openBlock(), vue.createElementBlock("span", {
                    key: 0,
                    class: vue.normalizeClass(vue.unref(nsUpload).be("list", "item-delete")),
                    onClick: ($event) => handleRemove(file)
                  }, [
                    vue.createVNode(vue.unref(index$2.ElIcon), {
                      class: vue.normalizeClass(vue.unref(nsIcon).m("delete"))
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode(vue.unref(iconsVue.Delete))
                      ]),
                      _: 1
                    }, 8, ["class"])
                  ], 10, _hoisted_6)) : vue.createCommentVNode("v-if", true)
                ], 2)) : vue.createCommentVNode("v-if", true)
              ])
            ], 42, _hoisted_1);
          }), 128)),
          vue.renderSlot(_ctx.$slots, "append")
        ]),
        _: 3
      }, 8, ["class", "name"]);
    };
  }
});
var UploadList = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-list.vue"]]);

exports["default"] = UploadList;
//# sourceMappingURL=upload-list2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var ajax = __webpack_require__(/*! ./ajax.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/ajax.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");

const uploadListTypes = ["text", "picture", "picture-card"];
let fileId = 1;
const genFileId = () => Date.now() + fileId++;
const uploadBaseProps = runtime.buildProps({
  action: {
    type: String,
    default: "#"
  },
  headers: {
    type: runtime.definePropType(Object)
  },
  method: {
    type: String,
    default: "post"
  },
  data: {
    type: Object,
    default: () => typescript.mutable({})
  },
  multiple: {
    type: Boolean,
    default: false
  },
  name: {
    type: String,
    default: "file"
  },
  drag: {
    type: Boolean,
    default: false
  },
  withCredentials: Boolean,
  showFileList: {
    type: Boolean,
    default: true
  },
  accept: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    default: "select"
  },
  fileList: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  autoUpload: {
    type: Boolean,
    default: true
  },
  listType: {
    type: String,
    values: uploadListTypes,
    default: "text"
  },
  httpRequest: {
    type: runtime.definePropType(Function),
    default: ajax.ajaxUpload
  },
  disabled: Boolean,
  limit: Number
});
const uploadProps = runtime.buildProps({
  ...uploadBaseProps,
  beforeUpload: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  beforeRemove: {
    type: runtime.definePropType(Function)
  },
  onRemove: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onChange: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onPreview: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onSuccess: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onProgress: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onError: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  },
  onExceed: {
    type: runtime.definePropType(Function),
    default: shared.NOOP
  }
});

exports.genFileId = genFileId;
exports.uploadBaseProps = uploadBaseProps;
exports.uploadListTypes = uploadListTypes;
exports.uploadProps = uploadProps;
//# sourceMappingURL=upload.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload2.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload2.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../form/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/index.js");
var constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/constants.js");
var uploadList = __webpack_require__(/*! ./upload-list2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-list2.js");
var uploadContent = __webpack_require__(/*! ./upload-content2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload-content2.js");
var useHandlers = __webpack_require__(/*! ./use-handlers.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/use-handlers.js");
var upload = __webpack_require__(/*! ./upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");
var useFormCommonProps = __webpack_require__(/*! ../../form/src/hooks/use-form-common-props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/form/src/hooks/use-form-common-props.js");

const __default__ = vue.defineComponent({
  name: "ElUpload"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: upload.uploadProps,
  setup(__props, { expose }) {
    const props = __props;
    const disabled = useFormCommonProps.useFormDisabled();
    const uploadRef = vue.shallowRef();
    const {
      abort,
      submit,
      clearFiles,
      uploadFiles,
      handleStart,
      handleError,
      handleRemove,
      handleSuccess,
      handleProgress
    } = useHandlers.useHandlers(props, uploadRef);
    const isPictureCard = vue.computed(() => props.listType === "picture-card");
    const uploadContentProps = vue.computed(() => ({
      ...props,
      fileList: uploadFiles.value,
      onStart: handleStart,
      onProgress: handleProgress,
      onSuccess: handleSuccess,
      onError: handleError,
      onRemove: handleRemove
    }));
    vue.onBeforeUnmount(() => {
      uploadFiles.value.forEach(({ url }) => {
        if (url == null ? void 0 : url.startsWith("blob:"))
          URL.revokeObjectURL(url);
      });
    });
    vue.provide(constants.uploadContextKey, {
      accept: vue.toRef(props, "accept")
    });
    expose({
      abort,
      submit,
      clearFiles,
      handleStart,
      handleRemove
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div", null, [
        vue.unref(isPictureCard) && _ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadList["default"], {
          key: 0,
          disabled: vue.unref(disabled),
          "list-type": _ctx.listType,
          files: vue.unref(uploadFiles),
          "handle-preview": _ctx.onPreview,
          onRemove: vue.unref(handleRemove)
        }, vue.createSlots({
          append: vue.withCtx(() => [
            vue.createVNode(uploadContent["default"], vue.mergeProps({
              ref_key: "uploadRef",
              ref: uploadRef
            }, vue.unref(uploadContentProps)), {
              default: vue.withCtx(() => [
                _ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, "trigger", { key: 0 }) : vue.createCommentVNode("v-if", true),
                !_ctx.$slots.trigger && _ctx.$slots.default ? vue.renderSlot(_ctx.$slots, "default", { key: 1 }) : vue.createCommentVNode("v-if", true)
              ]),
              _: 3
            }, 16)
          ]),
          _: 2
        }, [
          _ctx.$slots.file ? {
            name: "default",
            fn: vue.withCtx(({ file }) => [
              vue.renderSlot(_ctx.$slots, "file", { file })
            ])
          } : void 0
        ]), 1032, ["disabled", "list-type", "files", "handle-preview", "onRemove"])) : vue.createCommentVNode("v-if", true),
        !vue.unref(isPictureCard) || vue.unref(isPictureCard) && !_ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadContent["default"], vue.mergeProps({
          key: 1,
          ref_key: "uploadRef",
          ref: uploadRef
        }, vue.unref(uploadContentProps)), {
          default: vue.withCtx(() => [
            _ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, "trigger", { key: 0 }) : vue.createCommentVNode("v-if", true),
            !_ctx.$slots.trigger && _ctx.$slots.default ? vue.renderSlot(_ctx.$slots, "default", { key: 1 }) : vue.createCommentVNode("v-if", true)
          ]),
          _: 3
        }, 16)) : vue.createCommentVNode("v-if", true),
        _ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, "default", { key: 2 }) : vue.createCommentVNode("v-if", true),
        vue.renderSlot(_ctx.$slots, "tip"),
        !vue.unref(isPictureCard) && _ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadList["default"], {
          key: 3,
          disabled: vue.unref(disabled),
          "list-type": _ctx.listType,
          files: vue.unref(uploadFiles),
          "handle-preview": _ctx.onPreview,
          onRemove: vue.unref(handleRemove)
        }, vue.createSlots({ _: 2 }, [
          _ctx.$slots.file ? {
            name: "default",
            fn: vue.withCtx(({ file }) => [
              vue.renderSlot(_ctx.$slots, "file", { file })
            ])
          } : void 0
        ]), 1032, ["disabled", "list-type", "files", "handle-preview", "onRemove"])) : vue.createCommentVNode("v-if", true)
      ]);
    };
  }
});
var Upload = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload.vue"]]);

exports["default"] = Upload;
//# sourceMappingURL=upload2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/use-handlers.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/use-handlers.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");
__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var upload = __webpack_require__(/*! ./upload.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/upload/src/upload.js");
var error = __webpack_require__(/*! ../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const SCOPE = "ElUpload";
const revokeObjectURL = (file) => {
  var _a;
  if ((_a = file.url) == null ? void 0 : _a.startsWith("blob:")) {
    URL.revokeObjectURL(file.url);
  }
};
const useHandlers = (props, uploadRef) => {
  const uploadFiles = core.useVModel(props, "fileList", void 0, { passive: true });
  const getFile = (rawFile) => uploadFiles.value.find((file) => file.uid === rawFile.uid);
  function abort(file) {
    var _a;
    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);
  }
  function clearFiles(states = ["ready", "uploading", "success", "fail"]) {
    uploadFiles.value = uploadFiles.value.filter((row) => !states.includes(row.status));
  }
  const handleError = (err, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    console.error(err);
    file.status = "fail";
    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);
    props.onError(err, file, uploadFiles.value);
    props.onChange(file, uploadFiles.value);
  };
  const handleProgress = (evt, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    props.onProgress(evt, file, uploadFiles.value);
    file.status = "uploading";
    file.percentage = Math.round(evt.percent);
  };
  const handleSuccess = (response, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    file.status = "success";
    file.response = response;
    props.onSuccess(response, file, uploadFiles.value);
    props.onChange(file, uploadFiles.value);
  };
  const handleStart = (file) => {
    if (lodashUnified.isNil(file.uid))
      file.uid = upload.genFileId();
    const uploadFile = {
      name: file.name,
      percentage: 0,
      status: "ready",
      size: file.size,
      raw: file,
      uid: file.uid
    };
    if (props.listType === "picture-card" || props.listType === "picture") {
      try {
        uploadFile.url = URL.createObjectURL(file);
      } catch (err) {
        error.debugWarn(SCOPE, err.message);
        props.onError(err, uploadFile, uploadFiles.value);
      }
    }
    uploadFiles.value = [...uploadFiles.value, uploadFile];
    props.onChange(uploadFile, uploadFiles.value);
  };
  const handleRemove = async (file) => {
    const uploadFile = file instanceof File ? getFile(file) : file;
    if (!uploadFile)
      error.throwError(SCOPE, "file to be removed not found");
    const doRemove = (file2) => {
      abort(file2);
      const fileList = uploadFiles.value;
      fileList.splice(fileList.indexOf(file2), 1);
      props.onRemove(file2, fileList);
      revokeObjectURL(file2);
    };
    if (props.beforeRemove) {
      const before = await props.beforeRemove(uploadFile, uploadFiles.value);
      if (before !== false)
        doRemove(uploadFile);
    } else {
      doRemove(uploadFile);
    }
  };
  function submit() {
    uploadFiles.value.filter(({ status }) => status === "ready").forEach(({ raw }) => {
      var _a;
      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));
    });
  }
  vue.watch(() => props.listType, (val) => {
    if (val !== "picture-card" && val !== "picture") {
      return;
    }
    uploadFiles.value = uploadFiles.value.map((file) => {
      const { raw, url } = file;
      if (!url && raw) {
        try {
          file.url = URL.createObjectURL(raw);
        } catch (err) {
          props.onError(err, file, uploadFiles.value);
        }
      }
      return file;
    });
  });
  vue.watch(uploadFiles, (files) => {
    for (const file of files) {
      file.uid || (file.uid = upload.genFileId());
      file.status || (file.status = "success");
    }
  }, { immediate: true, deep: true });
  return {
    uploadFiles,
    abort,
    clearFiles,
    handleError,
    handleProgress,
    handleStart,
    handleSuccess,
    handleRemove,
    submit
  };
};

exports.useHandlers = useHandlers;
//# sourceMappingURL=use-handlers.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/index.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var fixedSizeList = __webpack_require__(/*! ./src/components/fixed-size-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-list.js");
var dynamicSizeList = __webpack_require__(/*! ./src/components/dynamic-size-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-list.js");
var fixedSizeGrid = __webpack_require__(/*! ./src/components/fixed-size-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-grid.js");
var dynamicSizeGrid = __webpack_require__(/*! ./src/components/dynamic-size-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-grid.js");
var props = __webpack_require__(/*! ./src/props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");
__webpack_require__(/*! ./src/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/types.js");



exports.FixedSizeList = fixedSizeList["default"];
exports.DynamicSizeList = dynamicSizeList["default"];
exports.FixedSizeGrid = fixedSizeGrid["default"];
exports.DynamicSizeGrid = dynamicSizeGrid["default"];
exports.virtualizedGridProps = props.virtualizedGridProps;
exports.virtualizedListProps = props.virtualizedListProps;
exports.virtualizedProps = props.virtualizedProps;
exports.virtualizedScrollbarProps = props.virtualizedScrollbarProps;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-grid.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-grid.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var scrollbar = __webpack_require__(/*! ../components/scrollbar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/scrollbar.js");
var useGridWheel = __webpack_require__(/*! ../hooks/use-grid-wheel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-grid-wheel.js");
var useCache = __webpack_require__(/*! ../hooks/use-cache.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-cache.js");
var props = __webpack_require__(/*! ../props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var scroll = __webpack_require__(/*! ../../../../utils/dom/scroll.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/dom/scroll.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");

const createGrid = ({
  name,
  clearCache,
  getColumnPosition,
  getColumnStartIndexForOffset,
  getColumnStopIndexForStartIndex,
  getEstimatedTotalHeight,
  getEstimatedTotalWidth,
  getColumnOffset,
  getRowOffset,
  getRowPosition,
  getRowStartIndexForOffset,
  getRowStopIndexForStartIndex,
  initCache,
  injectToInstance,
  validateProps
}) => {
  return vue.defineComponent({
    name: name != null ? name : "ElVirtualList",
    props: props.virtualizedGridProps,
    emits: [defaults.ITEM_RENDER_EVT, defaults.SCROLL_EVT],
    setup(props, { emit, expose, slots }) {
      const ns = index.useNamespace("vl");
      validateProps(props);
      const instance = vue.getCurrentInstance();
      const cache = vue.ref(initCache(props, instance));
      injectToInstance == null ? void 0 : injectToInstance(instance, cache);
      const windowRef = vue.ref();
      const hScrollbar = vue.ref();
      const vScrollbar = vue.ref();
      const innerRef = vue.ref(null);
      const states = vue.ref({
        isScrolling: false,
        scrollLeft: types.isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,
        scrollTop: types.isNumber(props.initScrollTop) ? props.initScrollTop : 0,
        updateRequested: false,
        xAxisScrollDir: defaults.FORWARD,
        yAxisScrollDir: defaults.FORWARD
      });
      const getItemStyleCache = useCache.useCache();
      const parsedHeight = vue.computed(() => Number.parseInt(`${props.height}`, 10));
      const parsedWidth = vue.computed(() => Number.parseInt(`${props.width}`, 10));
      const columnsToRender = vue.computed(() => {
        const { totalColumn, totalRow, columnCache } = props;
        const { isScrolling, xAxisScrollDir, scrollLeft } = vue.unref(states);
        if (totalColumn === 0 || totalRow === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getColumnStartIndexForOffset(props, scrollLeft, vue.unref(cache));
        const stopIndex = getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, vue.unref(cache));
        const cacheBackward = !isScrolling || xAxisScrollDir === defaults.BACKWARD ? Math.max(1, columnCache) : 1;
        const cacheForward = !isScrolling || xAxisScrollDir === defaults.FORWARD ? Math.max(1, columnCache) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(totalColumn - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const rowsToRender = vue.computed(() => {
        const { totalColumn, totalRow, rowCache } = props;
        const { isScrolling, yAxisScrollDir, scrollTop } = vue.unref(states);
        if (totalColumn === 0 || totalRow === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getRowStartIndexForOffset(props, scrollTop, vue.unref(cache));
        const stopIndex = getRowStopIndexForStartIndex(props, startIndex, scrollTop, vue.unref(cache));
        const cacheBackward = !isScrolling || yAxisScrollDir === defaults.BACKWARD ? Math.max(1, rowCache) : 1;
        const cacheForward = !isScrolling || yAxisScrollDir === defaults.FORWARD ? Math.max(1, rowCache) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(totalRow - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const estimatedTotalHeight = vue.computed(() => getEstimatedTotalHeight(props, vue.unref(cache)));
      const estimatedTotalWidth = vue.computed(() => getEstimatedTotalWidth(props, vue.unref(cache)));
      const windowStyle = vue.computed(() => {
        var _a;
        return [
          {
            position: "relative",
            overflow: "hidden",
            WebkitOverflowScrolling: "touch",
            willChange: "transform"
          },
          {
            direction: props.direction,
            height: types.isNumber(props.height) ? `${props.height}px` : props.height,
            width: types.isNumber(props.width) ? `${props.width}px` : props.width
          },
          (_a = props.style) != null ? _a : {}
        ];
      });
      const innerStyle = vue.computed(() => {
        const width = `${vue.unref(estimatedTotalWidth)}px`;
        const height = `${vue.unref(estimatedTotalHeight)}px`;
        return {
          height,
          pointerEvents: vue.unref(states).isScrolling ? "none" : void 0,
          width
        };
      });
      const emitEvents = () => {
        const { totalColumn, totalRow } = props;
        if (totalColumn > 0 && totalRow > 0) {
          const [
            columnCacheStart,
            columnCacheEnd,
            columnVisibleStart,
            columnVisibleEnd
          ] = vue.unref(columnsToRender);
          const [rowCacheStart, rowCacheEnd, rowVisibleStart, rowVisibleEnd] = vue.unref(rowsToRender);
          emit(defaults.ITEM_RENDER_EVT, {
            columnCacheStart,
            columnCacheEnd,
            rowCacheStart,
            rowCacheEnd,
            columnVisibleStart,
            columnVisibleEnd,
            rowVisibleStart,
            rowVisibleEnd
          });
        }
        const {
          scrollLeft,
          scrollTop,
          updateRequested,
          xAxisScrollDir,
          yAxisScrollDir
        } = vue.unref(states);
        emit(defaults.SCROLL_EVT, {
          xAxisScrollDir,
          scrollLeft,
          yAxisScrollDir,
          scrollTop,
          updateRequested
        });
      };
      const onScroll = (e) => {
        const {
          clientHeight,
          clientWidth,
          scrollHeight,
          scrollLeft,
          scrollTop,
          scrollWidth
        } = e.currentTarget;
        const _states = vue.unref(states);
        if (_states.scrollTop === scrollTop && _states.scrollLeft === scrollLeft) {
          return;
        }
        let _scrollLeft = scrollLeft;
        if (utils.isRTL(props.direction)) {
          switch (utils.getRTLOffsetType()) {
            case defaults.RTL_OFFSET_NAG:
              _scrollLeft = -scrollLeft;
              break;
            case defaults.RTL_OFFSET_POS_DESC:
              _scrollLeft = scrollWidth - clientWidth - scrollLeft;
              break;
          }
        }
        states.value = {
          ..._states,
          isScrolling: true,
          scrollLeft: _scrollLeft,
          scrollTop: Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight)),
          updateRequested: true,
          xAxisScrollDir: utils.getScrollDir(_states.scrollLeft, _scrollLeft),
          yAxisScrollDir: utils.getScrollDir(_states.scrollTop, scrollTop)
        };
        vue.nextTick(() => resetIsScrolling());
        onUpdated();
        emitEvents();
      };
      const onVerticalScroll = (distance, totalSteps) => {
        const height = vue.unref(parsedHeight);
        const offset = (estimatedTotalHeight.value - height) / totalSteps * distance;
        scrollTo({
          scrollTop: Math.min(estimatedTotalHeight.value - height, offset)
        });
      };
      const onHorizontalScroll = (distance, totalSteps) => {
        const width = vue.unref(parsedWidth);
        const offset = (estimatedTotalWidth.value - width) / totalSteps * distance;
        scrollTo({
          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset)
        });
      };
      const { onWheel } = useGridWheel.useGridWheel({
        atXStartEdge: vue.computed(() => states.value.scrollLeft <= 0),
        atXEndEdge: vue.computed(() => states.value.scrollLeft >= estimatedTotalWidth.value - vue.unref(parsedWidth)),
        atYStartEdge: vue.computed(() => states.value.scrollTop <= 0),
        atYEndEdge: vue.computed(() => states.value.scrollTop >= estimatedTotalHeight.value - vue.unref(parsedHeight))
      }, (x, y) => {
        var _a, _b, _c, _d;
        (_b = (_a = hScrollbar.value) == null ? void 0 : _a.onMouseUp) == null ? void 0 : _b.call(_a);
        (_d = (_c = vScrollbar.value) == null ? void 0 : _c.onMouseUp) == null ? void 0 : _d.call(_c);
        const width = vue.unref(parsedWidth);
        const height = vue.unref(parsedHeight);
        scrollTo({
          scrollLeft: Math.min(states.value.scrollLeft + x, estimatedTotalWidth.value - width),
          scrollTop: Math.min(states.value.scrollTop + y, estimatedTotalHeight.value - height)
        });
      });
      const scrollTo = ({
        scrollLeft = states.value.scrollLeft,
        scrollTop = states.value.scrollTop
      }) => {
        scrollLeft = Math.max(scrollLeft, 0);
        scrollTop = Math.max(scrollTop, 0);
        const _states = vue.unref(states);
        if (scrollTop === _states.scrollTop && scrollLeft === _states.scrollLeft) {
          return;
        }
        states.value = {
          ..._states,
          xAxisScrollDir: utils.getScrollDir(_states.scrollLeft, scrollLeft),
          yAxisScrollDir: utils.getScrollDir(_states.scrollTop, scrollTop),
          scrollLeft,
          scrollTop,
          updateRequested: true
        };
        vue.nextTick(() => resetIsScrolling());
        onUpdated();
        emitEvents();
      };
      const scrollToItem = (rowIndex = 0, columnIdx = 0, alignment = defaults.AUTO_ALIGNMENT) => {
        const _states = vue.unref(states);
        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn - 1));
        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow - 1));
        const scrollBarWidth = scroll.getScrollBarWidth(ns.namespace.value);
        const _cache = vue.unref(cache);
        const estimatedHeight = getEstimatedTotalHeight(props, _cache);
        const estimatedWidth = getEstimatedTotalWidth(props, _cache);
        scrollTo({
          scrollLeft: getColumnOffset(props, columnIdx, alignment, _states.scrollLeft, _cache, estimatedWidth > props.width ? scrollBarWidth : 0),
          scrollTop: getRowOffset(props, rowIndex, alignment, _states.scrollTop, _cache, estimatedHeight > props.height ? scrollBarWidth : 0)
        });
      };
      const getItemStyle = (rowIndex, columnIndex) => {
        const { columnWidth, direction, rowHeight } = props;
        const itemStyleCache = getItemStyleCache.value(clearCache && columnWidth, clearCache && rowHeight, clearCache && direction);
        const key = `${rowIndex},${columnIndex}`;
        if (shared.hasOwn(itemStyleCache, key)) {
          return itemStyleCache[key];
        } else {
          const [, left] = getColumnPosition(props, columnIndex, vue.unref(cache));
          const _cache = vue.unref(cache);
          const rtl = utils.isRTL(direction);
          const [height, top] = getRowPosition(props, rowIndex, _cache);
          const [width] = getColumnPosition(props, columnIndex, _cache);
          itemStyleCache[key] = {
            position: "absolute",
            left: rtl ? void 0 : `${left}px`,
            right: rtl ? `${left}px` : void 0,
            top: `${top}px`,
            height: `${height}px`,
            width: `${width}px`
          };
          return itemStyleCache[key];
        }
      };
      const resetIsScrolling = () => {
        states.value.isScrolling = false;
        vue.nextTick(() => {
          getItemStyleCache.value(-1, null, null);
        });
      };
      vue.onMounted(() => {
        if (!core.isClient)
          return;
        const { initScrollLeft, initScrollTop } = props;
        const windowElement = vue.unref(windowRef);
        if (windowElement) {
          if (types.isNumber(initScrollLeft)) {
            windowElement.scrollLeft = initScrollLeft;
          }
          if (types.isNumber(initScrollTop)) {
            windowElement.scrollTop = initScrollTop;
          }
        }
        emitEvents();
      });
      const onUpdated = () => {
        const { direction } = props;
        const { scrollLeft, scrollTop, updateRequested } = vue.unref(states);
        const windowElement = vue.unref(windowRef);
        if (updateRequested && windowElement) {
          if (direction === defaults.RTL) {
            switch (utils.getRTLOffsetType()) {
              case defaults.RTL_OFFSET_NAG: {
                windowElement.scrollLeft = -scrollLeft;
                break;
              }
              case defaults.RTL_OFFSET_POS_ASC: {
                windowElement.scrollLeft = scrollLeft;
                break;
              }
              default: {
                const { clientWidth, scrollWidth } = windowElement;
                windowElement.scrollLeft = scrollWidth - clientWidth - scrollLeft;
                break;
              }
            }
          } else {
            windowElement.scrollLeft = Math.max(0, scrollLeft);
          }
          windowElement.scrollTop = Math.max(0, scrollTop);
        }
      };
      const { resetAfterColumnIndex, resetAfterRowIndex, resetAfter } = instance.proxy;
      expose({
        windowRef,
        innerRef,
        getItemStyleCache,
        scrollTo,
        scrollToItem,
        states,
        resetAfterColumnIndex,
        resetAfterRowIndex,
        resetAfter
      });
      const renderScrollbars = () => {
        const {
          scrollbarAlwaysOn,
          scrollbarStartGap,
          scrollbarEndGap,
          totalColumn,
          totalRow
        } = props;
        const width = vue.unref(parsedWidth);
        const height = vue.unref(parsedHeight);
        const estimatedWidth = vue.unref(estimatedTotalWidth);
        const estimatedHeight = vue.unref(estimatedTotalHeight);
        const { scrollLeft, scrollTop } = vue.unref(states);
        const horizontalScrollbar = vue.h(scrollbar["default"], {
          ref: hScrollbar,
          alwaysOn: scrollbarAlwaysOn,
          startGap: scrollbarStartGap,
          endGap: scrollbarEndGap,
          class: ns.e("horizontal"),
          clientSize: width,
          layout: "horizontal",
          onScroll: onHorizontalScroll,
          ratio: width * 100 / estimatedWidth,
          scrollFrom: scrollLeft / (estimatedWidth - width),
          total: totalRow,
          visible: true
        });
        const verticalScrollbar = vue.h(scrollbar["default"], {
          ref: vScrollbar,
          alwaysOn: scrollbarAlwaysOn,
          startGap: scrollbarStartGap,
          endGap: scrollbarEndGap,
          class: ns.e("vertical"),
          clientSize: height,
          layout: "vertical",
          onScroll: onVerticalScroll,
          ratio: height * 100 / estimatedHeight,
          scrollFrom: scrollTop / (estimatedHeight - height),
          total: totalColumn,
          visible: true
        });
        return {
          horizontalScrollbar,
          verticalScrollbar
        };
      };
      const renderItems = () => {
        var _a;
        const [columnStart, columnEnd] = vue.unref(columnsToRender);
        const [rowStart, rowEnd] = vue.unref(rowsToRender);
        const { data, totalColumn, totalRow, useIsScrolling, itemKey } = props;
        const children = [];
        if (totalRow > 0 && totalColumn > 0) {
          for (let row = rowStart; row <= rowEnd; row++) {
            for (let column = columnStart; column <= columnEnd; column++) {
              children.push((_a = slots.default) == null ? void 0 : _a.call(slots, {
                columnIndex: column,
                data,
                key: itemKey({ columnIndex: column, data, rowIndex: row }),
                isScrolling: useIsScrolling ? vue.unref(states).isScrolling : void 0,
                style: getItemStyle(row, column),
                rowIndex: row
              }));
            }
          }
        }
        return children;
      };
      const renderInner = () => {
        const Inner = vue.resolveDynamicComponent(props.innerElement);
        const children = renderItems();
        return [
          vue.h(Inner, {
            style: vue.unref(innerStyle),
            ref: innerRef
          }, !shared.isString(Inner) ? {
            default: () => children
          } : children)
        ];
      };
      const renderWindow = () => {
        const Container = vue.resolveDynamicComponent(props.containerElement);
        const { horizontalScrollbar, verticalScrollbar } = renderScrollbars();
        const Inner = renderInner();
        return vue.h("div", {
          key: 0,
          class: ns.e("wrapper"),
          role: props.role
        }, [
          vue.h(Container, {
            class: props.className,
            style: vue.unref(windowStyle),
            onScroll,
            onWheel,
            ref: windowRef
          }, !shared.isString(Container) ? { default: () => Inner } : Inner),
          horizontalScrollbar,
          verticalScrollbar
        ]);
      };
      return renderWindow;
    }
  });
};

exports["default"] = createGrid;
//# sourceMappingURL=build-grid.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-list.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-list.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var useCache = __webpack_require__(/*! ../hooks/use-cache.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-cache.js");
var useWheel = __webpack_require__(/*! ../hooks/use-wheel.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-wheel.js");
var scrollbar = __webpack_require__(/*! ../components/scrollbar.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/scrollbar.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js");
var props = __webpack_require__(/*! ../props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var core = __webpack_require__(/*! @vueuse/core */ "./node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.3.4/node_modules/@vueuse/core/index.cjs");

const createList = ({
  name,
  getOffset,
  getItemSize,
  getItemOffset,
  getEstimatedTotalSize,
  getStartIndexForOffset,
  getStopIndexForStartIndex,
  initCache,
  clearCache,
  validateProps
}) => {
  return vue.defineComponent({
    name: name != null ? name : "ElVirtualList",
    props: props.virtualizedListProps,
    emits: [defaults.ITEM_RENDER_EVT, defaults.SCROLL_EVT],
    setup(props, { emit, expose }) {
      validateProps(props);
      const instance = vue.getCurrentInstance();
      const ns = index.useNamespace("vl");
      const dynamicSizeCache = vue.ref(initCache(props, instance));
      const getItemStyleCache = useCache.useCache();
      const windowRef = vue.ref();
      const innerRef = vue.ref();
      const scrollbarRef = vue.ref();
      const states = vue.ref({
        isScrolling: false,
        scrollDir: "forward",
        scrollOffset: types.isNumber(props.initScrollOffset) ? props.initScrollOffset : 0,
        updateRequested: false,
        isScrollbarDragging: false,
        scrollbarAlwaysOn: props.scrollbarAlwaysOn
      });
      const itemsToRender = vue.computed(() => {
        const { total, cache } = props;
        const { isScrolling, scrollDir, scrollOffset } = vue.unref(states);
        if (total === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getStartIndexForOffset(props, scrollOffset, vue.unref(dynamicSizeCache));
        const stopIndex = getStopIndexForStartIndex(props, startIndex, scrollOffset, vue.unref(dynamicSizeCache));
        const cacheBackward = !isScrolling || scrollDir === defaults.BACKWARD ? Math.max(1, cache) : 1;
        const cacheForward = !isScrolling || scrollDir === defaults.FORWARD ? Math.max(1, cache) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(total - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const estimatedTotalSize = vue.computed(() => getEstimatedTotalSize(props, vue.unref(dynamicSizeCache)));
      const _isHorizontal = vue.computed(() => utils.isHorizontal(props.layout));
      const windowStyle = vue.computed(() => [
        {
          position: "relative",
          [`overflow-${_isHorizontal.value ? "x" : "y"}`]: "scroll",
          WebkitOverflowScrolling: "touch",
          willChange: "transform"
        },
        {
          direction: props.direction,
          height: types.isNumber(props.height) ? `${props.height}px` : props.height,
          width: types.isNumber(props.width) ? `${props.width}px` : props.width
        },
        props.style
      ]);
      const innerStyle = vue.computed(() => {
        const size = vue.unref(estimatedTotalSize);
        const horizontal = vue.unref(_isHorizontal);
        return {
          height: horizontal ? "100%" : `${size}px`,
          pointerEvents: vue.unref(states).isScrolling ? "none" : void 0,
          width: horizontal ? `${size}px` : "100%"
        };
      });
      const clientSize = vue.computed(() => _isHorizontal.value ? props.width : props.height);
      const { onWheel } = useWheel["default"]({
        atStartEdge: vue.computed(() => states.value.scrollOffset <= 0),
        atEndEdge: vue.computed(() => states.value.scrollOffset >= estimatedTotalSize.value),
        layout: vue.computed(() => props.layout)
      }, (offset) => {
        var _a, _b;
        ;
        (_b = (_a = scrollbarRef.value).onMouseUp) == null ? void 0 : _b.call(_a);
        scrollTo(Math.min(states.value.scrollOffset + offset, estimatedTotalSize.value - clientSize.value));
      });
      const emitEvents = () => {
        const { total } = props;
        if (total > 0) {
          const [cacheStart, cacheEnd, visibleStart, visibleEnd] = vue.unref(itemsToRender);
          emit(defaults.ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd);
        }
        const { scrollDir, scrollOffset, updateRequested } = vue.unref(states);
        emit(defaults.SCROLL_EVT, scrollDir, scrollOffset, updateRequested);
      };
      const scrollVertically = (e) => {
        const { clientHeight, scrollHeight, scrollTop } = e.currentTarget;
        const _states = vue.unref(states);
        if (_states.scrollOffset === scrollTop) {
          return;
        }
        const scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
        states.value = {
          ..._states,
          isScrolling: true,
          scrollDir: utils.getScrollDir(_states.scrollOffset, scrollOffset),
          scrollOffset,
          updateRequested: false
        };
        vue.nextTick(resetIsScrolling);
      };
      const scrollHorizontally = (e) => {
        const { clientWidth, scrollLeft, scrollWidth } = e.currentTarget;
        const _states = vue.unref(states);
        if (_states.scrollOffset === scrollLeft) {
          return;
        }
        const { direction } = props;
        let scrollOffset = scrollLeft;
        if (direction === defaults.RTL) {
          switch (utils.getRTLOffsetType()) {
            case defaults.RTL_OFFSET_NAG: {
              scrollOffset = -scrollLeft;
              break;
            }
            case defaults.RTL_OFFSET_POS_DESC: {
              scrollOffset = scrollWidth - clientWidth - scrollLeft;
              break;
            }
          }
        }
        scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));
        states.value = {
          ..._states,
          isScrolling: true,
          scrollDir: utils.getScrollDir(_states.scrollOffset, scrollOffset),
          scrollOffset,
          updateRequested: false
        };
        vue.nextTick(resetIsScrolling);
      };
      const onScroll = (e) => {
        vue.unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e);
        emitEvents();
      };
      const onScrollbarScroll = (distanceToGo, totalSteps) => {
        const offset = (estimatedTotalSize.value - clientSize.value) / totalSteps * distanceToGo;
        scrollTo(Math.min(estimatedTotalSize.value - clientSize.value, offset));
      };
      const scrollTo = (offset) => {
        offset = Math.max(offset, 0);
        if (offset === vue.unref(states).scrollOffset) {
          return;
        }
        states.value = {
          ...vue.unref(states),
          scrollOffset: offset,
          scrollDir: utils.getScrollDir(vue.unref(states).scrollOffset, offset),
          updateRequested: true
        };
        vue.nextTick(resetIsScrolling);
      };
      const scrollToItem = (idx, alignment = defaults.AUTO_ALIGNMENT) => {
        const { scrollOffset } = vue.unref(states);
        idx = Math.max(0, Math.min(idx, props.total - 1));
        scrollTo(getOffset(props, idx, alignment, scrollOffset, vue.unref(dynamicSizeCache)));
      };
      const getItemStyle = (idx) => {
        const { direction, itemSize, layout } = props;
        const itemStyleCache = getItemStyleCache.value(clearCache && itemSize, clearCache && layout, clearCache && direction);
        let style;
        if (shared.hasOwn(itemStyleCache, String(idx))) {
          style = itemStyleCache[idx];
        } else {
          const offset = getItemOffset(props, idx, vue.unref(dynamicSizeCache));
          const size = getItemSize(props, idx, vue.unref(dynamicSizeCache));
          const horizontal = vue.unref(_isHorizontal);
          const isRtl = direction === defaults.RTL;
          const offsetHorizontal = horizontal ? offset : 0;
          itemStyleCache[idx] = style = {
            position: "absolute",
            left: isRtl ? void 0 : `${offsetHorizontal}px`,
            right: isRtl ? `${offsetHorizontal}px` : void 0,
            top: !horizontal ? `${offset}px` : 0,
            height: !horizontal ? `${size}px` : "100%",
            width: horizontal ? `${size}px` : "100%"
          };
        }
        return style;
      };
      const resetIsScrolling = () => {
        states.value.isScrolling = false;
        vue.nextTick(() => {
          getItemStyleCache.value(-1, null, null);
        });
      };
      const resetScrollTop = () => {
        const window = windowRef.value;
        if (window) {
          window.scrollTop = 0;
        }
      };
      vue.onMounted(() => {
        if (!core.isClient)
          return;
        const { initScrollOffset } = props;
        const windowElement = vue.unref(windowRef);
        if (types.isNumber(initScrollOffset) && windowElement) {
          if (vue.unref(_isHorizontal)) {
            windowElement.scrollLeft = initScrollOffset;
          } else {
            windowElement.scrollTop = initScrollOffset;
          }
        }
        emitEvents();
      });
      vue.onUpdated(() => {
        const { direction, layout } = props;
        const { scrollOffset, updateRequested } = vue.unref(states);
        const windowElement = vue.unref(windowRef);
        if (updateRequested && windowElement) {
          if (layout === defaults.HORIZONTAL) {
            if (direction === defaults.RTL) {
              switch (utils.getRTLOffsetType()) {
                case defaults.RTL_OFFSET_NAG: {
                  windowElement.scrollLeft = -scrollOffset;
                  break;
                }
                case defaults.RTL_OFFSET_POS_ASC: {
                  windowElement.scrollLeft = scrollOffset;
                  break;
                }
                default: {
                  const { clientWidth, scrollWidth } = windowElement;
                  windowElement.scrollLeft = scrollWidth - clientWidth - scrollOffset;
                  break;
                }
              }
            } else {
              windowElement.scrollLeft = scrollOffset;
            }
          } else {
            windowElement.scrollTop = scrollOffset;
          }
        }
      });
      const api = {
        ns,
        clientSize,
        estimatedTotalSize,
        windowStyle,
        windowRef,
        innerRef,
        innerStyle,
        itemsToRender,
        scrollbarRef,
        states,
        getItemStyle,
        onScroll,
        onScrollbarScroll,
        onWheel,
        scrollTo,
        scrollToItem,
        resetScrollTop
      };
      expose({
        windowRef,
        innerRef,
        getItemStyleCache,
        scrollTo,
        scrollToItem,
        resetScrollTop,
        states
      });
      return api;
    },
    render(ctx) {
      var _a;
      const {
        $slots,
        className,
        clientSize,
        containerElement,
        data,
        getItemStyle,
        innerElement,
        itemsToRender,
        innerStyle,
        layout,
        total,
        onScroll,
        onScrollbarScroll,
        onWheel,
        states,
        useIsScrolling,
        windowStyle,
        ns
      } = ctx;
      const [start, end] = itemsToRender;
      const Container = vue.resolveDynamicComponent(containerElement);
      const Inner = vue.resolveDynamicComponent(innerElement);
      const children = [];
      if (total > 0) {
        for (let i = start; i <= end; i++) {
          children.push((_a = $slots.default) == null ? void 0 : _a.call($slots, {
            data,
            key: i,
            index: i,
            isScrolling: useIsScrolling ? states.isScrolling : void 0,
            style: getItemStyle(i)
          }));
        }
      }
      const InnerNode = [
        vue.h(Inner, {
          style: innerStyle,
          ref: "innerRef"
        }, !shared.isString(Inner) ? {
          default: () => children
        } : children)
      ];
      const scrollbar$1 = vue.h(scrollbar["default"], {
        ref: "scrollbarRef",
        clientSize,
        layout,
        onScroll: onScrollbarScroll,
        ratio: clientSize * 100 / this.estimatedTotalSize,
        scrollFrom: states.scrollOffset / (this.estimatedTotalSize - clientSize),
        total
      });
      const listContainer = vue.h(Container, {
        class: [ns.e("window"), className],
        style: windowStyle,
        onScroll,
        onWheel,
        ref: "windowRef",
        key: 0
      }, !shared.isString(Container) ? { default: () => [InnerNode] } : [InnerNode]);
      return vue.h("div", {
        key: 0,
        class: [ns.e("wrapper"), states.scrollbarAlwaysOn ? "always-on" : ""]
      }, [listContainer, scrollbar$1]);
    }
  });
};

exports["default"] = createList;
//# sourceMappingURL=build-list.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-grid.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-grid.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var buildGrid = __webpack_require__(/*! ../builders/build-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-grid.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const { max, min, floor } = Math;
const SCOPE = "ElDynamicSizeGrid";
const ACCESS_SIZER_KEY_MAP = {
  column: "columnWidth",
  row: "rowHeight"
};
const ACCESS_LAST_VISITED_KEY_MAP = {
  column: "lastVisitedColumnIndex",
  row: "lastVisitedRowIndex"
};
const getItemFromCache = (props, index, gridCache, type) => {
  const [cachedItems, sizer, lastVisited] = [
    gridCache[type],
    props[ACCESS_SIZER_KEY_MAP[type]],
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]]
  ];
  if (index > lastVisited) {
    let offset = 0;
    if (lastVisited >= 0) {
      const item = cachedItems[lastVisited];
      offset = item.offset + item.size;
    }
    for (let i = lastVisited + 1; i <= index; i++) {
      const size = sizer(i);
      cachedItems[i] = {
        offset,
        size
      };
      offset += size;
    }
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]] = index;
  }
  return cachedItems[index];
};
const bs = (props, gridCache, low, high, offset, type) => {
  while (low <= high) {
    const mid = low + floor((high - low) / 2);
    const currentOffset = getItemFromCache(props, mid, gridCache, type).offset;
    if (currentOffset === offset) {
      return mid;
    } else if (currentOffset < offset) {
      low = mid + 1;
    } else {
      high = mid - 1;
    }
  }
  return max(0, low - 1);
};
const es = (props, gridCache, idx, offset, type) => {
  const total = type === "column" ? props.totalColumn : props.totalRow;
  let exponent = 1;
  while (idx < total && getItemFromCache(props, idx, gridCache, type).offset < offset) {
    idx += exponent;
    exponent *= 2;
  }
  return bs(props, gridCache, floor(idx / 2), min(idx, total - 1), offset, type);
};
const findItem = (props, gridCache, offset, type) => {
  const [cache, lastVisitedIndex] = [
    gridCache[type],
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]]
  ];
  const lastVisitedItemOffset = lastVisitedIndex > 0 ? cache[lastVisitedIndex].offset : 0;
  if (lastVisitedItemOffset >= offset) {
    return bs(props, gridCache, 0, lastVisitedIndex, offset, type);
  }
  return es(props, gridCache, max(0, lastVisitedIndex), offset, type);
};
const getEstimatedTotalHeight = ({ totalRow }, { estimatedRowHeight, lastVisitedRowIndex, row }) => {
  let sizeOfVisitedRows = 0;
  if (lastVisitedRowIndex >= totalRow) {
    lastVisitedRowIndex = totalRow - 1;
  }
  if (lastVisitedRowIndex >= 0) {
    const item = row[lastVisitedRowIndex];
    sizeOfVisitedRows = item.offset + item.size;
  }
  const unvisitedItems = totalRow - lastVisitedRowIndex - 1;
  const sizeOfUnvisitedItems = unvisitedItems * estimatedRowHeight;
  return sizeOfVisitedRows + sizeOfUnvisitedItems;
};
const getEstimatedTotalWidth = ({ totalColumn }, { column, estimatedColumnWidth, lastVisitedColumnIndex }) => {
  let sizeOfVisitedColumns = 0;
  if (lastVisitedColumnIndex > totalColumn) {
    lastVisitedColumnIndex = totalColumn - 1;
  }
  if (lastVisitedColumnIndex >= 0) {
    const item = column[lastVisitedColumnIndex];
    sizeOfVisitedColumns = item.offset + item.size;
  }
  const unvisitedItems = totalColumn - lastVisitedColumnIndex - 1;
  const sizeOfUnvisitedItems = unvisitedItems * estimatedColumnWidth;
  return sizeOfVisitedColumns + sizeOfUnvisitedItems;
};
const ACCESS_ESTIMATED_SIZE_KEY_MAP = {
  column: getEstimatedTotalWidth,
  row: getEstimatedTotalHeight
};
const getOffset = (props, index, alignment, scrollOffset, cache, type, scrollBarWidth) => {
  const [size, estimatedSizeAssociates] = [
    type === "row" ? props.height : props.width,
    ACCESS_ESTIMATED_SIZE_KEY_MAP[type]
  ];
  const item = getItemFromCache(props, index, cache, type);
  const estimatedSize = estimatedSizeAssociates(props, cache);
  const maxOffset = max(0, min(estimatedSize - size, item.offset));
  const minOffset = max(0, item.offset - size + scrollBarWidth + item.size);
  if (alignment === defaults.SMART_ALIGNMENT) {
    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
      alignment = defaults.AUTO_ALIGNMENT;
    } else {
      alignment = defaults.CENTERED_ALIGNMENT;
    }
  }
  switch (alignment) {
    case defaults.START_ALIGNMENT: {
      return maxOffset;
    }
    case defaults.END_ALIGNMENT: {
      return minOffset;
    }
    case defaults.CENTERED_ALIGNMENT: {
      return Math.round(minOffset + (maxOffset - minOffset) / 2);
    }
    case defaults.AUTO_ALIGNMENT:
    default: {
      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
        return scrollOffset;
      } else if (minOffset > maxOffset) {
        return minOffset;
      } else if (scrollOffset < minOffset) {
        return minOffset;
      } else {
        return maxOffset;
      }
    }
  }
};
const DynamicSizeGrid = buildGrid["default"]({
  name: "ElDynamicSizeGrid",
  getColumnPosition: (props, idx, cache) => {
    const item = getItemFromCache(props, idx, cache, "column");
    return [item.size, item.offset];
  },
  getRowPosition: (props, idx, cache) => {
    const item = getItemFromCache(props, idx, cache, "row");
    return [item.size, item.offset];
  },
  getColumnOffset: (props, columnIndex, alignment, scrollLeft, cache, scrollBarWidth) => getOffset(props, columnIndex, alignment, scrollLeft, cache, "column", scrollBarWidth),
  getRowOffset: (props, rowIndex, alignment, scrollTop, cache, scrollBarWidth) => getOffset(props, rowIndex, alignment, scrollTop, cache, "row", scrollBarWidth),
  getColumnStartIndexForOffset: (props, scrollLeft, cache) => findItem(props, cache, scrollLeft, "column"),
  getColumnStopIndexForStartIndex: (props, startIndex, scrollLeft, cache) => {
    const item = getItemFromCache(props, startIndex, cache, "column");
    const maxOffset = scrollLeft + props.width;
    let offset = item.offset + item.size;
    let stopIndex = startIndex;
    while (stopIndex < props.totalColumn - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemFromCache(props, startIndex, cache, "column").size;
    }
    return stopIndex;
  },
  getEstimatedTotalHeight,
  getEstimatedTotalWidth,
  getRowStartIndexForOffset: (props, scrollTop, cache) => findItem(props, cache, scrollTop, "row"),
  getRowStopIndexForStartIndex: (props, startIndex, scrollTop, cache) => {
    const { totalRow, height } = props;
    const item = getItemFromCache(props, startIndex, cache, "row");
    const maxOffset = scrollTop + height;
    let offset = item.size + item.offset;
    let stopIndex = startIndex;
    while (stopIndex < totalRow - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemFromCache(props, stopIndex, cache, "row").size;
    }
    return stopIndex;
  },
  injectToInstance: (instance, cache) => {
    const resetAfter = ({ columnIndex, rowIndex }, forceUpdate) => {
      var _a, _b;
      forceUpdate = types.isUndefined(forceUpdate) ? true : forceUpdate;
      if (types.isNumber(columnIndex)) {
        cache.value.lastVisitedColumnIndex = Math.min(cache.value.lastVisitedColumnIndex, columnIndex - 1);
      }
      if (types.isNumber(rowIndex)) {
        cache.value.lastVisitedRowIndex = Math.min(cache.value.lastVisitedRowIndex, rowIndex - 1);
      }
      (_a = instance.exposed) == null ? void 0 : _a.getItemStyleCache.value(-1, null, null);
      if (forceUpdate)
        (_b = instance.proxy) == null ? void 0 : _b.$forceUpdate();
    };
    const resetAfterColumnIndex = (columnIndex, forceUpdate) => {
      resetAfter({
        columnIndex
      }, forceUpdate);
    };
    const resetAfterRowIndex = (rowIndex, forceUpdate) => {
      resetAfter({
        rowIndex
      }, forceUpdate);
    };
    Object.assign(instance.proxy, {
      resetAfterColumnIndex,
      resetAfterRowIndex,
      resetAfter
    });
  },
  initCache: ({
    estimatedColumnWidth = defaults.DEFAULT_DYNAMIC_LIST_ITEM_SIZE,
    estimatedRowHeight = defaults.DEFAULT_DYNAMIC_LIST_ITEM_SIZE
  }) => {
    const cache = {
      column: {},
      estimatedColumnWidth,
      estimatedRowHeight,
      lastVisitedColumnIndex: -1,
      lastVisitedRowIndex: -1,
      row: {}
    };
    return cache;
  },
  clearCache: false,
  validateProps: ({ columnWidth, rowHeight }) => {
    if (true) {
      if (!shared.isFunction(columnWidth)) {
        error.throwError(SCOPE, `
          "columnWidth" must be passed as function,
            instead ${typeof columnWidth} was given.
        `);
      }
      if (!shared.isFunction(rowHeight)) {
        error.throwError(SCOPE, `
          "rowHeight" must be passed as function,
            instead ${typeof rowHeight} was given.
        `);
      }
    }
  }
});

exports["default"] = DynamicSizeGrid;
//# sourceMappingURL=dynamic-size-grid.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-list.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/dynamic-size-list.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var buildList = __webpack_require__(/*! ../builders/build-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-list.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const SCOPE = "ElDynamicSizeList";
const getItemFromCache = (props, index, listCache) => {
  const { itemSize } = props;
  const { items, lastVisitedIndex } = listCache;
  if (index > lastVisitedIndex) {
    let offset = 0;
    if (lastVisitedIndex >= 0) {
      const item = items[lastVisitedIndex];
      offset = item.offset + item.size;
    }
    for (let i = lastVisitedIndex + 1; i <= index; i++) {
      const size = itemSize(i);
      items[i] = {
        offset,
        size
      };
      offset += size;
    }
    listCache.lastVisitedIndex = index;
  }
  return items[index];
};
const findItem = (props, listCache, offset) => {
  const { items, lastVisitedIndex } = listCache;
  const lastVisitedOffset = lastVisitedIndex > 0 ? items[lastVisitedIndex].offset : 0;
  if (lastVisitedOffset >= offset) {
    return bs(props, listCache, 0, lastVisitedIndex, offset);
  }
  return es(props, listCache, Math.max(0, lastVisitedIndex), offset);
};
const bs = (props, listCache, low, high, offset) => {
  while (low <= high) {
    const mid = low + Math.floor((high - low) / 2);
    const currentOffset = getItemFromCache(props, mid, listCache).offset;
    if (currentOffset === offset) {
      return mid;
    } else if (currentOffset < offset) {
      low = mid + 1;
    } else if (currentOffset > offset) {
      high = mid - 1;
    }
  }
  return Math.max(0, low - 1);
};
const es = (props, listCache, index, offset) => {
  const { total } = props;
  let exponent = 1;
  while (index < total && getItemFromCache(props, index, listCache).offset < offset) {
    index += exponent;
    exponent *= 2;
  }
  return bs(props, listCache, Math.floor(index / 2), Math.min(index, total - 1), offset);
};
const getEstimatedTotalSize = ({ total }, { items, estimatedItemSize, lastVisitedIndex }) => {
  let totalSizeOfMeasuredItems = 0;
  if (lastVisitedIndex >= total) {
    lastVisitedIndex = total - 1;
  }
  if (lastVisitedIndex >= 0) {
    const item = items[lastVisitedIndex];
    totalSizeOfMeasuredItems = item.offset + item.size;
  }
  const numUnmeasuredItems = total - lastVisitedIndex - 1;
  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;
  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;
};
const DynamicSizeList = buildList["default"]({
  name: "ElDynamicSizeList",
  getItemOffset: (props, index, listCache) => getItemFromCache(props, index, listCache).offset,
  getItemSize: (_, index, { items }) => items[index].size,
  getEstimatedTotalSize,
  getOffset: (props, index, alignment, scrollOffset, listCache) => {
    const { height, layout, width } = props;
    const size = utils.isHorizontal(layout) ? width : height;
    const item = getItemFromCache(props, index, listCache);
    const estimatedTotalSize = getEstimatedTotalSize(props, listCache);
    const maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, item.offset));
    const minOffset = Math.max(0, item.offset - size + item.size);
    if (alignment === defaults.SMART_ALIGNMENT) {
      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
        alignment = defaults.AUTO_ALIGNMENT;
      } else {
        alignment = defaults.CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case defaults.START_ALIGNMENT: {
        return maxOffset;
      }
      case defaults.END_ALIGNMENT: {
        return minOffset;
      }
      case defaults.CENTERED_ALIGNMENT: {
        return Math.round(minOffset + (maxOffset - minOffset) / 2);
      }
      case defaults.AUTO_ALIGNMENT:
      default: {
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
      }
    }
  },
  getStartIndexForOffset: (props, offset, listCache) => findItem(props, listCache, offset),
  getStopIndexForStartIndex: (props, startIndex, scrollOffset, listCache) => {
    const { height, total, layout, width } = props;
    const size = utils.isHorizontal(layout) ? width : height;
    const item = getItemFromCache(props, startIndex, listCache);
    const maxOffset = scrollOffset + size;
    let offset = item.offset + item.size;
    let stopIndex = startIndex;
    while (stopIndex < total - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemFromCache(props, stopIndex, listCache).size;
    }
    return stopIndex;
  },
  initCache({ estimatedItemSize = defaults.DEFAULT_DYNAMIC_LIST_ITEM_SIZE }, instance) {
    const cache = {
      items: {},
      estimatedItemSize,
      lastVisitedIndex: -1
    };
    cache.clearCacheAfterIndex = (index, forceUpdate = true) => {
      var _a, _b;
      cache.lastVisitedIndex = Math.min(cache.lastVisitedIndex, index - 1);
      (_a = instance.exposed) == null ? void 0 : _a.getItemStyleCache(-1);
      if (forceUpdate) {
        (_b = instance.proxy) == null ? void 0 : _b.$forceUpdate();
      }
    };
    return cache;
  },
  clearCache: false,
  validateProps: ({ itemSize }) => {
    if (true) {
      if (typeof itemSize !== "function") {
        error.throwError(SCOPE, `
          itemSize is required as function, but the given value was ${typeof itemSize}
        `);
      }
    }
  }
});

exports["default"] = DynamicSizeList;
//# sourceMappingURL=dynamic-size-list.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-grid.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-grid.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var buildGrid = __webpack_require__(/*! ../builders/build-grid.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-grid.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var types = __webpack_require__(/*! ../../../../utils/types.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/types.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const SCOPE = "ElFixedSizeGrid";
const FixedSizeGrid = buildGrid["default"]({
  name: "ElFixedSizeGrid",
  getColumnPosition: ({ columnWidth }, index) => [
    columnWidth,
    index * columnWidth
  ],
  getRowPosition: ({ rowHeight }, index) => [
    rowHeight,
    index * rowHeight
  ],
  getEstimatedTotalHeight: ({ totalRow, rowHeight }) => rowHeight * totalRow,
  getEstimatedTotalWidth: ({ totalColumn, columnWidth }) => columnWidth * totalColumn,
  getColumnOffset: ({ totalColumn, columnWidth, width }, columnIndex, alignment, scrollLeft, _, scrollBarWidth) => {
    width = Number(width);
    const lastColumnOffset = Math.max(0, totalColumn * columnWidth - width);
    const maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);
    const minOffset = Math.max(0, columnIndex * columnWidth - width + scrollBarWidth + columnWidth);
    if (alignment === "smart") {
      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {
        alignment = defaults.AUTO_ALIGNMENT;
      } else {
        alignment = defaults.CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case defaults.START_ALIGNMENT:
        return maxOffset;
      case defaults.END_ALIGNMENT:
        return minOffset;
      case defaults.CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(width / 2)) {
          return 0;
        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {
          return lastColumnOffset;
        } else {
          return middleOffset;
        }
      }
      case defaults.AUTO_ALIGNMENT:
      default:
        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {
          return scrollLeft;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollLeft < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getRowOffset: ({ rowHeight, height, totalRow }, rowIndex, align, scrollTop, _, scrollBarWidth) => {
    height = Number(height);
    const lastRowOffset = Math.max(0, totalRow * rowHeight - height);
    const maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);
    const minOffset = Math.max(0, rowIndex * rowHeight - height + scrollBarWidth + rowHeight);
    if (align === defaults.SMART_ALIGNMENT) {
      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {
        align = defaults.AUTO_ALIGNMENT;
      } else {
        align = defaults.CENTERED_ALIGNMENT;
      }
    }
    switch (align) {
      case defaults.START_ALIGNMENT:
        return maxOffset;
      case defaults.END_ALIGNMENT:
        return minOffset;
      case defaults.CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(height / 2)) {
          return 0;
        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {
          return lastRowOffset;
        } else {
          return middleOffset;
        }
      }
      case defaults.AUTO_ALIGNMENT:
      default:
        if (scrollTop >= minOffset && scrollTop <= maxOffset) {
          return scrollTop;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollTop < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getColumnStartIndexForOffset: ({ columnWidth, totalColumn }, scrollLeft) => Math.max(0, Math.min(totalColumn - 1, Math.floor(scrollLeft / columnWidth))),
  getColumnStopIndexForStartIndex: ({ columnWidth, totalColumn, width }, startIndex, scrollLeft) => {
    const left = startIndex * columnWidth;
    const visibleColumnsCount = Math.ceil((width + scrollLeft - left) / columnWidth);
    return Math.max(0, Math.min(totalColumn - 1, startIndex + visibleColumnsCount - 1));
  },
  getRowStartIndexForOffset: ({ rowHeight, totalRow }, scrollTop) => Math.max(0, Math.min(totalRow - 1, Math.floor(scrollTop / rowHeight))),
  getRowStopIndexForStartIndex: ({ rowHeight, totalRow, height }, startIndex, scrollTop) => {
    const top = startIndex * rowHeight;
    const numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);
    return Math.max(0, Math.min(totalRow - 1, startIndex + numVisibleRows - 1));
  },
  initCache: () => void 0,
  clearCache: true,
  validateProps: ({ columnWidth, rowHeight }) => {
    if (true) {
      if (!types.isNumber(columnWidth)) {
        error.throwError(SCOPE, `
          "columnWidth" must be passed as number,
            instead ${typeof columnWidth} was given.
        `);
      }
      if (!types.isNumber(rowHeight)) {
        error.throwError(SCOPE, `
          "columnWidth" must be passed as number,
            instead ${typeof rowHeight} was given.
        `);
      }
    }
  }
});

exports["default"] = FixedSizeGrid;
//# sourceMappingURL=fixed-size-grid.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-list.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/fixed-size-list.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var buildList = __webpack_require__(/*! ../builders/build-list.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/builders/build-list.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var shared = __webpack_require__(/*! @vue/shared */ "./node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");
var error = __webpack_require__(/*! ../../../../utils/error.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/error.js");

const FixedSizeList = buildList["default"]({
  name: "ElFixedSizeList",
  getItemOffset: ({ itemSize }, index) => index * itemSize,
  getItemSize: ({ itemSize }) => itemSize,
  getEstimatedTotalSize: ({ total, itemSize }) => itemSize * total,
  getOffset: ({ height, total, itemSize, layout, width }, index, alignment, scrollOffset) => {
    const size = utils.isHorizontal(layout) ? width : height;
    if ( true && shared.isString(size)) {
      error.throwError("[ElVirtualList]", `
        You should set
          width/height
        to number when your layout is
          horizontal/vertical
      `);
    }
    const lastItemOffset = Math.max(0, total * itemSize - size);
    const maxOffset = Math.min(lastItemOffset, index * itemSize);
    const minOffset = Math.max(0, (index + 1) * itemSize - size);
    if (alignment === defaults.SMART_ALIGNMENT) {
      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
        alignment = defaults.AUTO_ALIGNMENT;
      } else {
        alignment = defaults.CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case defaults.START_ALIGNMENT: {
        return maxOffset;
      }
      case defaults.END_ALIGNMENT: {
        return minOffset;
      }
      case defaults.CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(size / 2)) {
          return 0;
        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {
          return lastItemOffset;
        } else {
          return middleOffset;
        }
      }
      case defaults.AUTO_ALIGNMENT:
      default: {
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
      }
    }
  },
  getStartIndexForOffset: ({ total, itemSize }, offset) => Math.max(0, Math.min(total - 1, Math.floor(offset / itemSize))),
  getStopIndexForStartIndex: ({ height, total, itemSize, layout, width }, startIndex, scrollOffset) => {
    const offset = startIndex * itemSize;
    const size = utils.isHorizontal(layout) ? width : height;
    const numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);
    return Math.max(0, Math.min(total - 1, startIndex + numVisibleItems - 1));
  },
  initCache() {
    return void 0;
  },
  clearCache: true,
  validateProps() {
  }
});

exports["default"] = FixedSizeList;
//# sourceMappingURL=fixed-size-list.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/scrollbar.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/components/scrollbar.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
__webpack_require__(/*! ../../../scrollbar/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/scrollbar/index.js");
__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
__webpack_require__(/*! ../../../../hooks/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/index.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var props = __webpack_require__(/*! ../props.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js");
var utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js");
var index = __webpack_require__(/*! ../../../../hooks/use-namespace/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/hooks/use-namespace/index.js");
var util = __webpack_require__(/*! ../../../scrollbar/src/util.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/scrollbar/src/util.js");
var raf = __webpack_require__(/*! ../../../../utils/raf.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/raf.js");

const ScrollBar = vue.defineComponent({
  name: "ElVirtualScrollBar",
  props: props.virtualizedScrollbarProps,
  emits: ["scroll", "start-move", "stop-move"],
  setup(props, { emit }) {
    const GAP = vue.computed(() => props.startGap + props.endGap);
    const nsVirtualScrollbar = index.useNamespace("virtual-scrollbar");
    const nsScrollbar = index.useNamespace("scrollbar");
    const trackRef = vue.ref();
    const thumbRef = vue.ref();
    let frameHandle = null;
    let onselectstartStore = null;
    const state = vue.reactive({
      isDragging: false,
      traveled: 0
    });
    const bar = vue.computed(() => util.BAR_MAP[props.layout]);
    const trackSize = vue.computed(() => props.clientSize - vue.unref(GAP));
    const trackStyle = vue.computed(() => ({
      position: "absolute",
      width: `${defaults.HORIZONTAL === props.layout ? trackSize.value : props.scrollbarSize}px`,
      height: `${defaults.HORIZONTAL === props.layout ? props.scrollbarSize : trackSize.value}px`,
      [defaults.ScrollbarDirKey[props.layout]]: "2px",
      right: "2px",
      bottom: "2px",
      borderRadius: "4px"
    }));
    const thumbSize = vue.computed(() => {
      const ratio = props.ratio;
      const clientSize = props.clientSize;
      if (ratio >= 100) {
        return Number.POSITIVE_INFINITY;
      }
      if (ratio >= 50) {
        return ratio * clientSize / 100;
      }
      const SCROLLBAR_MAX_SIZE = clientSize / 3;
      return Math.floor(Math.min(Math.max(ratio * clientSize, defaults.SCROLLBAR_MIN_SIZE), SCROLLBAR_MAX_SIZE));
    });
    const thumbStyle = vue.computed(() => {
      if (!Number.isFinite(thumbSize.value)) {
        return {
          display: "none"
        };
      }
      const thumb = `${thumbSize.value}px`;
      const style = utils.renderThumbStyle({
        bar: bar.value,
        size: thumb,
        move: state.traveled
      }, props.layout);
      return style;
    });
    const totalSteps = vue.computed(() => Math.floor(props.clientSize - thumbSize.value - vue.unref(GAP)));
    const attachEvents = () => {
      window.addEventListener("mousemove", onMouseMove);
      window.addEventListener("mouseup", onMouseUp);
      const thumbEl = vue.unref(thumbRef);
      if (!thumbEl)
        return;
      onselectstartStore = document.onselectstart;
      document.onselectstart = () => false;
      thumbEl.addEventListener("touchmove", onMouseMove);
      thumbEl.addEventListener("touchend", onMouseUp);
    };
    const detachEvents = () => {
      window.removeEventListener("mousemove", onMouseMove);
      window.removeEventListener("mouseup", onMouseUp);
      document.onselectstart = onselectstartStore;
      onselectstartStore = null;
      const thumbEl = vue.unref(thumbRef);
      if (!thumbEl)
        return;
      thumbEl.removeEventListener("touchmove", onMouseMove);
      thumbEl.removeEventListener("touchend", onMouseUp);
    };
    const onThumbMouseDown = (e) => {
      e.stopImmediatePropagation();
      if (e.ctrlKey || [1, 2].includes(e.button)) {
        return;
      }
      state.isDragging = true;
      state[bar.value.axis] = e.currentTarget[bar.value.offset] - (e[bar.value.client] - e.currentTarget.getBoundingClientRect()[bar.value.direction]);
      emit("start-move");
      attachEvents();
    };
    const onMouseUp = () => {
      state.isDragging = false;
      state[bar.value.axis] = 0;
      emit("stop-move");
      detachEvents();
    };
    const onMouseMove = (e) => {
      const { isDragging } = state;
      if (!isDragging)
        return;
      if (!thumbRef.value || !trackRef.value)
        return;
      const prevPage = state[bar.value.axis];
      if (!prevPage)
        return;
      raf.cAF(frameHandle);
      const offset = (trackRef.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;
      const thumbClickPosition = thumbRef.value[bar.value.offset] - prevPage;
      const distance = offset - thumbClickPosition;
      frameHandle = raf.rAF(() => {
        state.traveled = Math.max(props.startGap, Math.min(distance, totalSteps.value));
        emit("scroll", distance, totalSteps.value);
      });
    };
    const clickTrackHandler = (e) => {
      const offset = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);
      const thumbHalf = thumbRef.value[bar.value.offset] / 2;
      const distance = offset - thumbHalf;
      state.traveled = Math.max(0, Math.min(distance, totalSteps.value));
      emit("scroll", distance, totalSteps.value);
    };
    vue.watch(() => props.scrollFrom, (v) => {
      if (state.isDragging)
        return;
      state.traveled = Math.ceil(v * totalSteps.value);
    });
    vue.onBeforeUnmount(() => {
      detachEvents();
    });
    return () => {
      return vue.h("div", {
        role: "presentation",
        ref: trackRef,
        class: [
          nsVirtualScrollbar.b(),
          props.class,
          (props.alwaysOn || state.isDragging) && "always-on"
        ],
        style: trackStyle.value,
        onMousedown: vue.withModifiers(clickTrackHandler, ["stop", "prevent"]),
        onTouchstartPrevent: onThumbMouseDown
      }, vue.h("div", {
        ref: thumbRef,
        class: nsScrollbar.e("thumb"),
        style: thumbStyle.value,
        onMousedown: onThumbMouseDown
      }, []));
    };
  }
});

exports["default"] = ScrollBar;
//# sourceMappingURL=scrollbar.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const DEFAULT_DYNAMIC_LIST_ITEM_SIZE = 50;
const ITEM_RENDER_EVT = "itemRendered";
const SCROLL_EVT = "scroll";
const FORWARD = "forward";
const BACKWARD = "backward";
const AUTO_ALIGNMENT = "auto";
const SMART_ALIGNMENT = "smart";
const START_ALIGNMENT = "start";
const CENTERED_ALIGNMENT = "center";
const END_ALIGNMENT = "end";
const HORIZONTAL = "horizontal";
const VERTICAL = "vertical";
const LTR = "ltr";
const RTL = "rtl";
const RTL_OFFSET_NAG = "negative";
const RTL_OFFSET_POS_ASC = "positive-ascending";
const RTL_OFFSET_POS_DESC = "positive-descending";
const PageKey = {
  [HORIZONTAL]: "pageX",
  [VERTICAL]: "pageY"
};
const ScrollbarSizeKey = {
  [HORIZONTAL]: "height",
  [VERTICAL]: "width"
};
const ScrollbarDirKey = {
  [HORIZONTAL]: "left",
  [VERTICAL]: "top"
};
const SCROLLBAR_MIN_SIZE = 20;

exports.AUTO_ALIGNMENT = AUTO_ALIGNMENT;
exports.BACKWARD = BACKWARD;
exports.CENTERED_ALIGNMENT = CENTERED_ALIGNMENT;
exports.DEFAULT_DYNAMIC_LIST_ITEM_SIZE = DEFAULT_DYNAMIC_LIST_ITEM_SIZE;
exports.END_ALIGNMENT = END_ALIGNMENT;
exports.FORWARD = FORWARD;
exports.HORIZONTAL = HORIZONTAL;
exports.ITEM_RENDER_EVT = ITEM_RENDER_EVT;
exports.LTR = LTR;
exports.PageKey = PageKey;
exports.RTL = RTL;
exports.RTL_OFFSET_NAG = RTL_OFFSET_NAG;
exports.RTL_OFFSET_POS_ASC = RTL_OFFSET_POS_ASC;
exports.RTL_OFFSET_POS_DESC = RTL_OFFSET_POS_DESC;
exports.SCROLLBAR_MIN_SIZE = SCROLLBAR_MIN_SIZE;
exports.SCROLL_EVT = SCROLL_EVT;
exports.SMART_ALIGNMENT = SMART_ALIGNMENT;
exports.START_ALIGNMENT = START_ALIGNMENT;
exports.ScrollbarDirKey = ScrollbarDirKey;
exports.ScrollbarSizeKey = ScrollbarSizeKey;
exports.VERTICAL = VERTICAL;
//# sourceMappingURL=defaults.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-cache.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-cache.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var lodashUnified = __webpack_require__(/*! lodash-unified */ "./node_modules/.pnpm/lodash-unified@1.0.3_@types+lodash-es@4.17.9_lodash-es@4.17.21_lodash@4.17.21/node_modules/lodash-unified/require.cjs");
var memoOne = __webpack_require__(/*! memoize-one */ "./node_modules/.pnpm/memoize-one@6.0.0/node_modules/memoize-one/dist/memoize-one.esm.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var memoOne__default = /*#__PURE__*/_interopDefaultLegacy(memoOne);

const useCache = () => {
  const vm = vue.getCurrentInstance();
  const props = vm.proxy.$props;
  return vue.computed(() => {
    const _getItemStyleCache = (_, __, ___) => ({});
    return props.perfMode ? lodashUnified.memoize(_getItemStyleCache) : memoOne__default["default"](_getItemStyleCache);
  });
};

exports.useCache = useCache;
//# sourceMappingURL=use-cache.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-grid-wheel.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-grid-wheel.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var raf = __webpack_require__(/*! ../../../../utils/raf.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/raf.js");

const useGridWheel = ({ atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }, onWheelDelta) => {
  let frameHandle = null;
  let xOffset = 0;
  let yOffset = 0;
  const hasReachedEdge = (x, y) => {
    const xEdgeReached = x <= 0 && atXStartEdge.value || x >= 0 && atXEndEdge.value;
    const yEdgeReached = y <= 0 && atYStartEdge.value || y >= 0 && atYEndEdge.value;
    return xEdgeReached && yEdgeReached;
  };
  const onWheel = (e) => {
    raf.cAF(frameHandle);
    let x = e.deltaX;
    let y = e.deltaY;
    if (Math.abs(x) > Math.abs(y)) {
      y = 0;
    } else {
      x = 0;
    }
    if (e.shiftKey && y !== 0) {
      x = y;
      y = 0;
    }
    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x, yOffset + y))
      return;
    xOffset += x;
    yOffset += y;
    e.preventDefault();
    frameHandle = raf.rAF(() => {
      onWheelDelta(xOffset, yOffset);
      xOffset = 0;
      yOffset = 0;
    });
  };
  return {
    hasReachedEdge,
    onWheel
  };
};

exports.useGridWheel = useGridWheel;
//# sourceMappingURL=use-grid-wheel.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-wheel.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/hooks/use-wheel.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var defaults = __webpack_require__(/*! ../defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var raf = __webpack_require__(/*! ../../../../utils/raf.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/raf.js");
var browser = __webpack_require__(/*! ../../../../utils/browser.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/browser.js");

const LayoutKeys = {
  [defaults.HORIZONTAL]: "deltaX",
  [defaults.VERTICAL]: "deltaY"
};
const useWheel = ({ atEndEdge, atStartEdge, layout }, onWheelDelta) => {
  let frameHandle;
  let offset = 0;
  const hasReachedEdge = (offset2) => {
    const edgeReached = offset2 < 0 && atStartEdge.value || offset2 > 0 && atEndEdge.value;
    return edgeReached;
  };
  const onWheel = (e) => {
    raf.cAF(frameHandle);
    const newOffset = e[LayoutKeys[layout.value]];
    if (hasReachedEdge(offset) && hasReachedEdge(offset + newOffset))
      return;
    offset += newOffset;
    if (!browser.isFirefox()) {
      e.preventDefault();
    }
    frameHandle = raf.rAF(() => {
      onWheelDelta(offset);
      offset = 0;
    });
  };
  return {
    hasReachedEdge,
    onWheel
  };
};

exports["default"] = useWheel;
//# sourceMappingURL=use-wheel.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/props.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var defaults = __webpack_require__(/*! ./defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");
var typescript = __webpack_require__(/*! ../../../utils/typescript.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/typescript.js");

const itemSize = runtime.buildProp({
  type: runtime.definePropType([Number, Function]),
  required: true
});
const estimatedItemSize = runtime.buildProp({
  type: Number
});
const cache = runtime.buildProp({
  type: Number,
  default: 2
});
const direction = runtime.buildProp({
  type: String,
  values: ["ltr", "rtl"],
  default: "ltr"
});
const initScrollOffset = runtime.buildProp({
  type: Number,
  default: 0
});
const total = runtime.buildProp({
  type: Number,
  required: true
});
const layout = runtime.buildProp({
  type: String,
  values: ["horizontal", "vertical"],
  default: defaults.VERTICAL
});
const virtualizedProps = runtime.buildProps({
  className: {
    type: String,
    default: ""
  },
  containerElement: {
    type: runtime.definePropType([String, Object]),
    default: "div"
  },
  data: {
    type: runtime.definePropType(Array),
    default: () => typescript.mutable([])
  },
  direction,
  height: {
    type: [String, Number],
    required: true
  },
  innerElement: {
    type: [String, Object],
    default: "div"
  },
  style: {
    type: runtime.definePropType([Object, String, Array])
  },
  useIsScrolling: {
    type: Boolean,
    default: false
  },
  width: {
    type: [Number, String],
    required: false
  },
  perfMode: {
    type: Boolean,
    default: true
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: false
  }
});
const virtualizedListProps = runtime.buildProps({
  cache,
  estimatedItemSize,
  layout,
  initScrollOffset,
  total,
  itemSize,
  ...virtualizedProps
});
const scrollbarSize = {
  type: Number,
  default: 6
};
const startGap = { type: Number, default: 0 };
const endGap = { type: Number, default: 2 };
const virtualizedGridProps = runtime.buildProps({
  columnCache: cache,
  columnWidth: itemSize,
  estimatedColumnWidth: estimatedItemSize,
  estimatedRowHeight: estimatedItemSize,
  initScrollLeft: initScrollOffset,
  initScrollTop: initScrollOffset,
  itemKey: {
    type: runtime.definePropType(Function),
    default: ({
      columnIndex,
      rowIndex
    }) => `${rowIndex}:${columnIndex}`
  },
  rowCache: cache,
  rowHeight: itemSize,
  totalColumn: total,
  totalRow: total,
  hScrollbarSize: scrollbarSize,
  vScrollbarSize: scrollbarSize,
  scrollbarStartGap: startGap,
  scrollbarEndGap: endGap,
  role: String,
  ...virtualizedProps
});
const virtualizedScrollbarProps = runtime.buildProps({
  alwaysOn: Boolean,
  class: String,
  layout,
  total,
  ratio: {
    type: Number,
    required: true
  },
  clientSize: {
    type: Number,
    required: true
  },
  scrollFrom: {
    type: Number,
    required: true
  },
  scrollbarSize,
  startGap,
  endGap,
  visible: Boolean
});

exports.virtualizedGridProps = virtualizedGridProps;
exports.virtualizedListProps = virtualizedListProps;
exports.virtualizedProps = virtualizedProps;
exports.virtualizedScrollbarProps = virtualizedScrollbarProps;
//# sourceMappingURL=props.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/types.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/types.js ***!
  \*****************************************************************************************************************************/
/***/ (() => {



//# sourceMappingURL=types.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/utils.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var defaults = __webpack_require__(/*! ./defaults.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/virtual-list/src/defaults.js");

const getScrollDir = (prev, cur) => prev < cur ? defaults.FORWARD : defaults.BACKWARD;
const isHorizontal = (dir) => dir === defaults.LTR || dir === defaults.RTL || dir === defaults.HORIZONTAL;
const isRTL = (dir) => dir === defaults.RTL;
let cachedRTLResult = null;
function getRTLOffsetType(recalculate = false) {
  if (cachedRTLResult === null || recalculate) {
    const outerDiv = document.createElement("div");
    const outerStyle = outerDiv.style;
    outerStyle.width = "50px";
    outerStyle.height = "50px";
    outerStyle.overflow = "scroll";
    outerStyle.direction = "rtl";
    const innerDiv = document.createElement("div");
    const innerStyle = innerDiv.style;
    innerStyle.width = "100px";
    innerStyle.height = "100px";
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);
    if (outerDiv.scrollLeft > 0) {
      cachedRTLResult = defaults.RTL_OFFSET_POS_DESC;
    } else {
      outerDiv.scrollLeft = 1;
      if (outerDiv.scrollLeft === 0) {
        cachedRTLResult = defaults.RTL_OFFSET_NAG;
      } else {
        cachedRTLResult = defaults.RTL_OFFSET_POS_ASC;
      }
    }
    document.body.removeChild(outerDiv);
    return cachedRTLResult;
  }
  return cachedRTLResult;
}
const getRelativePos = (e, layout) => {
  return "touches" in e ? e.touches[0][defaults.PageKey[layout]] : e[defaults.PageKey[layout]];
};
function renderThumbStyle({ move, size, bar }, layout) {
  const style = {};
  const translate = `translate${bar.axis}(${move}px)`;
  style[bar.size] = size;
  style.transform = translate;
  style.msTransform = translate;
  style.webkitTransform = translate;
  if (layout === "horizontal") {
    style.height = "100%";
  } else {
    style.width = "100%";
  }
  return style;
}

exports.getRTLOffsetType = getRTLOffsetType;
exports.getRelativePos = getRelativePos;
exports.getScrollDir = getScrollDir;
exports.isHorizontal = isHorizontal;
exports.isRTL = isRTL;
exports.renderThumbStyle = renderThumbStyle;
//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/index.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/index.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var visualHidden = __webpack_require__(/*! ./src/visual-hidden2.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden2.js");
var visualHidden$1 = __webpack_require__(/*! ./src/visual-hidden.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden.js");



exports.ElVisuallyHidden = visualHidden["default"];
exports["default"] = visualHidden["default"];
exports.visualHiddenProps = visualHidden$1.visualHiddenProps;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

__webpack_require__(/*! ../../../utils/index.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/index.js");
var runtime = __webpack_require__(/*! ../../../utils/vue/props/runtime.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/utils/vue/props/runtime.js");

const visualHiddenProps = runtime.buildProps({
  style: {
    type: runtime.definePropType([String, Object, Array]),
    default: () => ({})
  }
});

exports.visualHiddenProps = visualHiddenProps;
//# sourceMappingURL=visual-hidden.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden2.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden2.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var vue = __webpack_require__(/*! vue */ "./node_modules/.pnpm/vue@3.3.4/node_modules/vue/index.js");
var visualHidden = __webpack_require__(/*! ./visual-hidden.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/components/visual-hidden/src/visual-hidden.js");
var pluginVue_exportHelper = __webpack_require__(/*! ../../../_virtual/plugin-vue_export-helper.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/_virtual/plugin-vue_export-helper.js");

const __default__ = vue.defineComponent({
  name: "ElVisuallyHidden"
});
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...__default__,
  props: visualHidden.visualHiddenProps,
  setup(__props) {
    const props = __props;
    const computedStyle = vue.computed(() => {
      return [
        props.style,
        {
          position: "absolute",
          border: 0,
          width: 1,
          height: 1,
          padding: 0,
          margin: -1,
          overflow: "hidden",
          clip: "rect(0, 0, 0, 0)",
          whiteSpace: "nowrap",
          wordWrap: "normal"
        }
      ];
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("span", vue.mergeProps(_ctx.$attrs, { style: vue.unref(computedStyle) }), [
        vue.renderSlot(_ctx.$slots, "default")
      ], 16);
    };
  }
});
var ElVisuallyHidden = /* @__PURE__ */ pluginVue_exportHelper["default"](_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/visual-hidden/src/visual-hidden.vue"]]);

exports["default"] = ElVisuallyHidden;
//# sourceMappingURL=visual-hidden2.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const EVENT_CODE = {
  tab: "Tab",
  enter: "Enter",
  space: "Space",
  left: "ArrowLeft",
  up: "ArrowUp",
  right: "ArrowRight",
  down: "ArrowDown",
  esc: "Escape",
  delete: "Delete",
  backspace: "Backspace",
  numpadEnter: "NumpadEnter",
  pageUp: "PageUp",
  pageDown: "PageDown",
  home: "Home",
  end: "End"
};

exports.EVENT_CODE = EVENT_CODE;
//# sourceMappingURL=aria.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/date.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/date.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const datePickTypes = [
  "year",
  "month",
  "date",
  "dates",
  "week",
  "datetime",
  "datetimerange",
  "daterange",
  "monthrange"
];
const WEEK_DAYS = [
  "sun",
  "mon",
  "tue",
  "wed",
  "thu",
  "fri",
  "sat"
];

exports.WEEK_DAYS = WEEK_DAYS;
exports.datePickTypes = datePickTypes;
//# sourceMappingURL=date.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const UPDATE_MODEL_EVENT = "update:modelValue";
const CHANGE_EVENT = "change";
const INPUT_EVENT = "input";

exports.CHANGE_EVENT = CHANGE_EVENT;
exports.INPUT_EVENT = INPUT_EVENT;
exports.UPDATE_MODEL_EVENT = UPDATE_MODEL_EVENT;
//# sourceMappingURL=event.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/index.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var aria = __webpack_require__(/*! ./aria.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/aria.js");
var date = __webpack_require__(/*! ./date.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/date.js");
var event = __webpack_require__(/*! ./event.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/event.js");
var key = __webpack_require__(/*! ./key.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/key.js");
var size = __webpack_require__(/*! ./size.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/size.js");



exports.EVENT_CODE = aria.EVENT_CODE;
exports.WEEK_DAYS = date.WEEK_DAYS;
exports.datePickTypes = date.datePickTypes;
exports.CHANGE_EVENT = event.CHANGE_EVENT;
exports.INPUT_EVENT = event.INPUT_EVENT;
exports.UPDATE_MODEL_EVENT = event.UPDATE_MODEL_EVENT;
exports.INSTALLED_KEY = key.INSTALLED_KEY;
exports.componentSizeMap = size.componentSizeMap;
exports.componentSizes = size.componentSizes;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/key.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/key.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const INSTALLED_KEY = Symbol("INSTALLED_KEY");

exports.INSTALLED_KEY = INSTALLED_KEY;
//# sourceMappingURL=key.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/size.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/constants/size.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

const componentSizes = ["", "default", "small", "large"];
const componentSizeMap = {
  large: 40,
  default: 32,
  small: 24
};

exports.componentSizeMap = componentSizeMap;
exports.componentSizes = componentSizes;
//# sourceMappingURL=size.js.map


/***/ }),

/***/ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/defaults.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/defaults.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

var makeInstaller = __webpack_require__(/*! ./make-installer.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/make-installer.js");
var component = __webpack_require__(/*! ./component.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/component.js");
var plugin = __webpack_require__(/*! ./plugin.js */ "./node_modules/.pnpm/element-plus@2.3.12_vue@3.3.4/node_modules/element-plus/lib/plugin.js");

var installer = makeInstaller.makeInstaller([...component["default"], ...plugin["default"]]);

exports["default"] = installer;
//# sourceMappingURL=defaults.js.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_pnpm_element-plus_2_3_12_vue_3_3_4_node_modules_element-plus_lib_compone-4a10fc.entry.js.map